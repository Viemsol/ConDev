

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 22 19:56:56 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0l,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	_sys_ver_text,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0l,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackBANK0l,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.45
    54                           ; Generated 16/11/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F18313 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0097                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  018C                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0216                     	;# 
   181  0216                     	;# 
   182  0217                     	;# 
   183  0217                     	;# 
   184  028C                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0297                     	;# 
   194  0298                     	;# 
   195  030C                     	;# 
   196  038C                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0498                     	;# 
   206  0498                     	;# 
   207  0499                     	;# 
   208  049A                     	;# 
   209  049B                     	;# 
   210  049B                     	;# 
   211  049C                     	;# 
   212  049D                     	;# 
   213  049E                     	;# 
   214  049F                     	;# 
   215  0617                     	;# 
   216  0618                     	;# 
   217  0619                     	;# 
   218  0619                     	;# 
   219  061A                     	;# 
   220  061B                     	;# 
   221  061C                     	;# 
   222  061C                     	;# 
   223  0691                     	;# 
   224  0692                     	;# 
   225  0693                     	;# 
   226  0694                     	;# 
   227  0695                     	;# 
   228  0696                     	;# 
   229  0697                     	;# 
   230  0698                     	;# 
   231  0699                     	;# 
   232  0891                     	;# 
   233  0891                     	;# 
   234  0891                     	;# 
   235  0891                     	;# 
   236  0891                     	;# 
   237  0891                     	;# 
   238  0892                     	;# 
   239  0892                     	;# 
   240  0892                     	;# 
   241  0893                     	;# 
   242  0893                     	;# 
   243  0893                     	;# 
   244  0893                     	;# 
   245  0893                     	;# 
   246  0893                     	;# 
   247  0894                     	;# 
   248  0894                     	;# 
   249  0894                     	;# 
   250  0895                     	;# 
   251  0895                     	;# 
   252  0895                     	;# 
   253  0896                     	;# 
   254  0896                     	;# 
   255  0896                     	;# 
   256  089B                     	;# 
   257  0911                     	;# 
   258  0912                     	;# 
   259  0913                     	;# 
   260  0914                     	;# 
   261  0915                     	;# 
   262  0916                     	;# 
   263  0918                     	;# 
   264  0919                     	;# 
   265  091A                     	;# 
   266  091B                     	;# 
   267  091C                     	;# 
   268  091D                     	;# 
   269  091E                     	;# 
   270  091F                     	;# 
   271  0E0F                     	;# 
   272  0E10                     	;# 
   273  0E11                     	;# 
   274  0E12                     	;# 
   275  0E13                     	;# 
   276  0E14                     	;# 
   277  0E15                     	;# 
   278  0E18                     	;# 
   279  0E1A                     	;# 
   280  0E1B                     	;# 
   281  0E1C                     	;# 
   282  0E20                     	;# 
   283  0E21                     	;# 
   284  0E22                     	;# 
   285  0E24                     	;# 
   286  0E25                     	;# 
   287  0E28                     	;# 
   288  0E29                     	;# 
   289  0E2A                     	;# 
   290  0E2B                     	;# 
   291  0E90                     	;# 
   292  0E91                     	;# 
   293  0E92                     	;# 
   294  0E94                     	;# 
   295  0E95                     	;# 
   296  0F0F                     	;# 
   297  0F10                     	;# 
   298  0F11                     	;# 
   299  0F12                     	;# 
   300  0F13                     	;# 
   301  0F14                     	;# 
   302  0F15                     	;# 
   303  0F16                     	;# 
   304  0F17                     	;# 
   305  0F18                     	;# 
   306  0F19                     	;# 
   307  0F1A                     	;# 
   308  0F1B                     	;# 
   309  0F1C                     	;# 
   310  0F1D                     	;# 
   311  0F1E                     	;# 
   312  0F1F                     	;# 
   313  0F20                     	;# 
   314  0F21                     	;# 
   315  0F22                     	;# 
   316  0F23                     	;# 
   317  0FE4                     	;# 
   318  0FE5                     	;# 
   319  0FE6                     	;# 
   320  0FE7                     	;# 
   321  0FE8                     	;# 
   322  0FE9                     	;# 
   323  0FEA                     	;# 
   324  0FEB                     	;# 
   325  0FED                     	;# 
   326  0FEE                     	;# 
   327  0FEF                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  008C                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0097                     	;# 
   367  009B                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  0111                     	;# 
   375  0112                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  018C                     	;# 
   382  0197                     	;# 
   383  0199                     	;# 
   384  0199                     	;# 
   385  0199                     	;# 
   386  019A                     	;# 
   387  019A                     	;# 
   388  019A                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019C                     	;# 
   395  019C                     	;# 
   396  019C                     	;# 
   397  019D                     	;# 
   398  019D                     	;# 
   399  019D                     	;# 
   400  019E                     	;# 
   401  019E                     	;# 
   402  019E                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  019F                     	;# 
   406  019F                     	;# 
   407  019F                     	;# 
   408  020C                     	;# 
   409  0211                     	;# 
   410  0211                     	;# 
   411  0212                     	;# 
   412  0212                     	;# 
   413  0213                     	;# 
   414  0213                     	;# 
   415  0214                     	;# 
   416  0214                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0216                     	;# 
   422  0216                     	;# 
   423  0217                     	;# 
   424  0217                     	;# 
   425  028C                     	;# 
   426  0291                     	;# 
   427  0291                     	;# 
   428  0292                     	;# 
   429  0293                     	;# 
   430  0294                     	;# 
   431  0295                     	;# 
   432  0295                     	;# 
   433  0296                     	;# 
   434  0297                     	;# 
   435  0298                     	;# 
   436  030C                     	;# 
   437  038C                     	;# 
   438  0391                     	;# 
   439  0392                     	;# 
   440  0393                     	;# 
   441  039A                     	;# 
   442  039C                     	;# 
   443  039D                     	;# 
   444  039E                     	;# 
   445  039F                     	;# 
   446  0498                     	;# 
   447  0498                     	;# 
   448  0499                     	;# 
   449  049A                     	;# 
   450  049B                     	;# 
   451  049B                     	;# 
   452  049C                     	;# 
   453  049D                     	;# 
   454  049E                     	;# 
   455  049F                     	;# 
   456  0617                     	;# 
   457  0618                     	;# 
   458  0619                     	;# 
   459  0619                     	;# 
   460  061A                     	;# 
   461  061B                     	;# 
   462  061C                     	;# 
   463  061C                     	;# 
   464  0691                     	;# 
   465  0692                     	;# 
   466  0693                     	;# 
   467  0694                     	;# 
   468  0695                     	;# 
   469  0696                     	;# 
   470  0697                     	;# 
   471  0698                     	;# 
   472  0699                     	;# 
   473  0891                     	;# 
   474  0891                     	;# 
   475  0891                     	;# 
   476  0891                     	;# 
   477  0891                     	;# 
   478  0891                     	;# 
   479  0892                     	;# 
   480  0892                     	;# 
   481  0892                     	;# 
   482  0893                     	;# 
   483  0893                     	;# 
   484  0893                     	;# 
   485  0893                     	;# 
   486  0893                     	;# 
   487  0893                     	;# 
   488  0894                     	;# 
   489  0894                     	;# 
   490  0894                     	;# 
   491  0895                     	;# 
   492  0895                     	;# 
   493  0895                     	;# 
   494  0896                     	;# 
   495  0896                     	;# 
   496  0896                     	;# 
   497  089B                     	;# 
   498  0911                     	;# 
   499  0912                     	;# 
   500  0913                     	;# 
   501  0914                     	;# 
   502  0915                     	;# 
   503  0916                     	;# 
   504  0918                     	;# 
   505  0919                     	;# 
   506  091A                     	;# 
   507  091B                     	;# 
   508  091C                     	;# 
   509  091D                     	;# 
   510  091E                     	;# 
   511  091F                     	;# 
   512  0E0F                     	;# 
   513  0E10                     	;# 
   514  0E11                     	;# 
   515  0E12                     	;# 
   516  0E13                     	;# 
   517  0E14                     	;# 
   518  0E15                     	;# 
   519  0E18                     	;# 
   520  0E1A                     	;# 
   521  0E1B                     	;# 
   522  0E1C                     	;# 
   523  0E20                     	;# 
   524  0E21                     	;# 
   525  0E22                     	;# 
   526  0E24                     	;# 
   527  0E25                     	;# 
   528  0E28                     	;# 
   529  0E29                     	;# 
   530  0E2A                     	;# 
   531  0E2B                     	;# 
   532  0E90                     	;# 
   533  0E91                     	;# 
   534  0E92                     	;# 
   535  0E94                     	;# 
   536  0E95                     	;# 
   537  0F0F                     	;# 
   538  0F10                     	;# 
   539  0F11                     	;# 
   540  0F12                     	;# 
   541  0F13                     	;# 
   542  0F14                     	;# 
   543  0F15                     	;# 
   544  0F16                     	;# 
   545  0F17                     	;# 
   546  0F18                     	;# 
   547  0F19                     	;# 
   548  0F1A                     	;# 
   549  0F1B                     	;# 
   550  0F1C                     	;# 
   551  0F1D                     	;# 
   552  0F1E                     	;# 
   553  0F1F                     	;# 
   554  0F20                     	;# 
   555  0F21                     	;# 
   556  0F22                     	;# 
   557  0F23                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0015                     	;# 
   589  0016                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0097                     	;# 
   608  009B                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  010C                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0115                     	;# 
   618  0116                     	;# 
   619  0117                     	;# 
   620  0118                     	;# 
   621  0119                     	;# 
   622  018C                     	;# 
   623  0197                     	;# 
   624  0199                     	;# 
   625  0199                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019A                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019D                     	;# 
   640  019D                     	;# 
   641  019E                     	;# 
   642  019E                     	;# 
   643  019E                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  020C                     	;# 
   650  0211                     	;# 
   651  0211                     	;# 
   652  0212                     	;# 
   653  0212                     	;# 
   654  0213                     	;# 
   655  0213                     	;# 
   656  0214                     	;# 
   657  0214                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  028C                     	;# 
   667  0291                     	;# 
   668  0291                     	;# 
   669  0292                     	;# 
   670  0293                     	;# 
   671  0294                     	;# 
   672  0295                     	;# 
   673  0295                     	;# 
   674  0296                     	;# 
   675  0297                     	;# 
   676  0298                     	;# 
   677  030C                     	;# 
   678  038C                     	;# 
   679  0391                     	;# 
   680  0392                     	;# 
   681  0393                     	;# 
   682  039A                     	;# 
   683  039C                     	;# 
   684  039D                     	;# 
   685  039E                     	;# 
   686  039F                     	;# 
   687  0498                     	;# 
   688  0498                     	;# 
   689  0499                     	;# 
   690  049A                     	;# 
   691  049B                     	;# 
   692  049B                     	;# 
   693  049C                     	;# 
   694  049D                     	;# 
   695  049E                     	;# 
   696  049F                     	;# 
   697  0617                     	;# 
   698  0618                     	;# 
   699  0619                     	;# 
   700  0619                     	;# 
   701  061A                     	;# 
   702  061B                     	;# 
   703  061C                     	;# 
   704  061C                     	;# 
   705  0691                     	;# 
   706  0692                     	;# 
   707  0693                     	;# 
   708  0694                     	;# 
   709  0695                     	;# 
   710  0696                     	;# 
   711  0697                     	;# 
   712  0698                     	;# 
   713  0699                     	;# 
   714  0891                     	;# 
   715  0891                     	;# 
   716  0891                     	;# 
   717  0891                     	;# 
   718  0891                     	;# 
   719  0891                     	;# 
   720  0892                     	;# 
   721  0892                     	;# 
   722  0892                     	;# 
   723  0893                     	;# 
   724  0893                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0893                     	;# 
   728  0893                     	;# 
   729  0894                     	;# 
   730  0894                     	;# 
   731  0894                     	;# 
   732  0895                     	;# 
   733  0895                     	;# 
   734  0895                     	;# 
   735  0896                     	;# 
   736  0896                     	;# 
   737  0896                     	;# 
   738  089B                     	;# 
   739  0911                     	;# 
   740  0912                     	;# 
   741  0913                     	;# 
   742  0914                     	;# 
   743  0915                     	;# 
   744  0916                     	;# 
   745  0918                     	;# 
   746  0919                     	;# 
   747  091A                     	;# 
   748  091B                     	;# 
   749  091C                     	;# 
   750  091D                     	;# 
   751  091E                     	;# 
   752  091F                     	;# 
   753  0E0F                     	;# 
   754  0E10                     	;# 
   755  0E11                     	;# 
   756  0E12                     	;# 
   757  0E13                     	;# 
   758  0E14                     	;# 
   759  0E15                     	;# 
   760  0E18                     	;# 
   761  0E1A                     	;# 
   762  0E1B                     	;# 
   763  0E1C                     	;# 
   764  0E20                     	;# 
   765  0E21                     	;# 
   766  0E22                     	;# 
   767  0E24                     	;# 
   768  0E25                     	;# 
   769  0E28                     	;# 
   770  0E29                     	;# 
   771  0E2A                     	;# 
   772  0E2B                     	;# 
   773  0E90                     	;# 
   774  0E91                     	;# 
   775  0E92                     	;# 
   776  0E94                     	;# 
   777  0E95                     	;# 
   778  0F0F                     	;# 
   779  0F10                     	;# 
   780  0F11                     	;# 
   781  0F12                     	;# 
   782  0F13                     	;# 
   783  0F14                     	;# 
   784  0F15                     	;# 
   785  0F16                     	;# 
   786  0F17                     	;# 
   787  0F18                     	;# 
   788  0F19                     	;# 
   789  0F1A                     	;# 
   790  0F1B                     	;# 
   791  0F1C                     	;# 
   792  0F1D                     	;# 
   793  0F1E                     	;# 
   794  0F1F                     	;# 
   795  0F20                     	;# 
   796  0F21                     	;# 
   797  0F22                     	;# 
   798  0F23                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  0010                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0014                     	;# 
   828  0015                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  0019                     	;# 
   836  001A                     	;# 
   837  001B                     	;# 
   838  001C                     	;# 
   839  001D                     	;# 
   840  001E                     	;# 
   841  001F                     	;# 
   842  008C                     	;# 
   843  0090                     	;# 
   844  0091                     	;# 
   845  0092                     	;# 
   846  0093                     	;# 
   847  0094                     	;# 
   848  0097                     	;# 
   849  009B                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  010C                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0115                     	;# 
   859  0116                     	;# 
   860  0117                     	;# 
   861  0118                     	;# 
   862  0119                     	;# 
   863  018C                     	;# 
   864  0197                     	;# 
   865  0199                     	;# 
   866  0199                     	;# 
   867  0199                     	;# 
   868  019A                     	;# 
   869  019A                     	;# 
   870  019A                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019B                     	;# 
   876  019C                     	;# 
   877  019C                     	;# 
   878  019C                     	;# 
   879  019D                     	;# 
   880  019D                     	;# 
   881  019D                     	;# 
   882  019E                     	;# 
   883  019E                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  019F                     	;# 
   888  019F                     	;# 
   889  019F                     	;# 
   890  020C                     	;# 
   891  0211                     	;# 
   892  0211                     	;# 
   893  0212                     	;# 
   894  0212                     	;# 
   895  0213                     	;# 
   896  0213                     	;# 
   897  0214                     	;# 
   898  0214                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0216                     	;# 
   904  0216                     	;# 
   905  0217                     	;# 
   906  0217                     	;# 
   907  028C                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0294                     	;# 
   913  0295                     	;# 
   914  0295                     	;# 
   915  0296                     	;# 
   916  0297                     	;# 
   917  0298                     	;# 
   918  030C                     	;# 
   919  038C                     	;# 
   920  0391                     	;# 
   921  0392                     	;# 
   922  0393                     	;# 
   923  039A                     	;# 
   924  039C                     	;# 
   925  039D                     	;# 
   926  039E                     	;# 
   927  039F                     	;# 
   928  0498                     	;# 
   929  0498                     	;# 
   930  0499                     	;# 
   931  049A                     	;# 
   932  049B                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  049E                     	;# 
   937  049F                     	;# 
   938  0617                     	;# 
   939  0618                     	;# 
   940  0619                     	;# 
   941  0619                     	;# 
   942  061A                     	;# 
   943  061B                     	;# 
   944  061C                     	;# 
   945  061C                     	;# 
   946  0691                     	;# 
   947  0692                     	;# 
   948  0693                     	;# 
   949  0694                     	;# 
   950  0695                     	;# 
   951  0696                     	;# 
   952  0697                     	;# 
   953  0698                     	;# 
   954  0699                     	;# 
   955  0891                     	;# 
   956  0891                     	;# 
   957  0891                     	;# 
   958  0891                     	;# 
   959  0891                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0892                     	;# 
   963  0892                     	;# 
   964  0893                     	;# 
   965  0893                     	;# 
   966  0893                     	;# 
   967  0893                     	;# 
   968  0893                     	;# 
   969  0893                     	;# 
   970  0894                     	;# 
   971  0894                     	;# 
   972  0894                     	;# 
   973  0895                     	;# 
   974  0895                     	;# 
   975  0895                     	;# 
   976  0896                     	;# 
   977  0896                     	;# 
   978  0896                     	;# 
   979  089B                     	;# 
   980  0911                     	;# 
   981  0912                     	;# 
   982  0913                     	;# 
   983  0914                     	;# 
   984  0915                     	;# 
   985  0916                     	;# 
   986  0918                     	;# 
   987  0919                     	;# 
   988  091A                     	;# 
   989  091B                     	;# 
   990  091C                     	;# 
   991  091D                     	;# 
   992  091E                     	;# 
   993  091F                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E18                     	;# 
  1002  0E1A                     	;# 
  1003  0E1B                     	;# 
  1004  0E1C                     	;# 
  1005  0E20                     	;# 
  1006  0E21                     	;# 
  1007  0E22                     	;# 
  1008  0E24                     	;# 
  1009  0E25                     	;# 
  1010  0E28                     	;# 
  1011  0E29                     	;# 
  1012  0E2A                     	;# 
  1013  0E2B                     	;# 
  1014  0E90                     	;# 
  1015  0E91                     	;# 
  1016  0E92                     	;# 
  1017  0E94                     	;# 
  1018  0E95                     	;# 
  1019  0F0F                     	;# 
  1020  0F10                     	;# 
  1021  0F11                     	;# 
  1022  0F12                     	;# 
  1023  0F13                     	;# 
  1024  0F14                     	;# 
  1025  0F15                     	;# 
  1026  0F16                     	;# 
  1027  0F17                     	;# 
  1028  0F18                     	;# 
  1029  0F19                     	;# 
  1030  0F1A                     	;# 
  1031  0F1B                     	;# 
  1032  0F1C                     	;# 
  1033  0F1D                     	;# 
  1034  0F1E                     	;# 
  1035  0F1F                     	;# 
  1036  0F20                     	;# 
  1037  0F21                     	;# 
  1038  0F22                     	;# 
  1039  0F23                     	;# 
  1040  0FE4                     	;# 
  1041  0FE5                     	;# 
  1042  0FE6                     	;# 
  1043  0FE7                     	;# 
  1044  0FE8                     	;# 
  1045  0FE9                     	;# 
  1046  0FEA                     	;# 
  1047  0FEB                     	;# 
  1048  0FED                     	;# 
  1049  0FEE                     	;# 
  1050  0FEF                     	;# 
  1051                           
  1052                           	psect	idataBANK0l
  1053  07CD                     __pidataBANK0l:	
  1054                           
  1055                           ;initializer for _temp_key
  1056  07CD  34FF               	retlw	255
  1057                           
  1058                           	psect	idataBANK1
  1059  0753                     __pidataBANK1:	
  1060                           
  1061                           ;initializer for _os
  1062  0753  34D0               	retlw	low _app_test_1ms
  1063  0754  3407               	retlw	high _app_test_1ms
  1064  0755  34CF               	retlw	low _app_test_10ms
  1065  0756  3407               	retlw	high _app_test_10ms
  1066  0757  34E2               	retlw	low _app_test_100ms
  1067  0758  3402               	retlw	high _app_test_100ms
  1068  0759  3468               	retlw	low _app_test_1000ms
  1069  075A  3404               	retlw	high _app_test_1000ms
  1070  075B  3400               	retlw	0
  1071  075C  3400               	retlw	0
  1072  075D  3400               	retlw	0
  1073  075E  3400               	retlw	0
  1074  075F  3400               	retlw	0
  1075  0760  3400               	retlw	0
  1076  0761  3400               	retlw	0
  1077  0762  3400               	retlw	0
  1078  0763  3400               	retlw	0
  1079  0764  3400               	retlw	0
  1080  F0F2                     _sys_ver_absaddr	set	61682
  1081  F0F2                     _sys_ver_absaddr	set	61682
  1082                           
  1083                           	psect	_sys_ver_text
  1084  F0F2                     __p_sys_ver_text:	
  1085  F0F2                     _sys_ver:	
  1086  F0F2  3403               	retlw	3
  1087  F0F3                     __end_of_sys_ver:	
  1088  0068                     _Bt_Data	set	104
  1089  0016                     _TMR0H	set	22
  1090  0015                     _TMR0L	set	21
  1091  0018                     _T0CON1bits	set	24
  1092  0017                     _T0CON0bits	set	23
  1093  0011                     _PIR1bits	set	17
  1094  0010                     _PIR0bits	set	16
  1095  000B                     _INTCONbits	set	11
  1096  000C                     _PORTAbits	set	12
  1097  008E                     _ADIF	set	142
  1098  0089                     _TMR2IF	set	137
  1099  0090                     _PIE0bits	set	144
  1100  008C                     _TRISA	set	140
  1101  048D                     _RCIE	set	1165
  1102  048C                     _TXIE	set	1164
  1103  010C                     _LATA	set	268
  1104  010C                     _LATAbits	set	268
  1105  019A                     _TX1REG	set	410
  1106  0199                     _RC1REG	set	409
  1107  018C                     _ANSELA	set	396
  1108  020C                     _WPUA	set	524
  1109  0918                     _CPUDOZE	set	2328
  1110                           
  1111                           	psect	stringtext1
  1112  07AA                     __pstringtext1:	
  1113  07AA                     STR_1:	
  1114  07AA  3441               	retlw	65	;'A'
  1115  07AB  3454               	retlw	84	;'T'
  1116  07AC  342B               	retlw	43	;'+'
  1117  07AD  344E               	retlw	78	;'N'
  1118  07AE  3441               	retlw	65	;'A'
  1119  07AF  344D               	retlw	77	;'M'
  1120  07B0  3445               	retlw	69	;'E'
  1121  07B1  3443               	retlw	67	;'C'
  1122  07B2  3444               	retlw	68	;'D'
  1123  07B3  3400               	retlw	0
  1124                           
  1125                           	psect	stringtext2
  1126  07B4                     __pstringtext2:	
  1127  07B4                     STR_2:	
  1128  07B4  3441               	retlw	65	;'A'
  1129  07B5  3454               	retlw	84	;'T'
  1130  07B6  342B               	retlw	43	;'+'
  1131  07B7  3450               	retlw	80	;'P'
  1132  07B8  3449               	retlw	73	;'I'
  1133  07B9  344E               	retlw	78	;'N'
  1134  07BA  3400               	retlw	0
  1135                           
  1136                           	psect	stringtext3
  1137  0000                     __pstringtext3:	
  1138                           
  1139                           ; #config settings
  1140  0000                     
  1141                           	psect	cinit
  1142  02C6                     start_initialization:	
  1143  02C6                     __initialization:	
  1144                           
  1145                           ; Initialize objects allocated to BANK0l
  1146  02C6  27CD               	fcall	__pidataBANK0l	;fetch initializer
  1147  02C7  00DE               	movwf	__pdataBANK0l& (0+127)
  1148                           
  1149                           ; Initialize objects allocated to BANK1
  1150  02C8  3053               	movlw	low __pidataBANK1
  1151  02C9  0084               	movwf	4
  1152  02CA  3087               	movlw	(high __pidataBANK1)| (0+128)
  1153  02CB  0085               	movwf	5
  1154  02CC  30D6               	movlw	low __pdataBANK1
  1155  02CD  0086               	movwf	6
  1156  02CE  3000               	movlw	high __pdataBANK1
  1157  02CF  0087               	movwf	7
  1158  02D0  3012               	movlw	18
  1159  02D1  27BB               	fcall	init_ram
  1160                           
  1161                           ; Clear objects allocated to COMMON
  1162  02D2  01FA               	clrf	__pbssCOMMON& (0+127)
  1163                           
  1164                           ; Clear objects allocated to BANK0l
  1165  02D3  3020               	movlw	low __pbssBANK0l
  1166  02D4  0084               	movwf	4
  1167  02D5  3000               	movlw	high __pbssBANK0l
  1168  02D6  0085               	movwf	5
  1169  02D7  302D               	movlw	45
  1170  02D8  27C1               	fcall	clear_ram0
  1171                           
  1172                           ; Clear objects allocated to BANK1
  1173  02D9  30A0               	movlw	low __pbssBANK1
  1174  02DA  0084               	movwf	4
  1175  02DB  3000               	movlw	high __pbssBANK1
  1176  02DC  0085               	movwf	5
  1177  02DD  3036               	movlw	54
  1178  02DE  27C1               	fcall	clear_ram0
  1179  02DF                     end_of_initialization:	
  1180                           ;End of C runtime variable initialization code
  1181                           
  1182  02DF                     __end_of__initialization:	
  1183  02DF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1184  02E0  0020               	movlb	0
  1185  02E1  2FC7               	ljmp	_main	;jump to C main() function
  1186                           
  1187                           	psect	bssCOMMON
  1188  007A                     __pbssCOMMON:	
  1189  007A                     _j_1:	
  1190  007A                     	ds	1
  1191                           
  1192                           	psect	bssBANK0l
  1193  0020                     __pbssBANK0l:	
  1194  0020                     _str_event:	
  1195  0020                     	ds	7
  1196  0027                     _Replay_Attack_Frame:	
  1197  0027                     	ds	1
  1198  0028                     _Replay_Attack:	
  1199  0028                     	ds	1
  1200  0029                     _sw0_st_prev:	
  1201  0029                     	ds	1
  1202  002A                     _tmr_temp_key:	
  1203  002A                     	ds	1
  1204  002B                     _tmr_1ses:	
  1205  002B                     	ds	1
  1206  002C                     _Led_st_cnt:	
  1207  002C                     	ds	1
  1208  002D                     _lock_id:	
  1209  002D                     	ds	16
  1210  003D                     _cmd_res_data:	
  1211  003D                     	ds	16
  1212                           
  1213                           	psect	dataBANK0l
  1214  005E                     __pdataBANK0l:	
  1215  005E                     _temp_key:	
  1216  005E                     	ds	1
  1217                           
  1218                           	psect	bssBANK1
  1219  00A0                     __pbssBANK1:	
  1220  00A0                     _com:	
  1221  00A0                     	ds	54
  1222                           
  1223                           	psect	dataBANK1
  1224  00D6                     __pdataBANK1:	
  1225  00D6                     _os:	
  1226  00D6                     	ds	18
  1227                           
  1228                           	psect	inittext
  1229  07BB                     init_ram:	
  1230  07BB  00FE               	movwf	126
  1231  07BC                     initloop:	
  1232  07BC  0012               	moviw fsr0++
  1233  07BD  001E               	movwi fsr1++
  1234  07BE  0BFE               	decfsz	126,f
  1235  07BF  2FBC               	goto	initloop
  1236  07C0  3400               	retlw	0
  1237                           
  1238                           	psect	clrtext
  1239  07C1                     clear_ram0:	
  1240                           ;	Called with FSR0 containing the base address, and
  1241                           ;	WREG with the size to clear
  1242                           
  1243  07C1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1244  07C2                     clrloop0:	
  1245  07C2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1246  07C3  3101               	addfsr 0,1
  1247  07C4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1248  07C5  2FC2               	goto	clrloop0	;have we reached the end yet?
  1249  07C6  3400               	retlw	0	;all done for this memory range, return
  1250                           
  1251                           	psect	cstackCOMMON
  1252  0070                     __pcstackCOMMON:	
  1253  0070                     ?_com_get_rx_buf_lnt:	
  1254  0070                     ?_com_rx_read_char:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_get_temp_key:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_event_push:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_led0_task:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_event_read:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_Sys_Ini:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_Run_Os:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_com_get_tx_buf_lnt:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_byte_received:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ??_byte_received:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_byte_transmit:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ??_byte_transmit:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_Ini_Oscillator:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_Ini_Dio:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_com_ini:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_Ini_Timer_0:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_app_ini:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_app_test_1ms:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_app_test_10ms:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_app_test_100ms:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_app_test_1000ms:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_app_test_BG:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_main:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_isr:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0x0
  1328  0070                     	ds	1
  1329  0071                     byte_received@temp_data:	
  1330                           
  1331                           ; 1 bytes @ 0x1
  1332  0071                     	ds	1
  1333  0072                     ??_isr:	
  1334                           
  1335                           ; 1 bytes @ 0x2
  1336  0072                     	ds	2
  1337  0074                     ??_com_get_rx_buf_lnt:	
  1338  0074                     ??_com_rx_read_char:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     ?_enc_dec:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344  0074                     ?_CRC_Chk:	
  1345                           ; 1 bytes @ 0x4
  1346                           
  1347  0074                     ?_eep_write_char:	
  1348                           ; 1 bytes @ 0x4
  1349                           
  1350  0074                     ?_mem_compare:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     ?_com_send_dat:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     ??_event_push:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     ??_led0_task:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     ??_event_read:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ??_com_get_tx_buf_lnt:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ??_Ini_Oscillator:	
  1369                           ; 1 bytes @ 0x4
  1370                           
  1371  0074                     ??_Ini_Dio:	
  1372                           ; 1 bytes @ 0x4
  1373                           
  1374  0074                     ??_com_ini:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     ??_Ini_Timer_0:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     ??_app_test_1ms:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     ??_app_test_10ms:	
  1384                           ; 1 bytes @ 0x4
  1385                           
  1386  0074                     ?_read_mem:	
  1387                           ; 1 bytes @ 0x4
  1388                           
  1389  0074                     ?_os_get_sys_tim:	
  1390                           ; 2 bytes @ 0x4
  1391                           
  1392  0074                     mem_compare@sour:	
  1393                           ; 4 bytes @ 0x4
  1394                           
  1395  0074                     CRC_Chk@len:	
  1396                           ; 1 bytes @ 0x4
  1397                           
  1398  0074                     enc_dec@len:	
  1399                           ; 1 bytes @ 0x4
  1400                           
  1401  0074                     eep_write_char@data:	
  1402                           ; 1 bytes @ 0x4
  1403                           
  1404  0074                     read_mem@mem_addr:	
  1405                           ; 1 bytes @ 0x4
  1406                           
  1407  0074                     com_send_dat@ptr:	
  1408                           ; 2 bytes @ 0x4
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x4
  1412  0074                     	ds	1
  1413  0075                     ??_eep_write_char:	
  1414  0075                     mem_compare@len:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417  0075                     CRC_Chk@flg:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420  0075                     enc_dec@temp_key_0:	
  1421                           ; 1 bytes @ 0x5
  1422                           
  1423  0075                     event_push@Event_ID:	
  1424                           ; 1 bytes @ 0x5
  1425                           
  1426  0075                     event_read@temp_event_id:	
  1427                           ; 1 bytes @ 0x5
  1428                           
  1429  0075                     com_get_tx_buf_lnt@temp_dif:	
  1430                           ; 1 bytes @ 0x5
  1431                           
  1432  0075                     com_get_rx_buf_lnt@temp_dif:	
  1433                           ; 1 bytes @ 0x5
  1434                           
  1435  0075                     com_rx_read_char@temp_val:	
  1436                           ; 1 bytes @ 0x5
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0x5
  1440  0075                     	ds	1
  1441  0076                     ??_enc_dec:	
  1442  0076                     ??_mem_compare:	
  1443                           ; 1 bytes @ 0x6
  1444                           
  1445  0076                     CRC_Chk@MacKey:	
  1446                           ; 1 bytes @ 0x6
  1447                           
  1448  0076                     read_mem@typ:	
  1449                           ; 1 bytes @ 0x6
  1450                           
  1451  0076                     eep_write_char@add:	
  1452                           ; 1 bytes @ 0x6
  1453                           
  1454  0076                     com_send_dat@len:	
  1455                           ; 1 bytes @ 0x6
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x6
  1459  0076                     	ds	1
  1460  0077                     ??_read_mem:	
  1461  0077                     ??_CRC_Chk:	
  1462                           ; 1 bytes @ 0x7
  1463                           
  1464  0077                     ??_com_send_dat:	
  1465                           ; 1 bytes @ 0x7
  1466                           
  1467  0077                     ??_app_ini:	
  1468                           ; 1 bytes @ 0x7
  1469                           
  1470  0077                     mem_compare@status:	
  1471                           ; 1 bytes @ 0x7
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x7
  1475  0077                     	ds	1
  1476  0078                     ??_get_temp_key:	
  1477  0078                     ??_Sys_Ini:	
  1478                           ; 1 bytes @ 0x8
  1479                           
  1480  0078                     ??_app_test_1000ms:	
  1481                           ; 1 bytes @ 0x8
  1482                           
  1483  0078                     ??_app_test_BG:	
  1484                           ; 1 bytes @ 0x8
  1485                           
  1486  0078                     ??_os_get_sys_tim:	
  1487                           ; 1 bytes @ 0x8
  1488                           
  1489  0078                     mem_compare@dest:	
  1490                           ; 1 bytes @ 0x8
  1491                           
  1492  0078                     enc_dec@data:	
  1493                           ; 1 bytes @ 0x8
  1494                           
  1495  0078                     Sys_Ini@count:	
  1496                           ; 1 bytes @ 0x8
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x8
  1500  0078                     	ds	1
  1501  0079                     get_temp_key@temp_key:	
  1502                           
  1503                           ; 1 bytes @ 0x9
  1504  0079                     	ds	1
  1505  007A                     ??_main:	
  1506                           
  1507                           	psect	cstackBANK0h
  1508  005B                     __pcstackBANK0h:	
  1509                           ; 1 bytes @ 0xA
  1510                           
  1511  005B                     CRC_Chk@st:	
  1512  005B                     _app_test_BG$178:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515                           
  1516                           ; 2 bytes @ 0x0
  1517  005B                     	ds	1
  1518  005C                     CRC_Chk@sum:	
  1519                           
  1520                           ; 1 bytes @ 0x1
  1521  005C                     	ds	1
  1522  005D                     app_test_BG@temp_time:	
  1523  005D                     CRC_Chk@dbuf:	
  1524                           ; 1 bytes @ 0x2
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x2
  1528  005D                     	ds	1
  1529                           
  1530                           	psect	cstackBANK0l
  1531  004D                     __pcstackBANK0l:	
  1532  004D                     app_ini@dest_add:	
  1533  004D                     _app_test_1000ms$173:	
  1534                           ; 2 bytes @ 0x0
  1535                           
  1536  004D                     os_get_sys_tim@temp_tim:	
  1537                           ; 2 bytes @ 0x0
  1538                           
  1539                           
  1540                           ; 4 bytes @ 0x0
  1541  004D                     	ds	2
  1542  004F                     app_ini@temp_add:	
  1543  004F                     _app_test_1000ms$174:	
  1544                           ; 2 bytes @ 0x2
  1545                           
  1546                           
  1547                           ; 2 bytes @ 0x2
  1548  004F                     	ds	2
  1549  0051                     ??_app_test_100ms:	
  1550  0051                     app_test_1000ms@temp_time:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0x4
  1555  0051                     	ds	2
  1556  0053                     app_test_100ms@dat_idx_offset:	
  1557                           
  1558                           ; 1 bytes @ 0x6
  1559  0053                     	ds	1
  1560  0054                     app_test_100ms@temp_add_or_rand:	
  1561                           
  1562                           ; 1 bytes @ 0x7
  1563  0054                     	ds	1
  1564  0055                     app_test_100ms@cmd_idx_offset:	
  1565                           
  1566                           ; 1 bytes @ 0x8
  1567  0055                     	ds	1
  1568  0056                     app_test_100ms@MacKeyTemp:	
  1569                           
  1570                           ; 1 bytes @ 0x9
  1571  0056                     	ds	1
  1572  0057                     app_test_100ms@resp_len:	
  1573                           
  1574                           ; 1 bytes @ 0xA
  1575  0057                     	ds	1
  1576  0058                     app_test_100ms@i:	
  1577                           
  1578                           ; 1 bytes @ 0xB
  1579  0058                     	ds	1
  1580  0059                     app_test_100ms@sw0_st:	
  1581                           
  1582                           ; 1 bytes @ 0xC
  1583  0059                     	ds	1
  1584  005A                     ??_Run_Os:	
  1585                           
  1586                           ; 1 bytes @ 0xD
  1587  005A                     	ds	1
  1588                           
  1589                           	psect	maintext
  1590  07C7                     __pmaintext:	
  1591 ;;
  1592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1593 ;;
  1594 ;; *************** function _main *****************
  1595 ;; Defined at:
  1596 ;;		line 12 in file "../Src/os.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : B1F/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels required when called:    6
  1616 ;; This function calls:
  1617 ;;		_Run_Os
  1618 ;;		_Sys_Ini
  1619 ;; This function is called by:
  1620 ;;		Startup code after reset
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _main
  1626  07C7                     _main:	
  1627                           
  1628                           ;os.c: 15: Sys_Ini();
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _main: [allreg]
  1632  07C7  26B9               	fcall	_Sys_Ini
  1633                           
  1634                           ;os.c: 20: Run_Os();
  1635  07C8  253A               	fcall	_Run_Os
  1636  07C9  2AC5               	ljmp	start
  1637  07CA                     __end_of_main:	
  1638                           
  1639                           	psect	text1
  1640  06B9                     __ptext1:	
  1641 ;; *************** function _Sys_Ini *****************
  1642 ;; Defined at:
  1643 ;;		line 63 in file "../Src/system.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  count           2    8[COMMON] unsigned int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         2       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         2       0       0       0       0
  1661 ;;Total ram usage:        2 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    5
  1664 ;; This function calls:
  1665 ;;		_Ini_Dio
  1666 ;;		_Ini_Oscillator
  1667 ;;		_Ini_Timer_0
  1668 ;;		_app_ini
  1669 ;;		_com_ini
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _Sys_Ini
  1677  06B9                     _Sys_Ini:	
  1678                           
  1679                           ;system.c: 65: uint16 count=1;
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _Sys_Ini: [allreg]
  1683  06B9  3001               	movlw	1
  1684  06BA  00F8               	movwf	Sys_Ini@count
  1685  06BB  3000               	movlw	0
  1686  06BC  00F9               	movwf	Sys_Ini@count+1
  1687                           
  1688                           ;system.c: 66: Ini_Oscillator();
  1689  06BD  27CE               	fcall	_Ini_Oscillator
  1690                           
  1691                           ;system.c: 67: Ini_Dio();
  1692  06BE  2793               	fcall	_Ini_Dio
  1693                           
  1694                           ;system.c: 68: com_ini();
  1695  06BF  27CA               	fcall	_com_ini
  1696  06C0                     l2303:	
  1697                           ;system.c: 71: while((count++));
  1698                           
  1699  06C0  3001               	movlw	1
  1700  06C1  07F8               	addwf	Sys_Ini@count,f
  1701  06C2  3000               	movlw	0
  1702  06C3  3DF9               	addwfc	Sys_Ini@count+1,f
  1703  06C4  0378               	decf	Sys_Ini@count,w
  1704  06C5  0479               	iorwf	Sys_Ini@count+1,w
  1705  06C6  1D03               	btfss	3,2
  1706  06C7  2EC0               	goto	l2303
  1707                           
  1708                           ;system.c: 77: CPUDOZE=0x80;
  1709  06C8  3080               	movlw	128
  1710  06C9  0032               	movlb	18	; select bank18
  1711  06CA  0098               	movwf	24	;volatile
  1712                           
  1713                           ;system.c: 79: Ini_Timer_0();
  1714  06CB  279F               	fcall	_Ini_Timer_0
  1715                           
  1716                           ;system.c: 80: app_ini();
  1717  06CC  257E               	fcall	_app_ini
  1718                           
  1719                           ;system.c: 82: T0CON0bits.T0EN=1;
  1720  06CD  0020               	movlb	0	; select bank0
  1721  06CE  1797               	bsf	23,7	;volatile
  1722                           
  1723                           ;system.c: 83: INTCONbits.PEIE=1;
  1724  06CF  170B               	bsf	11,6	;volatile
  1725                           
  1726                           ;system.c: 84: INTCONbits.GIE=1;
  1727  06D0  178B               	bsf	11,7	;volatile
  1728  06D1  0008               	return
  1729  06D2                     __end_of_Sys_Ini:	
  1730                           
  1731                           	psect	text2
  1732  07CA                     __ptext2:	
  1733 ;; *************** function _com_ini *****************
  1734 ;; Defined at:
  1735 ;;		line 146 in file "../Src/uart.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		None
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    2
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_Sys_Ini
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _com_ini
  1765  07CA                     _com_ini:	
  1766                           
  1767                           ;uart.c: 163: (RCIE = 1);
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _com_ini: []
  1771  07CA  0021               	movlb	1	; select bank1
  1772  07CB  1691               	bsf	17,5	;volatile
  1773  07CC  0008               	return
  1774  07CD                     __end_of_com_ini:	
  1775                           
  1776                           	psect	text3
  1777  057E                     __ptext3:	
  1778 ;; *************** function _app_ini *****************
  1779 ;; Defined at:
  1780 ;;		line 16 in file "../Src/app.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  temp_add        2    2[BANK0l] unsigned int 
  1785 ;;  dest_add        2    0[BANK0l] unsigned int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1795 ;;      Params:         0       0       0       0       0
  1796 ;;      Locals:         0       0       4       0       0
  1797 ;;      Temps:          1       0       0       0       0
  1798 ;;      Totals:         1       0       4       0       0
  1799 ;;Total ram usage:        5 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    4
  1802 ;; This function calls:
  1803 ;;		_read_mem
  1804 ;; This function is called by:
  1805 ;;		_Sys_Ini
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _app_ini
  1811  057E                     _app_ini:	
  1812                           
  1813                           ;app.c: 18: uint16 temp_add,dest_add;
  1814                           ;app.c: 21: sw0_st_prev = ! (PORTAbits.RA5);
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _app_ini: [allreg]
  1818  057E  1003               	clrc
  1819  057F  0020               	movlb	0	; select bank0
  1820  0580  1E8C               	btfss	12,5	;volatile
  1821  0581  1403               	setc
  1822  0582  3000               	movlw	0
  1823  0583  1803               	btfsc	3,0
  1824  0584  3001               	movlw	1
  1825  0585  00A9               	movwf	_sw0_st_prev
  1826                           
  1827                           ;app.c: 22: (tmr_1ses = 0xFF);
  1828  0586  30FF               	movlw	255
  1829  0587  00F7               	movwf	??_app_ini
  1830  0588  0877               	movf	??_app_ini,w
  1831  0589  00AB               	movwf	_tmr_1ses
  1832                           
  1833                           ;app.c: 24: (tmr_temp_key = 0xFF);
  1834  058A  30FF               	movlw	255
  1835  058B  00F7               	movwf	??_app_ini
  1836  058C  0877               	movf	??_app_ini,w
  1837  058D  00AA               	movwf	_tmr_temp_key
  1838                           
  1839                           ;app.c: 30: temp_add = 0x70F0;
  1840  058E  30F0               	movlw	240
  1841  058F  00CF               	movwf	app_ini@temp_add
  1842  0590  3070               	movlw	112
  1843  0591  00D0               	movwf	app_ini@temp_add+1
  1844                           
  1845                           ;app.c: 31: dest_add = 0;
  1846  0592  01CD               	clrf	app_ini@dest_add
  1847  0593  01CE               	clrf	app_ini@dest_add+1
  1848  0594                     l2123:	
  1849                           ;app.c: 32: while(temp_add <= 0x70FF)
  1850                           
  1851  0594  3071               	movlw	113
  1852  0595  0250               	subwf	app_ini@temp_add+1,w
  1853  0596  3000               	movlw	0
  1854  0597  1903               	skipnz
  1855  0598  024F               	subwf	app_ini@temp_add,w
  1856  0599  1803               	btfsc	3,0
  1857  059A  0008               	return
  1858                           
  1859                           ;app.c: 33: {
  1860                           ;app.c: 34: lock_id[dest_add] = read_mem(temp_add,1);
  1861  059B  0850               	movf	app_ini@temp_add+1,w
  1862  059C  00F5               	movwf	read_mem@mem_addr+1
  1863  059D  084F               	movf	app_ini@temp_add,w
  1864  059E  00F4               	movwf	read_mem@mem_addr
  1865  059F  01F6               	clrf	read_mem@typ
  1866  05A0  0AF6               	incf	read_mem@typ,f
  1867  05A1  272B               	fcall	_read_mem
  1868  05A2  0874               	movf	?_read_mem,w
  1869  05A3  00F7               	movwf	??_app_ini
  1870  05A4  0020               	movlb	0	; select bank0
  1871  05A5  084D               	movf	app_ini@dest_add,w
  1872  05A6  3E2D               	addlw	(low (_lock_id| 0))& (0+255)
  1873  05A7  0086               	movwf	6
  1874  05A8  0187               	clrf	7
  1875  05A9  0877               	movf	??_app_ini,w
  1876  05AA  0081               	movwf	1
  1877                           
  1878                           ;app.c: 35: dest_add++;
  1879  05AB  3001               	movlw	1
  1880  05AC  07CD               	addwf	app_ini@dest_add,f
  1881  05AD  3000               	movlw	0
  1882  05AE  3DCE               	addwfc	app_ini@dest_add+1,f
  1883                           
  1884                           ;app.c: 36: temp_add++;
  1885  05AF  3001               	movlw	1
  1886  05B0  07CF               	addwf	app_ini@temp_add,f
  1887  05B1  3000               	movlw	0
  1888  05B2  3DD0               	addwfc	app_ini@temp_add+1,f
  1889  05B3  2D94               	goto	l2123
  1890  05B4                     __end_of_app_ini:	
  1891                           
  1892                           	psect	text4
  1893  079F                     __ptext4:	
  1894 ;; *************** function _Ini_Timer_0 *****************
  1895 ;; Defined at:
  1896 ;;		line 127 in file "../Src/system.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    2
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_Sys_Ini
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _Ini_Timer_0
  1926  079F                     _Ini_Timer_0:	
  1927                           
  1928                           ;system.c: 131: T0CON1bits.T0CS0=0;
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _Ini_Timer_0: [wreg+status,2]
  1932  079F  0020               	movlb	0	; select bank0
  1933  07A0  1298               	bcf	24,5	;volatile
  1934                           
  1935                           ;system.c: 132: T0CON1bits.T0CS1=0;
  1936  07A1  1318               	bcf	24,6	;volatile
  1937                           
  1938                           ;system.c: 133: T0CON1bits.T0CS2=1;
  1939  07A2  1798               	bsf	24,7	;volatile
  1940                           
  1941                           ;system.c: 136: TMR0L=0;
  1942  07A3  0195               	clrf	21	;volatile
  1943                           
  1944                           ;system.c: 137: TMR0H=31;
  1945  07A4  301F               	movlw	31
  1946  07A5  0096               	movwf	22	;volatile
  1947                           
  1948                           ;system.c: 138: PIR0bits.TMR0IF = 0;
  1949  07A6  1290               	bcf	16,5	;volatile
  1950                           
  1951                           ;system.c: 139: PIE0bits.TMR0IE =1;
  1952  07A7  0021               	movlb	1	; select bank1
  1953  07A8  1690               	bsf	16,5	;volatile
  1954  07A9  0008               	return
  1955  07AA                     __end_of_Ini_Timer_0:	
  1956                           
  1957                           	psect	text5
  1958  07CE                     __ptext5:	
  1959 ;; *************** function _Ini_Oscillator *****************
  1960 ;; Defined at:
  1961 ;;		line 86 in file "../Src/system.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		None
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    2
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_Sys_Ini
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _Ini_Oscillator
  1991  07CE                     _Ini_Oscillator:	
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _Ini_Oscillator: []
  1995  07CE  0008               	return
  1996  07CF                     __end_of_Ini_Oscillator:	
  1997                           
  1998                           	psect	text6
  1999  0793                     __ptext6:	
  2000 ;; *************** function _Ini_Dio *****************
  2001 ;; Defined at:
  2002 ;;		line 95 in file "../Src/system.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    2
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_Sys_Ini
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _Ini_Dio
  2032  0793                     _Ini_Dio:	
  2033                           
  2034                           ;system.c: 99: TRISA = 0b00101000;
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _Ini_Dio: [wreg+status,2]
  2038  0793  3028               	movlw	40
  2039  0794  0021               	movlb	1	; select bank1
  2040  0795  008C               	movwf	12	;volatile
  2041                           
  2042                           ;system.c: 100: ANSELA = 0b00000000;
  2043  0796  0023               	movlb	3	; select bank3
  2044  0797  018C               	clrf	12	;volatile
  2045                           
  2046                           ;system.c: 101: WPUA = 0x39;
  2047  0798  3039               	movlw	57
  2048  0799  0024               	movlb	4	; select bank4
  2049  079A  008C               	movwf	12	;volatile
  2050                           
  2051                           ;system.c: 122: LATA = 0b00111000;
  2052  079B  3038               	movlw	56
  2053  079C  0022               	movlb	2	; select bank2
  2054  079D  008C               	movwf	12	;volatile
  2055  079E  0008               	return
  2056  079F                     __end_of_Ini_Dio:	
  2057                           
  2058                           	psect	text7
  2059  053A                     __ptext7:	
  2060 ;; *************** function _Run_Os *****************
  2061 ;; Defined at:
  2062 ;;		line 24 in file "../Src/os.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2076 ;;      Params:         0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          0       0       1       0       0
  2079 ;;      Totals:         0       0       1       0       0
  2080 ;;Total ram usage:        1 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    5
  2083 ;; This function calls:
  2084 ;;		_app_test_1000ms
  2085 ;;		_app_test_100ms
  2086 ;;		_app_test_10ms
  2087 ;;		_app_test_1ms
  2088 ;;		_app_test_BG
  2089 ;;		_com_get_tx_buf_lnt
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _Run_Os
  2097  053A                     _Run_Os:	
  2098  053A                     l195:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _Run_Os: [allreg]
  2101                           ;os.c: 26: while(1)
  2102                           
  2103                           
  2104                           ;os.c: 27: {
  2105                           ;os.c: 28: if(os.time_keeper[0])
  2106  053A  0021               	movlb	1	; select bank1
  2107  053B  0864               	movf	(_os^(0+128)+14),w
  2108  053C  1903               	btfsc	3,2
  2109  053D  2D75               	goto	l2339
  2110                           
  2111                           ;os.c: 29: {
  2112                           ;os.c: 31: for(j_1=0u;j_1<((5u-1u));j_1++)
  2113  053E  01FA               	clrf	_j_1
  2114  053F  3004               	movlw	4
  2115  0540  027A               	subwf	_j_1,w
  2116  0541  1803               	btfsc	3,0
  2117  0542  2D6C               	goto	l2337
  2118  0543                     l2325:	
  2119                           
  2120                           ;os.c: 32: {
  2121                           ;os.c: 33: if(os.time_keeper[j_1]>=10u)
  2122  0543  087A               	movf	_j_1,w
  2123  0544  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2124  0545  0086               	movwf	6
  2125  0546  0187               	clrf	7
  2126  0547  300A               	movlw	10
  2127  0548  0201               	subwf	1,w
  2128  0549  1C03               	skipc
  2129  054A  2D63               	goto	l2333
  2130                           
  2131                           ;os.c: 34: {
  2132                           ;os.c: 35: os.pro_ptr[j_1]();
  2133  054B  357A               	lslf	_j_1,w
  2134  054C  3ED6               	addlw	(low (_os| 0))& (0+255)
  2135  054D  0086               	movwf	6
  2136  054E  0187               	clrf	7
  2137  054F  3F41               	moviw [1]fsr1
  2138  0550  008A               	movwf	10
  2139  0551  3F40               	moviw [0]fsr1
  2140  0552  000A               	callw
  2141  0553  3185               	pagesel	$
  2142                           
  2143                           ;os.c: 37: os.time_keeper[j_1+1u]++;
  2144  0554  3001               	movlw	1
  2145  0555  0020               	movlb	0	; select bank0
  2146  0556  00DA               	movwf	??_Run_Os
  2147  0557  087A               	movf	_j_1,w
  2148  0558  3E01               	addlw	1
  2149  0559  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2150  055A  0086               	movwf	6
  2151  055B  0187               	clrf	7
  2152  055C  085A               	movf	??_Run_Os,w
  2153  055D  0781               	addwf	1,f
  2154                           
  2155                           ;os.c: 38: os.time_keeper[j_1]=0u;
  2156  055E  087A               	movf	_j_1,w
  2157  055F  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2158  0560  0086               	movwf	6
  2159  0561  0187               	clrf	7
  2160  0562  0181               	clrf	1
  2161  0563                     l2333:	
  2162  0563  3001               	movlw	1
  2163  0564  0020               	movlb	0	; select bank0
  2164  0565  00DA               	movwf	??_Run_Os
  2165  0566  085A               	movf	??_Run_Os,w
  2166  0567  07FA               	addwf	_j_1,f
  2167  0568  3004               	movlw	4
  2168  0569  027A               	subwf	_j_1,w
  2169  056A  1C03               	skipc
  2170  056B  2D43               	goto	l2325
  2171  056C                     l2337:	
  2172                           
  2173                           ;os.c: 39: }
  2174                           ;os.c: 40: }
  2175                           ;os.c: 41: os.os_time_ms++;
  2176  056C  3001               	movlw	1
  2177  056D  0021               	movlb	1	; select bank1
  2178  056E  07DE               	addwf	(_os^(0+128)+8),f
  2179  056F  3000               	movlw	0
  2180  0570  3DDF               	addwfc	((_os+1)^(0+128)+8),f
  2181  0571  3000               	movlw	0
  2182  0572  3DE0               	addwfc	((_os+2)^(0+128)+8),f
  2183  0573  3000               	movlw	0
  2184  0574  3DE1               	addwfc	((_os+3)^(0+128)+8),f
  2185  0575                     l2339:	
  2186                           
  2187                           ;os.c: 42: }
  2188                           ;os.c: 43: app_test_BG();
  2189  0575  24D9               	fcall	_app_test_BG
  2190  0576                     l2341:	
  2191                           ;os.c: 45: while(com_get_tx_buf_lnt());
  2192                           
  2193  0576  2717               	fcall	_com_get_tx_buf_lnt
  2194  0577  3A00               	xorlw	0
  2195  0578  1D03               	skipz
  2196  0579  2D76               	goto	l2341
  2197  057A  0063               	sleep	;# 
  2198                           
  2199                           ;os.c: 47: __nop();
  2200  057B  0000               	nop
  2201                           
  2202                           ;os.c: 48: __nop();
  2203  057C  0000               	nop
  2204  057D  2D3A               	goto	l195
  2205  057E                     __end_of_Run_Os:	
  2206                           
  2207                           	psect	text8
  2208  0717                     __ptext8:	
  2209 ;; *************** function _com_get_tx_buf_lnt *****************
  2210 ;; Defined at:
  2211 ;;		line 43 in file "../Src/uart.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  temp_dif        1    5[COMMON] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0
  2228 ;;      Totals:         2       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    2
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_Run_Os
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _com_get_tx_buf_lnt
  2241  0717                     _com_get_tx_buf_lnt:	
  2242                           
  2243                           ;uart.c: 45: uint8 temp_dif;
  2244                           ;uart.c: 46: INTCONbits.GIE=0;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _com_get_tx_buf_lnt: [wreg+status,2+status,0]
  2248  0717  138B               	bcf	11,7	;volatile
  2249                           
  2250                           ;uart.c: 47: if(com.tx_head > com.tx_tale)
  2251  0718  0021               	movlb	1	; select bank1
  2252  0719  0838               	movf	(_com^(0+128)+24),w
  2253  071A  0239               	subwf	(_com^(0+128)+25),w
  2254  071B  1803               	skipnc
  2255  071C  2F22               	goto	l1877
  2256                           
  2257                           ;uart.c: 48: {
  2258                           ;uart.c: 49: temp_dif = ((24u - com.tx_head) + com.tx_tale);
  2259  071D  0338               	decf	(_com^(0+128)+24),w
  2260  071E  3AFF               	xorlw	255
  2261  071F  0739               	addwf	(_com^(0+128)+25),w
  2262  0720  3E18               	addlw	24
  2263  0721  2F25               	goto	L1
  2264  0722                     l1877:	
  2265                           ;uart.c: 50: }
  2266                           
  2267                           
  2268                           ;uart.c: 51: else
  2269                           ;uart.c: 52: {
  2270                           ;uart.c: 53: temp_dif = (com.tx_tale - com.tx_head);
  2271  0722  0338               	decf	(_com^(0+128)+24),w
  2272  0723  3AFF               	xorlw	255
  2273  0724  0739               	addwf	(_com^(0+128)+25),w
  2274  0725                     L1:	
  2275  0725  00F4               	movwf	??_com_get_tx_buf_lnt
  2276  0726  0874               	movf	??_com_get_tx_buf_lnt,w
  2277  0727  00F5               	movwf	com_get_tx_buf_lnt@temp_dif
  2278                           
  2279                           ;uart.c: 54: }
  2280                           ;uart.c: 55: INTCONbits.GIE=1;
  2281  0728  178B               	bsf	11,7	;volatile
  2282                           
  2283                           ;uart.c: 56: return(temp_dif);
  2284  0729  0875               	movf	com_get_tx_buf_lnt@temp_dif,w
  2285  072A  0008               	return
  2286  072B                     __end_of_com_get_tx_buf_lnt:	
  2287                           
  2288                           	psect	text9
  2289  04D9                     __ptext9:	
  2290 ;; *************** function _app_test_BG *****************
  2291 ;; Defined at:
  2292 ;;		line 320 in file "../Src/app.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  temp_time       1    2[BANK0h] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         0       3       0       0       0
  2308 ;;      Temps:          2       0       0       0       0
  2309 ;;      Totals:         2       3       0       0       0
  2310 ;;Total ram usage:        5 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    4
  2313 ;; This function calls:
  2314 ;;		_com_send_dat
  2315 ;;		_eep_write_char
  2316 ;;		_event_push
  2317 ;;		_event_read
  2318 ;; This function is called by:
  2319 ;;		_Run_Os
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _app_test_BG
  2325  04D9                     _app_test_BG:	
  2326                           
  2327                           ;app.c: 322: uint8 temp_time;
  2328                           ;app.c: 324: switch(event_read())
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _app_test_BG: [allreg]
  2332  04D9  2D2E               	goto	l1869
  2333  04DA                     l1843:	
  2334                           ;app.c: 325: {
  2335                           ;app.c: 326: case SW0_PRESS :
  2336                           
  2337                           
  2338                           ;app.c: 327: (tmr_1ses = 0);
  2339  04DA  0020               	movlb	0	; select bank0
  2340  04DB  01AB               	clrf	_tmr_1ses
  2341                           
  2342                           ;app.c: 328: Led_st_cnt=Led_st_cnt + 2;;
  2343  04DC  082C               	movf	_Led_st_cnt,w
  2344  04DD  3E02               	addlw	2
  2345  04DE  00F8               	movwf	??_app_test_BG
  2346  04DF  0878               	movf	??_app_test_BG,w
  2347  04E0  00AC               	movwf	_Led_st_cnt
  2348                           
  2349                           ;app.c: 329: break;
  2350  04E1  0008               	return
  2351  04E2                     l1847:	
  2352                           ;app.c: 330: case SW0_RELEASE :
  2353                           
  2354                           
  2355                           ;app.c: 331: temp_time = ((tmr_1ses < 0xFF)?tmr_1ses:0);
  2356  04E2  0020               	movlb	0	; select bank0
  2357  04E3  0A2B               	incf	_tmr_1ses,w
  2358  04E4  1D03               	btfss	3,2
  2359  04E5  2CE9               	goto	l1851
  2360  04E6  01DB               	clrf	_app_test_BG$178
  2361  04E7  01DC               	clrf	_app_test_BG$178+1
  2362  04E8  2CF0               	goto	l133
  2363  04E9                     l1851:	
  2364  04E9  082B               	movf	_tmr_1ses,w
  2365  04EA  00F8               	movwf	??_app_test_BG
  2366  04EB  01F9               	clrf	??_app_test_BG+1
  2367  04EC  0878               	movf	??_app_test_BG,w
  2368  04ED  00DB               	movwf	_app_test_BG$178
  2369  04EE  0879               	movf	??_app_test_BG+1,w
  2370  04EF  00DC               	movwf	_app_test_BG$178+1
  2371  04F0                     l133:	
  2372  04F0  085B               	movf	_app_test_BG$178,w
  2373  04F1  00F8               	movwf	??_app_test_BG
  2374  04F2  0878               	movf	??_app_test_BG,w
  2375  04F3  00DD               	movwf	app_test_BG@temp_time
  2376                           
  2377                           ;app.c: 332: (tmr_1ses = 0xFF);
  2378  04F4  30FF               	movlw	255
  2379  04F5  00F8               	movwf	??_app_test_BG
  2380  04F6  0878               	movf	??_app_test_BG,w
  2381  04F7  00AB               	movwf	_tmr_1ses
  2382                           
  2383                           ;app.c: 334: if((temp_time <= 15))
  2384  04F8  3010               	movlw	16
  2385  04F9  025D               	subwf	app_test_BG@temp_time,w
  2386  04FA  1803               	skipnc
  2387  04FB  2D03               	goto	l1857
  2388                           
  2389                           ;app.c: 335: {
  2390                           ;app.c: 336: if(temp_time >= 10)
  2391  04FC  300A               	movlw	10
  2392  04FD  025D               	subwf	app_test_BG@temp_time,w
  2393  04FE  1C03               	skipc
  2394  04FF  0008               	return
  2395                           
  2396                           ;app.c: 337: {
  2397                           ;app.c: 338: event_push(FDR);
  2398  0500  3004               	movlw	4
  2399  0501  267E               	fcall	_event_push
  2400                           
  2401                           ;app.c: 339: }
  2402                           ;app.c: 340: }
  2403  0502  0008               	return
  2404  0503                     l1857:	
  2405                           
  2406                           ;app.c: 341: else
  2407                           ;app.c: 342: {
  2408                           ;app.c: 344: com_send_dat("AT+PIN",6);
  2409  0503  30B4               	movlw	low (STR_2| (0+32768))
  2410  0504  00F4               	movwf	com_send_dat@ptr
  2411  0505  3087               	movlw	high (STR_2| (0+32768))
  2412  0506  00F5               	movwf	com_send_dat@ptr+1
  2413  0507  3006               	movlw	6
  2414  0508  00F8               	movwf	??_app_test_BG
  2415  0509  0878               	movf	??_app_test_BG,w
  2416  050A  00F6               	movwf	com_send_dat@len
  2417  050B  25B4               	fcall	_com_send_dat
  2418                           
  2419                           ;app.c: 345: com_send_dat(&lock_id[8],4);
  2420  050C  3035               	movlw	low (_lock_id+8)
  2421  050D  00F4               	movwf	com_send_dat@ptr
  2422  050E  3000               	movlw	high (_lock_id+8)
  2423  050F  00F5               	movwf	com_send_dat@ptr+1
  2424  0510  3004               	movlw	4
  2425  0511  00F8               	movwf	??_app_test_BG
  2426  0512  0878               	movf	??_app_test_BG,w
  2427  0513  00F6               	movwf	com_send_dat@len
  2428  0514  25B4               	fcall	_com_send_dat
  2429                           
  2430                           ;app.c: 346: Led_st_cnt=Led_st_cnt + 10;;
  2431  0515  0020               	movlb	0	; select bank0
  2432  0516  082C               	movf	_Led_st_cnt,w
  2433  0517  3E0A               	addlw	10
  2434  0518  00F8               	movwf	??_app_test_BG
  2435  0519  0878               	movf	??_app_test_BG,w
  2436  051A  00AC               	movwf	_Led_st_cnt
  2437                           
  2438                           ;app.c: 347: }
  2439                           ;app.c: 349: break;
  2440  051B  0008               	return
  2441  051C                     l1861:	
  2442                           ;app.c: 351: case FDR :
  2443                           
  2444                           
  2445                           ;app.c: 353: Led_st_cnt=Led_st_cnt + 40;;
  2446  051C  0020               	movlb	0	; select bank0
  2447  051D  082C               	movf	_Led_st_cnt,w
  2448  051E  3E28               	addlw	40
  2449  051F  00F8               	movwf	??_app_test_BG
  2450  0520  0878               	movf	??_app_test_BG,w
  2451  0521  00AC               	movwf	_Led_st_cnt
  2452                           
  2453                           ;app.c: 354: eep_write_char(0xF3,0xFF);
  2454  0522  30FF               	movlw	255
  2455  0523  00F8               	movwf	??_app_test_BG
  2456  0524  0878               	movf	??_app_test_BG,w
  2457  0525  00F4               	movwf	eep_write_char@data
  2458  0526  30F3               	movlw	243
  2459  0527  2785               	fcall	_eep_write_char
  2460                           
  2461                           ;app.c: 355: lock_id[3]=0xFF;
  2462  0528  30FF               	movlw	255
  2463  0529  00F8               	movwf	??_app_test_BG
  2464  052A  0878               	movf	??_app_test_BG,w
  2465  052B  0020               	movlb	0	; select bank0
  2466  052C  00B0               	movwf	_lock_id+3
  2467                           
  2468                           ;app.c: 358: }
  2469                           
  2470                           ;app.c: 356: break;
  2471  052D  0008               	return
  2472  052E                     l1869:	
  2473  052E  269C               	fcall	_event_read
  2474                           
  2475                           ; Switch size 1, requested type "space"
  2476                           ; Number of cases is 3, Range of values is 1 to 4
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           10     6 (average)
  2480                           ; direct_byte           17     9 (fixed)
  2481                           ; jumptable            263     9 (fixed)
  2482                           ;	Chosen strategy is simple_byte
  2483  052F  3A01               	xorlw	1	; case 1
  2484  0530  1903               	skipnz
  2485  0531  2CE2               	goto	l1847
  2486  0532  3A03               	xorlw	3	; case 2
  2487  0533  1903               	skipnz
  2488  0534  2CDA               	goto	l1843
  2489  0535  3A06               	xorlw	6	; case 4
  2490  0536  1903               	skipnz
  2491  0537  2D1C               	goto	l1861
  2492  0538  2D39               	goto	l138
  2493  0539                     l138:	
  2494  0539  0008               	return
  2495  053A                     __end_of_app_test_BG:	
  2496                           
  2497                           	psect	text10
  2498  069C                     __ptext10:	
  2499 ;; *************** function _event_read *****************
  2500 ;; Defined at:
  2501 ;;		line 126 in file "../Src/os.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  temp_event_i    1    5[COMMON] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      unsigned char 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0
  2517 ;;      Temps:          1       0       0       0       0
  2518 ;;      Totals:         2       0       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    2
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_app_test_BG
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _event_read
  2531  069C                     _event_read:	
  2532                           
  2533                           ;os.c: 129: uint8 temp_event_id=0;
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _event_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  2537  069C  01F5               	clrf	event_read@temp_event_id
  2538                           
  2539                           ;os.c: 130: if((str_event.head != str_event.tale)||str_event.overflow)
  2540  069D  0020               	movlb	0	; select bank0
  2541  069E  0821               	movf	_str_event+1,w
  2542  069F  0620               	xorwf	_str_event,w
  2543  06A0  1903               	btfsc	3,2
  2544  06A1  0826               	movf	_str_event+6,w
  2545  06A2  1903               	btfsc	3,2
  2546  06A3  2EB7               	goto	l1631
  2547                           
  2548                           ;os.c: 131: {
  2549                           ;os.c: 132: temp_event_id = str_event.queue[str_event.tale];
  2550  06A4  0821               	movf	_str_event+1,w
  2551  06A5  3E22               	addlw	(low ((_str_event| 0+2)))& (0+255)
  2552  06A6  0086               	movwf	6
  2553  06A7  0187               	clrf	7
  2554  06A8  0801               	movf	1,w
  2555  06A9  00F4               	movwf	??_event_read
  2556  06AA  0874               	movf	??_event_read,w
  2557  06AB  00F5               	movwf	event_read@temp_event_id
  2558                           
  2559                           ;os.c: 133: if(str_event.tale<(4 - 1)){str_event.tale ++;}else{str_event.tale = 0;}
  2560  06AC  3003               	movlw	3
  2561  06AD  0221               	subwf	_str_event+1,w
  2562  06AE  1803               	skipnc
  2563  06AF  2EB5               	goto	l1629
  2564  06B0  3001               	movlw	1
  2565  06B1  00F4               	movwf	??_event_read
  2566  06B2  0874               	movf	??_event_read,w
  2567  06B3  07A1               	addwf	_str_event+1,f
  2568  06B4  2EB6               	goto	l223
  2569  06B5                     l1629:	
  2570  06B5  01A1               	clrf	_str_event+1
  2571  06B6                     l223:	
  2572                           
  2573                           ;os.c: 134: str_event.overflow=0;
  2574  06B6  01A6               	clrf	_str_event+6
  2575  06B7                     l1631:	
  2576                           
  2577                           ;os.c: 135: }
  2578                           ;os.c: 136: return (temp_event_id);
  2579  06B7  0875               	movf	event_read@temp_event_id,w
  2580  06B8  0008               	return
  2581  06B9                     __end_of_event_read:	
  2582                           
  2583                           	psect	text11
  2584  0468                     __ptext11:	
  2585 ;; *************** function _app_test_1000ms *****************
  2586 ;; Defined at:
  2587 ;;		line 284 in file "../Src/app.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  temp_time       1    4[BANK0l] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       0       5       0       0
  2603 ;;      Temps:          2       0       0       0       0
  2604 ;;      Totals:         2       0       5       0       0
  2605 ;;Total ram usage:        7 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    3
  2608 ;; This function calls:
  2609 ;;		_com_send_dat
  2610 ;; This function is called by:
  2611 ;;		_Run_Os
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _app_test_1000ms
  2617  0468                     _app_test_1000ms:	
  2618                           
  2619                           ;app.c: 286: uint8 temp_time;
  2620                           ;app.c: 290: os.os_time_sec++;
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _app_test_1000ms: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2624  0468  3001               	movlw	1
  2625  0469  0021               	movlb	1	; select bank1
  2626  046A  07E2               	addwf	(_os^(0+128)+12),f
  2627  046B  3000               	movlw	0
  2628  046C  3DE3               	addwfc	((_os+1)^(0+128)+12),f
  2629                           
  2630                           ;app.c: 291: if(tmr_1ses < 0xFE){tmr_1ses++; };
  2631  046D  30FE               	movlw	254
  2632  046E  0020               	movlb	0	; select bank0
  2633  046F  022B               	subwf	_tmr_1ses,w
  2634  0470  1803               	skipnc
  2635  0471  2C76               	goto	l1809
  2636  0472  3001               	movlw	1
  2637  0473  00F8               	movwf	??_app_test_1000ms
  2638  0474  0878               	movf	??_app_test_1000ms,w
  2639  0475  07AB               	addwf	_tmr_1ses,f
  2640  0476                     l1809:	
  2641                           
  2642                           ;app.c: 293: if(tmr_temp_key < 0xFE){tmr_temp_key++; };
  2643  0476  30FE               	movlw	254
  2644  0477  022A               	subwf	_tmr_temp_key,w
  2645  0478  1803               	skipnc
  2646  0479  2C7E               	goto	l109
  2647  047A  3001               	movlw	1
  2648  047B  00F8               	movwf	??_app_test_1000ms
  2649  047C  0878               	movf	??_app_test_1000ms,w
  2650  047D  07AA               	addwf	_tmr_temp_key,f
  2651  047E                     l109:	
  2652                           
  2653                           ;app.c: 294: temp_time = ((tmr_temp_key < 0xFF)?tmr_temp_key:0);
  2654  047E  0A2A               	incf	_tmr_temp_key,w
  2655  047F  1D03               	btfss	3,2
  2656  0480  2C84               	goto	l1815
  2657  0481  01CD               	clrf	_app_test_1000ms$173
  2658  0482  01CE               	clrf	_app_test_1000ms$173+1
  2659  0483  2C8B               	goto	l113
  2660  0484                     l1815:	
  2661  0484  082A               	movf	_tmr_temp_key,w
  2662  0485  00F8               	movwf	??_app_test_1000ms
  2663  0486  01F9               	clrf	??_app_test_1000ms+1
  2664  0487  0878               	movf	??_app_test_1000ms,w
  2665  0488  00CD               	movwf	_app_test_1000ms$173
  2666  0489  0879               	movf	??_app_test_1000ms+1,w
  2667  048A  00CE               	movwf	_app_test_1000ms$173+1
  2668  048B                     l113:	
  2669  048B  084D               	movf	_app_test_1000ms$173,w
  2670  048C  00F8               	movwf	??_app_test_1000ms
  2671  048D  0878               	movf	??_app_test_1000ms,w
  2672  048E  00D1               	movwf	app_test_1000ms@temp_time
  2673                           
  2674                           ;app.c: 295: if(temp_time == 15)
  2675  048F  300F               	movlw	15
  2676  0490  0651               	xorwf	app_test_1000ms@temp_time,w
  2677  0491  1D03               	btfss	3,2
  2678  0492  2C98               	goto	l1823
  2679                           
  2680                           ;app.c: 296: {
  2681                           ;app.c: 297: (tmr_temp_key = 0xFF);
  2682  0493  30FF               	movlw	255
  2683  0494  00F8               	movwf	??_app_test_1000ms
  2684  0495  0878               	movf	??_app_test_1000ms,w
  2685  0496  00AA               	movwf	_tmr_temp_key
  2686                           
  2687                           ;app.c: 298: temp_key = ~temp_key;
  2688  0497  09DE               	comf	_temp_key,f
  2689  0498                     l1823:	
  2690                           
  2691                           ;app.c: 299: }
  2692                           ;app.c: 301: if(Replay_Attack)
  2693  0498  0828               	movf	_Replay_Attack,w
  2694  0499  1903               	btfsc	3,2
  2695  049A  2C9D               	goto	l115
  2696                           
  2697                           ;app.c: 302: {
  2698                           ;app.c: 303: Replay_Attack--;
  2699  049B  3001               	movlw	1
  2700  049C  02A8               	subwf	_Replay_Attack,f
  2701  049D                     l115:	
  2702                           
  2703                           ;app.c: 304: }
  2704                           ;app.c: 305: temp_time = ((tmr_1ses < 0xFF)?tmr_1ses:0);
  2705  049D  0A2B               	incf	_tmr_1ses,w
  2706  049E  1D03               	btfss	3,2
  2707  049F  2CA3               	goto	l1829
  2708  04A0  01CF               	clrf	_app_test_1000ms$174
  2709  04A1  01D0               	clrf	_app_test_1000ms$174+1
  2710  04A2  2CAA               	goto	l119
  2711  04A3                     l1829:	
  2712  04A3  082B               	movf	_tmr_1ses,w
  2713  04A4  00F8               	movwf	??_app_test_1000ms
  2714  04A5  01F9               	clrf	??_app_test_1000ms+1
  2715  04A6  0878               	movf	??_app_test_1000ms,w
  2716  04A7  00CF               	movwf	_app_test_1000ms$174
  2717  04A8  0879               	movf	??_app_test_1000ms+1,w
  2718  04A9  00D0               	movwf	_app_test_1000ms$174+1
  2719  04AA                     l119:	
  2720  04AA  084F               	movf	_app_test_1000ms$174,w
  2721  04AB  00F8               	movwf	??_app_test_1000ms
  2722  04AC  0878               	movf	??_app_test_1000ms,w
  2723  04AD  00D1               	movwf	app_test_1000ms@temp_time
  2724                           
  2725                           ;app.c: 307: if((temp_time >= 10) && (temp_time <= 15))
  2726  04AE  300A               	movlw	10
  2727  04AF  0251               	subwf	app_test_1000ms@temp_time,w
  2728  04B0  1C03               	skipc
  2729  04B1  2CBC               	goto	l1835
  2730  04B2  3010               	movlw	16
  2731  04B3  0251               	subwf	app_test_1000ms@temp_time,w
  2732  04B4  1803               	skipnc
  2733  04B5  2CBC               	goto	l1835
  2734                           
  2735                           ;app.c: 308: {
  2736                           ;app.c: 309: Led_st_cnt=Led_st_cnt + 4;;
  2737  04B6  082C               	movf	_Led_st_cnt,w
  2738  04B7  3E04               	addlw	4
  2739  04B8  00F8               	movwf	??_app_test_1000ms
  2740  04B9  0878               	movf	??_app_test_1000ms,w
  2741  04BA  00AC               	movwf	_Led_st_cnt
  2742                           
  2743                           ;app.c: 310: }
  2744  04BB  0008               	return
  2745  04BC                     l1835:	
  2746                           
  2747                           ;app.c: 311: else if((temp_time == 20))
  2748  04BC  3014               	movlw	20
  2749  04BD  0651               	xorwf	app_test_1000ms@temp_time,w
  2750  04BE  1D03               	btfss	3,2
  2751  04BF  0008               	return
  2752                           
  2753                           ;app.c: 312: {
  2754                           ;app.c: 314: com_send_dat("AT+NAMECD",9);
  2755  04C0  30AA               	movlw	low (STR_1| (0+32768))
  2756  04C1  00F4               	movwf	com_send_dat@ptr
  2757  04C2  3087               	movlw	high (STR_1| (0+32768))
  2758  04C3  00F5               	movwf	com_send_dat@ptr+1
  2759  04C4  3009               	movlw	9
  2760  04C5  00F8               	movwf	??_app_test_1000ms
  2761  04C6  0878               	movf	??_app_test_1000ms,w
  2762  04C7  00F6               	movwf	com_send_dat@len
  2763  04C8  25B4               	fcall	_com_send_dat
  2764                           
  2765                           ;app.c: 315: com_send_dat(&lock_id[8],4);
  2766  04C9  3035               	movlw	low (_lock_id+8)
  2767  04CA  00F4               	movwf	com_send_dat@ptr
  2768  04CB  3000               	movlw	high (_lock_id+8)
  2769  04CC  00F5               	movwf	com_send_dat@ptr+1
  2770  04CD  3004               	movlw	4
  2771  04CE  00F8               	movwf	??_app_test_1000ms
  2772  04CF  0878               	movf	??_app_test_1000ms,w
  2773  04D0  00F6               	movwf	com_send_dat@len
  2774  04D1  25B4               	fcall	_com_send_dat
  2775                           
  2776                           ;app.c: 316: Led_st_cnt=Led_st_cnt + 10;;
  2777  04D2  0020               	movlb	0	; select bank0
  2778  04D3  082C               	movf	_Led_st_cnt,w
  2779  04D4  3E0A               	addlw	10
  2780  04D5  00F8               	movwf	??_app_test_1000ms
  2781  04D6  0878               	movf	??_app_test_1000ms,w
  2782  04D7  00AC               	movwf	_Led_st_cnt
  2783  04D8  0008               	return
  2784  04D9                     __end_of_app_test_1000ms:	
  2785                           
  2786                           	psect	text12
  2787  02E2                     __ptext12:	
  2788 ;; *************** function _app_test_100ms *****************
  2789 ;; Defined at:
  2790 ;;		line 53 in file "../Src/app.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  cmd_idx_offs    1    8[BANK0l] unsigned char 
  2795 ;;  temp_add_or_    1    7[BANK0l] unsigned char 
  2796 ;;  dat_idx_offs    1    6[BANK0l] unsigned char 
  2797 ;;  i               1   11[BANK0l] unsigned char 
  2798 ;;  resp_len        1   10[BANK0l] unsigned char 
  2799 ;;  sw0_st          1   12[BANK0l] volatile unsigned char 
  2800 ;;  MacKeyTemp      1    9[BANK0l] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2810 ;;      Params:         0       0       0       0       0
  2811 ;;      Locals:         0       0       7       0       0
  2812 ;;      Temps:          0       0       2       0       0
  2813 ;;      Totals:         0       0       9       0       0
  2814 ;;Total ram usage:        9 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    4
  2817 ;; This function calls:
  2818 ;;		_CRC_Chk
  2819 ;;		_com_get_rx_buf_lnt
  2820 ;;		_com_rx_read_char
  2821 ;;		_com_send_dat
  2822 ;;		_eep_write_char
  2823 ;;		_enc_dec
  2824 ;;		_event_push
  2825 ;;		_get_temp_key
  2826 ;;		_led0_task
  2827 ;;		_mem_compare
  2828 ;;		_read_mem
  2829 ;; This function is called by:
  2830 ;;		_Run_Os
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _app_test_100ms
  2836  02E2                     _app_test_100ms:	
  2837                           
  2838                           ;app.c: 55: uint8 i=0, resp_len = 0,MacKeyTemp = 0;
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _app_test_100ms: [allreg]
  2842  02E2  0020               	movlb	0	; select bank0
  2843  02E3  01D8               	clrf	app_test_100ms@i
  2844  02E4  01D7               	clrf	app_test_100ms@resp_len
  2845  02E5  01D6               	clrf	app_test_100ms@MacKeyTemp
  2846                           
  2847                           ;app.c: 56: volatile uint8 sw0_st;
  2848                           ;app.c: 57: if( lock_id[3] == 0xFF )
  2849  02E6  0A30               	incf	_lock_id+3,w
  2850  02E7  1D03               	btfss	3,2
  2851  02E8  2AEB               	goto	l2131
  2852                           
  2853                           ;app.c: 58: {
  2854                           ;app.c: 59: MacKeyTemp = lock_id[8];
  2855  02E9  0835               	movf	_lock_id+8,w
  2856  02EA  2AEC               	goto	L2
  2857  02EB                     l2131:	
  2858                           ;app.c: 60: }
  2859                           
  2860                           
  2861                           ;app.c: 61: else
  2862                           ;app.c: 62: {
  2863                           ;app.c: 63: MacKeyTemp = lock_id[3];
  2864  02EB  0830               	movf	_lock_id+3,w
  2865  02EC                     L2:	
  2866  02EC  00D1               	movwf	??_app_test_100ms
  2867  02ED  0851               	movf	??_app_test_100ms,w
  2868  02EE  00D6               	movwf	app_test_100ms@MacKeyTemp
  2869                           
  2870                           ;app.c: 64: }
  2871                           ;app.c: 66: if(com_get_rx_buf_lnt())
  2872  02EF  273F               	fcall	_com_get_rx_buf_lnt
  2873  02F0  3A00               	xorlw	0
  2874  02F1  1903               	skipnz
  2875  02F2  2C51               	goto	l2263
  2876                           
  2877                           ;app.c: 67: {
  2878                           ;app.c: 69: cmd_res_data[0] = 0xFF;
  2879  02F3  30FF               	movlw	255
  2880  02F4  0020               	movlb	0	; select bank0
  2881  02F5  00D1               	movwf	??_app_test_100ms
  2882  02F6  0851               	movf	??_app_test_100ms,w
  2883  02F7  00BD               	movwf	_cmd_res_data
  2884                           
  2885                           ;app.c: 70: while(com_get_rx_buf_lnt() && (i < 16))
  2886  02F8  2B06               	goto	l2141
  2887  02F9                     l2137:	
  2888                           
  2889                           ;app.c: 71: {
  2890                           ;app.c: 72: cmd_res_data[i]=com_rx_read_char();
  2891  02F9  26EA               	fcall	_com_rx_read_char
  2892  02FA  0020               	movlb	0	; select bank0
  2893  02FB  00D1               	movwf	??_app_test_100ms
  2894  02FC  0858               	movf	app_test_100ms@i,w
  2895  02FD  3E3D               	addlw	(low (_cmd_res_data| 0))& (0+255)
  2896  02FE  0086               	movwf	6
  2897  02FF  0187               	clrf	7
  2898  0300  0851               	movf	??_app_test_100ms,w
  2899  0301  0081               	movwf	1
  2900                           
  2901                           ;app.c: 73: i++;
  2902  0302  3001               	movlw	1
  2903  0303  00D1               	movwf	??_app_test_100ms
  2904  0304  0851               	movf	??_app_test_100ms,w
  2905  0305  07D8               	addwf	app_test_100ms@i,f
  2906  0306                     l2141:	
  2907  0306  273F               	fcall	_com_get_rx_buf_lnt
  2908  0307  3A00               	xorlw	0
  2909  0308  1903               	skipnz
  2910  0309  2B0F               	goto	l2145
  2911  030A  3010               	movlw	16
  2912  030B  0020               	movlb	0	; select bank0
  2913  030C  0258               	subwf	app_test_100ms@i,w
  2914  030D  1C03               	skipc
  2915  030E  2AF9               	goto	l2137
  2916  030F                     l2145:	
  2917                           
  2918                           ;app.c: 74: }
  2919                           ;app.c: 77: if( cmd_res_data[0] == 5 )
  2920  030F  3005               	movlw	5
  2921  0310  0020               	movlb	0	; select bank0
  2922  0311  063D               	xorwf	_cmd_res_data,w
  2923  0312  1D03               	btfss	3,2
  2924  0313  2B34               	goto	l2161
  2925                           
  2926                           ;app.c: 78: {
  2927                           ;app.c: 79: cmd_res_data[0] = 8;
  2928  0314  3008               	movlw	8
  2929  0315  00D1               	movwf	??_app_test_100ms
  2930  0316  0851               	movf	??_app_test_100ms,w
  2931  0317  00BD               	movwf	_cmd_res_data
  2932                           
  2933                           ;app.c: 82: temp_key = cmd_res_data[1];
  2934  0318  083E               	movf	_cmd_res_data+1,w
  2935  0319  00D1               	movwf	??_app_test_100ms
  2936  031A  0851               	movf	??_app_test_100ms,w
  2937  031B  00DE               	movwf	_temp_key
  2938                           
  2939                           ;app.c: 84: cmd_res_data[1] = get_temp_key();
  2940  031C  2777               	fcall	_get_temp_key
  2941  031D  0020               	movlb	0	; select bank0
  2942  031E  00D1               	movwf	??_app_test_100ms
  2943  031F  0851               	movf	??_app_test_100ms,w
  2944  0320  00BE               	movwf	_cmd_res_data+1
  2945                           
  2946                           ;app.c: 86: temp_key ^= cmd_res_data[1];
  2947  0321  083E               	movf	_cmd_res_data+1,w
  2948  0322  00D1               	movwf	??_app_test_100ms
  2949  0323  0851               	movf	??_app_test_100ms,w
  2950  0324  06DE               	xorwf	_temp_key,f
  2951                           
  2952                           ;app.c: 87: temp_key ^= lock_id[8];
  2953  0325  0835               	movf	_lock_id+8,w
  2954  0326  00D1               	movwf	??_app_test_100ms
  2955  0327  0851               	movf	??_app_test_100ms,w
  2956  0328  06DE               	xorwf	_temp_key,f
  2957                           
  2958                           ;app.c: 89: (tmr_temp_key = 0);
  2959  0329  01AA               	clrf	_tmr_temp_key
  2960                           
  2961                           ;app.c: 92: Led_st_cnt=Led_st_cnt + 2;;
  2962  032A  082C               	movf	_Led_st_cnt,w
  2963  032B  3E02               	addlw	2
  2964  032C  00D1               	movwf	??_app_test_100ms
  2965  032D  0851               	movf	??_app_test_100ms,w
  2966  032E  00AC               	movwf	_Led_st_cnt
  2967                           
  2968                           ;app.c: 93: resp_len = 5;
  2969  032F  3005               	movlw	5
  2970  0330  00D1               	movwf	??_app_test_100ms
  2971  0331  0851               	movf	??_app_test_100ms,w
  2972  0332  00D7               	movwf	app_test_100ms@resp_len
  2973                           
  2974                           ;app.c: 94: }
  2975  0333  2C44               	goto	l2259
  2976  0334                     l2161:	
  2977                           
  2978                           ;app.c: 96: else if((i == 16) && (Replay_Attack == 0))
  2979  0334  3010               	movlw	16
  2980  0335  0658               	xorwf	app_test_100ms@i,w
  2981  0336  1D03               	btfss	3,2
  2982  0337  2C44               	goto	l2259
  2983  0338  0828               	movf	_Replay_Attack,w
  2984  0339  1D03               	btfss	3,2
  2985  033A  2C44               	goto	l2259
  2986                           
  2987                           ;app.c: 97: {
  2988                           ;app.c: 103: enc_dec(&cmd_res_data[1], (16 -1) ,temp_key);
  2989  033B  300F               	movlw	15
  2990  033C  00D1               	movwf	??_app_test_100ms
  2991  033D  0851               	movf	??_app_test_100ms,w
  2992  033E  00F4               	movwf	enc_dec@len
  2993  033F  085E               	movf	_temp_key,w
  2994  0340  00D2               	movwf	??_app_test_100ms+1
  2995  0341  0852               	movf	??_app_test_100ms+1,w
  2996  0342  00F5               	movwf	enc_dec@temp_key_0
  2997  0343  303E               	movlw	(low ((_cmd_res_data| 0+1)))& (0+255)
  2998  0344  2702               	fcall	_enc_dec
  2999                           
  3000                           ;app.c: 105: if(CRC_Chk(&cmd_res_data[0],(16 -1),0,MacKeyTemp))
  3001  0345  300F               	movlw	15
  3002  0346  0020               	movlb	0	; select bank0
  3003  0347  00D1               	movwf	??_app_test_100ms
  3004  0348  0851               	movf	??_app_test_100ms,w
  3005  0349  00F4               	movwf	CRC_Chk@len
  3006  034A  01F5               	clrf	CRC_Chk@flg
  3007  034B  0856               	movf	app_test_100ms@MacKeyTemp,w
  3008  034C  00D2               	movwf	??_app_test_100ms+1
  3009  034D  0852               	movf	??_app_test_100ms+1,w
  3010  034E  00F6               	movwf	CRC_Chk@MacKey
  3011  034F  303D               	movlw	(low (_cmd_res_data| 0))& (0+255)
  3012  0350  25E5               	fcall	_CRC_Chk
  3013  0351  3A00               	xorlw	0
  3014  0352  1903               	skipnz
  3015  0353  2C36               	goto	l2251
  3016                           
  3017                           ;app.c: 106: {
  3018                           ;app.c: 108: if(cmd_res_data[0] == 0x0C)
  3019  0354  300C               	movlw	12
  3020  0355  0020               	movlb	0	; select bank0
  3021  0356  063D               	xorwf	_cmd_res_data,w
  3022  0357  1D03               	btfss	3,2
  3023  0358  2C1C               	goto	l2247
  3024                           
  3025                           ;app.c: 109: {
  3026                           ;app.c: 110: resp_len = 16;
  3027  0359  3010               	movlw	16
  3028  035A  00D1               	movwf	??_app_test_100ms
  3029  035B  0851               	movf	??_app_test_100ms,w
  3030  035C  00D7               	movwf	app_test_100ms@resp_len
  3031                           
  3032                           ;app.c: 112: if( lock_id[3] == 0xFF )
  3033  035D  0A30               	incf	_lock_id+3,w
  3034  035E  1D03               	btfss	3,2
  3035  035F  2BBD               	goto	l2209
  3036                           
  3037                           ;app.c: 113: {
  3038                           ;app.c: 115: uint8 temp_add_or_rand = 0xF4;
  3039  0360  30F4               	movlw	244
  3040  0361  00D1               	movwf	??_app_test_100ms
  3041  0362  0851               	movf	??_app_test_100ms,w
  3042  0363  00D4               	movwf	app_test_100ms@temp_add_or_rand
  3043                           
  3044                           ;app.c: 116: uint8 dat_idx_offset = 4;
  3045  0364  3004               	movlw	4
  3046  0365  00D1               	movwf	??_app_test_100ms
  3047  0366  0851               	movf	??_app_test_100ms,w
  3048  0367  00D3               	movwf	app_test_100ms@dat_idx_offset
  3049                           
  3050                           ;app.c: 117: uint8 cmd_idx_offset = 3;
  3051  0368  3003               	movlw	3
  3052  0369  00D1               	movwf	??_app_test_100ms
  3053  036A  0851               	movf	??_app_test_100ms,w
  3054  036B  00D5               	movwf	app_test_100ms@cmd_idx_offset
  3055  036C                     l2185:	
  3056                           ;app.c: 119: while(temp_add_or_rand <= 0xF7)
  3057                           
  3058  036C  30F8               	movlw	248
  3059  036D  0254               	subwf	app_test_100ms@temp_add_or_rand,w
  3060  036E  1803               	btfsc	3,0
  3061  036F  2B94               	goto	l2187
  3062                           
  3063                           ;app.c: 120: {
  3064                           ;app.c: 121: eep_write_char(temp_add_or_rand,cmd_res_data[cmd_idx_offset]);
  3065  0370  0855               	movf	app_test_100ms@cmd_idx_offset,w
  3066  0371  3E3D               	addlw	(low (_cmd_res_data| 0))& (0+255)
  3067  0372  0086               	movwf	6
  3068  0373  0187               	clrf	7
  3069  0374  0801               	movf	1,w
  3070  0375  00D1               	movwf	??_app_test_100ms
  3071  0376  0851               	movf	??_app_test_100ms,w
  3072  0377  00F4               	movwf	eep_write_char@data
  3073  0378  0854               	movf	app_test_100ms@temp_add_or_rand,w
  3074  0379  2785               	fcall	_eep_write_char
  3075                           
  3076                           ;app.c: 122: lock_id[dat_idx_offset] = cmd_res_data[cmd_idx_offset];
  3077  037A  0020               	movlb	0	; select bank0
  3078  037B  0855               	movf	app_test_100ms@cmd_idx_offset,w
  3079  037C  3E3D               	addlw	(low (_cmd_res_data| 0))& (0+255)
  3080  037D  0086               	movwf	6
  3081  037E  0187               	clrf	7
  3082  037F  0801               	movf	1,w
  3083  0380  00D1               	movwf	??_app_test_100ms
  3084  0381  0853               	movf	app_test_100ms@dat_idx_offset,w
  3085  0382  3E2D               	addlw	(low (_lock_id| 0))& (0+255)
  3086  0383  0086               	movwf	6
  3087  0384  0187               	clrf	7
  3088  0385  0851               	movf	??_app_test_100ms,w
  3089  0386  0081               	movwf	1
  3090                           
  3091                           ;app.c: 123: dat_idx_offset++;
  3092  0387  3001               	movlw	1
  3093  0388  00D1               	movwf	??_app_test_100ms
  3094  0389  0851               	movf	??_app_test_100ms,w
  3095  038A  07D3               	addwf	app_test_100ms@dat_idx_offset,f
  3096                           
  3097                           ;app.c: 124: cmd_idx_offset++;
  3098  038B  3001               	movlw	1
  3099  038C  00D1               	movwf	??_app_test_100ms
  3100  038D  0851               	movf	??_app_test_100ms,w
  3101  038E  07D5               	addwf	app_test_100ms@cmd_idx_offset,f
  3102                           
  3103                           ;app.c: 125: temp_add_or_rand++;
  3104  038F  3001               	movlw	1
  3105  0390  00D1               	movwf	??_app_test_100ms
  3106  0391  0851               	movf	??_app_test_100ms,w
  3107  0392  07D4               	addwf	app_test_100ms@temp_add_or_rand,f
  3108  0393  2B6C               	goto	l2185
  3109  0394                     l2187:	
  3110                           
  3111                           ;app.c: 126: }
  3112                           ;app.c: 129: lock_id[3] = get_temp_key();
  3113  0394  2777               	fcall	_get_temp_key
  3114  0395  0020               	movlb	0	; select bank0
  3115  0396  00D1               	movwf	??_app_test_100ms
  3116  0397  0851               	movf	??_app_test_100ms,w
  3117  0398  00B0               	movwf	_lock_id+3
  3118                           
  3119                           ;app.c: 132: eep_write_char(0xF3,lock_id[3]);
  3120  0399  0830               	movf	_lock_id+3,w
  3121  039A  00D1               	movwf	??_app_test_100ms
  3122  039B  0851               	movf	??_app_test_100ms,w
  3123  039C  00F4               	movwf	eep_write_char@data
  3124  039D  30F3               	movlw	243
  3125  039E  2785               	fcall	_eep_write_char
  3126                           
  3127                           ;app.c: 136: cmd_res_data[2] = lock_id[3];
  3128  039F  0020               	movlb	0	; select bank0
  3129  03A0  0830               	movf	_lock_id+3,w
  3130  03A1  00D1               	movwf	??_app_test_100ms
  3131  03A2  0851               	movf	??_app_test_100ms,w
  3132  03A3  00BF               	movwf	_cmd_res_data+2
  3133                           
  3134                           ;app.c: 137: cmd_res_data[7] = lock_id[8];
  3135  03A4  0835               	movf	_lock_id+8,w
  3136  03A5  00D1               	movwf	??_app_test_100ms
  3137  03A6  0851               	movf	??_app_test_100ms,w
  3138  03A7  00C4               	movwf	_cmd_res_data+7
  3139                           
  3140                           ;app.c: 138: cmd_res_data[8] = lock_id[9];
  3141  03A8  0836               	movf	_lock_id+9,w
  3142  03A9  00D1               	movwf	??_app_test_100ms
  3143  03AA  0851               	movf	??_app_test_100ms,w
  3144  03AB  00C5               	movwf	_cmd_res_data+8
  3145                           
  3146                           ;app.c: 139: cmd_res_data[9] = lock_id[10];
  3147  03AC  0837               	movf	_lock_id+10,w
  3148  03AD  00D1               	movwf	??_app_test_100ms
  3149  03AE  0851               	movf	??_app_test_100ms,w
  3150  03AF  00C6               	movwf	_cmd_res_data+9
  3151                           
  3152                           ;app.c: 140: cmd_res_data[10] = lock_id[11];
  3153  03B0  0838               	movf	_lock_id+11,w
  3154  03B1  00D1               	movwf	??_app_test_100ms
  3155  03B2  0851               	movf	??_app_test_100ms,w
  3156  03B3  00C7               	movwf	_cmd_res_data+10
  3157                           
  3158                           ;app.c: 141: cmd_res_data[11] = lock_id[12];
  3159  03B4  0839               	movf	_lock_id+12,w
  3160  03B5  00D1               	movwf	??_app_test_100ms
  3161  03B6  0851               	movf	??_app_test_100ms,w
  3162  03B7  00C8               	movwf	_cmd_res_data+11
  3163                           
  3164                           ;app.c: 142: cmd_res_data[12] = 0x51;
  3165  03B8  3051               	movlw	81
  3166  03B9  00D1               	movwf	??_app_test_100ms
  3167  03BA  0851               	movf	??_app_test_100ms,w
  3168  03BB  00C9               	movwf	_cmd_res_data+12
  3169  03BC  2BCF               	goto	l2213
  3170  03BD                     l2209:	
  3171                           ;app.c: 145: }
  3172                           
  3173                           ;app.c: 144: cmd_res_data[14] = lock_id[2];
  3174                           
  3175                           ;app.c: 143: cmd_res_data[13] = lock_id[14];
  3176                           
  3177                           
  3178                           ;app.c: 146: else if(!mem_compare(&cmd_res_data[2],&lock_id[3],10))
  3179  03BD  3030               	movlw	(low ((_lock_id| 0+3)))& (0+255)
  3180  03BE  00D1               	movwf	??_app_test_100ms
  3181  03BF  0851               	movf	??_app_test_100ms,w
  3182  03C0  00F4               	movwf	mem_compare@sour
  3183  03C1  300A               	movlw	10
  3184  03C2  00D2               	movwf	??_app_test_100ms+1
  3185  03C3  0852               	movf	??_app_test_100ms+1,w
  3186  03C4  00F5               	movwf	mem_compare@len
  3187  03C5  303F               	movlw	(low ((_cmd_res_data| 0+2)))& (0+255)
  3188  03C6  265E               	fcall	_mem_compare
  3189  03C7  3A00               	xorlw	0
  3190  03C8  1D03               	skipz
  3191  03C9  2C1A               	goto	l2245
  3192                           
  3193                           ;app.c: 147: {
  3194                           ;app.c: 157: if(cmd_res_data[12] == 0x51 )
  3195  03CA  3051               	movlw	81
  3196  03CB  0020               	movlb	0	; select bank0
  3197  03CC  0649               	xorwf	_cmd_res_data+12,w
  3198  03CD  1D03               	btfss	3,2
  3199  03CE  2BD8               	goto	l2215
  3200  03CF                     l2213:	
  3201                           
  3202                           ;app.c: 158: {
  3203                           ;app.c: 159: cmd_res_data[13] = lock_id[14];
  3204  03CF  083B               	movf	_lock_id+14,w
  3205  03D0  00D1               	movwf	??_app_test_100ms
  3206  03D1  0851               	movf	??_app_test_100ms,w
  3207  03D2  00CA               	movwf	_cmd_res_data+13
  3208                           
  3209                           ;app.c: 160: cmd_res_data[14] = lock_id[2];
  3210  03D3  082F               	movf	_lock_id+2,w
  3211  03D4  00D1               	movwf	??_app_test_100ms
  3212  03D5  0851               	movf	??_app_test_100ms,w
  3213  03D6  00CB               	movwf	_cmd_res_data+14
  3214                           
  3215                           ;app.c: 161: }
  3216  03D7  2C1C               	goto	l2247
  3217  03D8                     l2215:	
  3218                           
  3219                           ;app.c: 163: else if( cmd_res_data[12] == 7 )
  3220  03D8  3007               	movlw	7
  3221  03D9  0649               	xorwf	_cmd_res_data+12,w
  3222  03DA  1D03               	btfss	3,2
  3223  03DB  2BE4               	goto	l2219
  3224                           
  3225                           ;app.c: 164: {
  3226                           ;app.c: 165: eep_write_char(0xF0,0xFF);
  3227  03DC  30FF               	movlw	255
  3228  03DD  00D1               	movwf	??_app_test_100ms
  3229  03DE  0851               	movf	??_app_test_100ms,w
  3230  03DF  00F4               	movwf	eep_write_char@data
  3231  03E0  30F0               	movlw	240
  3232  03E1  2785               	fcall	_eep_write_char
  3233  03E2  0001               	reset	;# 
  3234                           
  3235                           ;app.c: 167: }
  3236  03E3  2C1C               	goto	l2247
  3237  03E4                     l2219:	
  3238                           
  3239                           ;app.c: 180: else if( (cmd_res_data[12] == (3 +1)) )
  3240  03E4  3004               	movlw	4
  3241  03E5  0020               	movlb	0	; select bank0
  3242  03E6  0649               	xorwf	_cmd_res_data+12,w
  3243  03E7  1D03               	btfss	3,2
  3244  03E8  2BF5               	goto	l2225
  3245                           
  3246                           ;app.c: 181: {
  3247                           ;app.c: 182: cmd_res_data[13] = read_mem(*((uint16 *)&cmd_res_data[13]),1);
  3248  03E9  084B               	movf	_cmd_res_data+14,w
  3249  03EA  00F5               	movwf	read_mem@mem_addr+1
  3250  03EB  084A               	movf	_cmd_res_data+13,w
  3251  03EC  00F4               	movwf	read_mem@mem_addr
  3252  03ED  01F6               	clrf	read_mem@typ
  3253  03EE  0AF6               	incf	read_mem@typ,f
  3254  03EF  272B               	fcall	_read_mem
  3255  03F0  0874               	movf	?_read_mem,w
  3256  03F1  0020               	movlb	0	; select bank0
  3257  03F2  00D1               	movwf	??_app_test_100ms
  3258  03F3  0851               	movf	??_app_test_100ms,w
  3259  03F4  2C17               	goto	L4
  3260  03F5                     l2225:	
  3261                           ;app.c: 184: }
  3262                           
  3263                           ;app.c: 183: cmd_res_data[14] = 0;
  3264                           
  3265                           
  3266                           ;app.c: 185: else if(cmd_res_data[12] == 0x11)
  3267  03F5  3011               	movlw	17
  3268  03F6  0649               	xorwf	_cmd_res_data+12,w
  3269  03F7  1D03               	btfss	3,2
  3270  03F8  2C0D               	goto	l2237
  3271                           
  3272                           ;app.c: 186: {
  3273                           ;app.c: 187: if(cmd_res_data[13])
  3274  03F9  084A               	movf	_cmd_res_data+13,w
  3275  03FA  1903               	btfsc	3,2
  3276  03FB  2C04               	goto	l2233
  3277                           
  3278                           ;app.c: 188: {
  3279                           ;app.c: 189: Led_st_cnt=Led_st_cnt + 10;;
  3280  03FC  082C               	movf	_Led_st_cnt,w
  3281  03FD  3E0A               	addlw	10
  3282  03FE  00D1               	movwf	??_app_test_100ms
  3283  03FF  0851               	movf	??_app_test_100ms,w
  3284  0400  00AC               	movwf	_Led_st_cnt
  3285                           
  3286                           ;app.c: 190: LATAbits.LATA2=1;
  3287  0401  0022               	movlb	2	; select bank2
  3288  0402  150C               	bsf	12,2	;volatile
  3289                           
  3290                           ;app.c: 191: }
  3291  0403  2C1C               	goto	l2247
  3292  0404                     l2233:	
  3293                           
  3294                           ;app.c: 192: else
  3295                           ;app.c: 193: {
  3296                           ;app.c: 194: Led_st_cnt=Led_st_cnt + 2;;
  3297  0404  0020               	movlb	0	; select bank0
  3298  0405  082C               	movf	_Led_st_cnt,w
  3299  0406  3E02               	addlw	2
  3300  0407  00D1               	movwf	??_app_test_100ms
  3301  0408  0851               	movf	??_app_test_100ms,w
  3302  0409  00AC               	movwf	_Led_st_cnt
  3303                           
  3304                           ;app.c: 195: LATAbits.LATA2=0;
  3305  040A  0022               	movlb	2	; select bank2
  3306  040B  110C               	bcf	12,2	;volatile
  3307                           
  3308                           ;app.c: 196: }
  3309                           ;app.c: 197: }
  3310  040C  2C1C               	goto	l2247
  3311  040D                     l2237:	
  3312                           
  3313                           ;app.c: 198: else if(cmd_res_data[12] == 0x12)
  3314  040D  3012               	movlw	18
  3315  040E  0020               	movlb	0	; select bank0
  3316  040F  0649               	xorwf	_cmd_res_data+12,w
  3317  0410  1D03               	btfss	3,2
  3318  0411  2C1B               	goto	L3
  3319                           
  3320                           ;app.c: 199: {
  3321                           ;app.c: 200: cmd_res_data[13] = LATAbits.LATA2;
  3322  0412  3000               	movlw	0
  3323  0413  0022               	movlb	2	; select bank2
  3324  0414  190C               	btfsc	12,2	;volatile
  3325  0415  3001               	movlw	1
  3326  0416  0020               	movlb	0	; select bank0
  3327  0417                     L4:	
  3328  0417  00CA               	movwf	_cmd_res_data+13
  3329                           
  3330                           ;app.c: 201: cmd_res_data[14] = 0;
  3331  0418  01CB               	clrf	_cmd_res_data+14
  3332                           
  3333                           ;app.c: 202: }
  3334  0419  2C1C               	goto	l2247
  3335  041A                     l2245:	
  3336                           ;app.c: 209: }
  3337                           ;app.c: 210: }
  3338                           
  3339                           ;app.c: 203: else
  3340                           ;app.c: 204: {
  3341                           ;app.c: 205: resp_len = 0;
  3342                           
  3343                           
  3344                           ;app.c: 211: else
  3345                           ;app.c: 212: {
  3346                           ;app.c: 213: resp_len = 0;
  3347  041A  0020               	movlb	0	; select bank0
  3348  041B                     L3:	
  3349  041B  01D7               	clrf	app_test_100ms@resp_len
  3350  041C                     l2247:	
  3351                           
  3352                           ;app.c: 218: }
  3353                           ;app.c: 220: }
  3354                           ;app.c: 222: CRC_Chk(&cmd_res_data[0],(16 -1),1,MacKeyTemp);
  3355  041C  300F               	movlw	15
  3356  041D  0020               	movlb	0	; select bank0
  3357  041E  00D1               	movwf	??_app_test_100ms
  3358  041F  0851               	movf	??_app_test_100ms,w
  3359  0420  00F4               	movwf	CRC_Chk@len
  3360  0421  01F5               	clrf	CRC_Chk@flg
  3361  0422  0AF5               	incf	CRC_Chk@flg,f
  3362  0423  0856               	movf	app_test_100ms@MacKeyTemp,w
  3363  0424  00D2               	movwf	??_app_test_100ms+1
  3364  0425  0852               	movf	??_app_test_100ms+1,w
  3365  0426  00F6               	movwf	CRC_Chk@MacKey
  3366  0427  303D               	movlw	(low (_cmd_res_data| 0))& (0+255)
  3367  0428  25E5               	fcall	_CRC_Chk
  3368                           
  3369                           ;app.c: 223: Replay_Attack_Frame=0;
  3370  0429  0020               	movlb	0	; select bank0
  3371  042A  01A7               	clrf	_Replay_Attack_Frame
  3372                           
  3373                           ;app.c: 227: enc_dec(&cmd_res_data[1], (16 -1) ,temp_key);
  3374  042B  300F               	movlw	15
  3375  042C  00D1               	movwf	??_app_test_100ms
  3376  042D  0851               	movf	??_app_test_100ms,w
  3377  042E  00F4               	movwf	enc_dec@len
  3378  042F  085E               	movf	_temp_key,w
  3379  0430  00D2               	movwf	??_app_test_100ms+1
  3380  0431  0852               	movf	??_app_test_100ms+1,w
  3381  0432  00F5               	movwf	enc_dec@temp_key_0
  3382  0433  303E               	movlw	(low ((_cmd_res_data| 0+1)))& (0+255)
  3383  0434  2702               	fcall	_enc_dec
  3384                           
  3385                           ;app.c: 229: }
  3386  0435  2C44               	goto	l2259
  3387  0436                     l2251:	
  3388                           
  3389                           ;app.c: 230: else
  3390                           ;app.c: 231: {
  3391                           ;app.c: 232: Replay_Attack_Frame++;
  3392  0436  3001               	movlw	1
  3393  0437  0020               	movlb	0	; select bank0
  3394  0438  00D1               	movwf	??_app_test_100ms
  3395  0439  0851               	movf	??_app_test_100ms,w
  3396  043A  07A7               	addwf	_Replay_Attack_Frame,f
  3397                           
  3398                           ;app.c: 233: if(Replay_Attack_Frame> 5)
  3399  043B  3006               	movlw	6
  3400  043C  0227               	subwf	_Replay_Attack_Frame,w
  3401  043D  1C03               	skipc
  3402  043E  2C44               	goto	l2259
  3403                           
  3404                           ;app.c: 234: {
  3405                           ;app.c: 235: Replay_Attack_Frame=0;
  3406  043F  01A7               	clrf	_Replay_Attack_Frame
  3407                           
  3408                           ;app.c: 236: Replay_Attack=30;
  3409  0440  301E               	movlw	30
  3410  0441  00D1               	movwf	??_app_test_100ms
  3411  0442  0851               	movf	??_app_test_100ms,w
  3412  0443  00A8               	movwf	_Replay_Attack
  3413  0444                     l2259:	
  3414                           ;app.c: 243: else
  3415                           ;app.c: 244: {
  3416                           
  3417                           ;app.c: 237: }
  3418                           ;app.c: 240: }
  3419                           ;app.c: 242: }
  3420                           
  3421                           
  3422                           ;app.c: 250: }
  3423                           ;app.c: 252: if (resp_len != 0)
  3424  0444  0020               	movlb	0	; select bank0
  3425  0445  0857               	movf	app_test_100ms@resp_len,w
  3426  0446  1903               	btfsc	3,2
  3427  0447  2C51               	goto	l2263
  3428                           
  3429                           ;app.c: 253: {
  3430                           ;app.c: 255: com_send_dat(cmd_res_data,resp_len);
  3431  0448  303D               	movlw	low _cmd_res_data
  3432  0449  00F4               	movwf	com_send_dat@ptr
  3433  044A  3000               	movlw	high _cmd_res_data
  3434  044B  00F5               	movwf	com_send_dat@ptr+1
  3435  044C  0857               	movf	app_test_100ms@resp_len,w
  3436  044D  00D1               	movwf	??_app_test_100ms
  3437  044E  0851               	movf	??_app_test_100ms,w
  3438  044F  00F6               	movwf	com_send_dat@len
  3439  0450  25B4               	fcall	_com_send_dat
  3440  0451                     l2263:	
  3441                           ;app.c: 257: else
  3442                           ;app.c: 258: {
  3443                           
  3444                           ;app.c: 256: }
  3445                           
  3446                           
  3447                           ;app.c: 261: }
  3448                           ;app.c: 262: }
  3449                           ;app.c: 266: sw0_st = PORTAbits.RA5;
  3450  0451  3000               	movlw	0
  3451  0452  0020               	movlb	0	; select bank0
  3452  0453  1A8C               	btfsc	12,5	;volatile
  3453  0454  3001               	movlw	1
  3454  0455  00D9               	movwf	app_test_100ms@sw0_st	;volatile
  3455                           
  3456                           ;app.c: 267: if(sw0_st_prev!=sw0_st)
  3457  0456  0829               	movf	_sw0_st_prev,w
  3458  0457  0659               	xorwf	app_test_100ms@sw0_st,w	;volatile
  3459  0458  1903               	skipnz
  3460  0459  2C66               	goto	l2275
  3461                           
  3462                           ;app.c: 268: {
  3463                           ;app.c: 270: if(sw0_st)
  3464  045A  0859               	movf	app_test_100ms@sw0_st,w	;volatile
  3465  045B  1903               	btfsc	3,2
  3466  045C  2C5F               	goto	l2271
  3467                           
  3468                           ;app.c: 271: {
  3469                           ;app.c: 272: event_push(SW0_RELEASE);
  3470  045D  3001               	movlw	1
  3471  045E  2C60               	goto	L5
  3472  045F                     l2271:	
  3473                           ;app.c: 273: }
  3474                           
  3475                           
  3476                           ;app.c: 274: else
  3477                           ;app.c: 275: {
  3478                           ;app.c: 276: event_push(SW0_PRESS);
  3479  045F  3002               	movlw	2
  3480  0460                     L5:	
  3481  0460  267E               	fcall	_event_push
  3482                           
  3483                           ;app.c: 277: }
  3484                           ;app.c: 278: sw0_st_prev=sw0_st;
  3485  0461  0020               	movlb	0	; select bank0
  3486  0462  0859               	movf	app_test_100ms@sw0_st,w	;volatile
  3487  0463  00D1               	movwf	??_app_test_100ms
  3488  0464  0851               	movf	??_app_test_100ms,w
  3489  0465  00A9               	movwf	_sw0_st_prev
  3490  0466                     l2275:	
  3491                           
  3492                           ;app.c: 279: }
  3493                           ;app.c: 282: led0_task();
  3494  0466  2765               	fcall	_led0_task
  3495  0467  0008               	return
  3496  0468                     __end_of_app_test_100ms:	
  3497                           
  3498                           	psect	text13
  3499  07CF                     __ptext13:	
  3500 ;; *************** function _app_test_10ms *****************
  3501 ;; Defined at:
  3502 ;;		line 48 in file "../Src/app.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		None
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3516 ;;      Params:         0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    2
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_Run_Os
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _app_test_10ms
  3532  07CF                     _app_test_10ms:	
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _app_test_10ms: []
  3536  07CF  0008               	return
  3537  07D0                     __end_of_app_test_10ms:	
  3538                           
  3539                           	psect	text14
  3540  07D0                     __ptext14:	
  3541 ;; *************** function _app_test_1ms *****************
  3542 ;; Defined at:
  3543 ;;		line 44 in file "../Src/app.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		None
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_Run_Os
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _app_test_1ms
  3573  07D0                     _app_test_1ms:	
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _app_test_1ms: []
  3577  07D0  0008               	return
  3578  07D1                     __end_of_app_test_1ms:	
  3579                           
  3580                           	psect	text15
  3581  072B                     __ptext15:	
  3582 ;; *************** function _read_mem *****************
  3583 ;; Defined at:
  3584 ;;		line 326 in file "../Src/system.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  mem_addr        2    4[COMMON] unsigned int 
  3587 ;;  typ             1    6[COMMON] unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    4[COMMON] unsigned int 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3599 ;;      Params:         3       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         3       0       0       0       0
  3603 ;;Total ram usage:        3 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    3
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_app_ini
  3610 ;;		_app_test_100ms
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _read_mem
  3616  072B                     _read_mem:	
  3617                           
  3618                           ;system.c: 328: Bt_Data.ReadMem.typ = typ;
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in _read_mem: [allreg]
  3622  072B  306C               	movlw	108
  3623  072C  0086               	movwf	6
  3624  072D  3000               	movlw	0
  3625  072E  0087               	movwf	7
  3626  072F  0876               	movf	read_mem@typ,w
  3627  0730  0081               	movwf	1
  3628                           
  3629                           ;system.c: 329: Bt_Data.ReadMem.add = mem_addr;
  3630  0731  0875               	movf	read_mem@mem_addr+1,w
  3631  0732  0020               	movlb	0	; select bank0
  3632  0733  00E9               	movwf	105	;volatile
  3633  0734  0874               	movf	read_mem@mem_addr,w
  3634  0735  00E8               	movwf	104	;volatile
  3635                           
  3636                           ;system.c: 330: Bt_ReadData();
  3637  0736  3182 2206 3187     	fcall	518
  3638                           
  3639                           ;system.c: 331: return(Bt_Data.ReadMem.result);
  3640  0739  0020               	movlb	0	; select bank0
  3641  073A  086B               	movf	107,w	;volatile
  3642  073B  00F5               	movwf	?_read_mem+1
  3643  073C  086A               	movf	106,w	;volatile
  3644  073D  00F4               	movwf	?_read_mem
  3645  073E  0008               	return
  3646  073F                     __end_of_read_mem:	
  3647  0206                     _Bt_ReadData	set	518
  3648                           
  3649                           	psect	text16
  3650  065E                     __ptext16:	
  3651 ;; *************** function _mem_compare *****************
  3652 ;; Defined at:
  3653 ;;		line 361 in file "../Src/app.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  dest            1    wreg     PTR unsigned char 
  3656 ;;		 -> cmd_res_data(16), 
  3657 ;;  sour            1    4[COMMON] PTR unsigned char 
  3658 ;;		 -> lock_id(16), 
  3659 ;;  len             1    5[COMMON] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  dest            1    8[COMMON] PTR unsigned char 
  3662 ;;		 -> cmd_res_data(16), 
  3663 ;;  status          1    7[COMMON] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      unsigned char 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3673 ;;      Params:         2       0       0       0       0
  3674 ;;      Locals:         2       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0
  3676 ;;      Totals:         5       0       0       0       0
  3677 ;;Total ram usage:        5 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    2
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_app_test_100ms
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _mem_compare
  3689  065E                     _mem_compare:	
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _mem_compare: [wreg-fsr1h+status,2+status,0]
  3693                           ;mem_compare@dest stored from wreg
  3694  065E  00F8               	movwf	mem_compare@dest
  3695                           
  3696                           ;app.c: 363: uint8 status = 0;
  3697  065F  01F7               	clrf	mem_compare@status
  3698  0660                     l141:	
  3699                           ;app.c: 364: while(len)
  3700                           
  3701  0660  0875               	movf	mem_compare@len,w
  3702  0661  1903               	btfsc	3,2
  3703  0662  2E7C               	goto	l1573
  3704                           
  3705                           ;app.c: 365: {
  3706                           ;app.c: 366: if(*dest != *sour)
  3707  0663  0874               	movf	mem_compare@sour,w
  3708  0664  0086               	movwf	6
  3709  0665  0187               	clrf	7
  3710  0666  0878               	movf	mem_compare@dest,w
  3711  0667  0084               	movwf	4
  3712  0668  0185               	clrf	5
  3713  0669  0800               	movf	0,w
  3714  066A  0601               	xorwf	1,w
  3715  066B  1903               	skipnz
  3716  066C  2E71               	goto	l1571
  3717                           
  3718                           ;app.c: 367: {
  3719                           ;app.c: 368: status=1;
  3720  066D  01F7               	clrf	mem_compare@status
  3721  066E  0AF7               	incf	mem_compare@status,f
  3722                           
  3723                           ;app.c: 369: len = 1;
  3724  066F  01F5               	clrf	mem_compare@len
  3725  0670  0AF5               	incf	mem_compare@len,f
  3726  0671                     l1571:	
  3727                           
  3728                           ;app.c: 370: }
  3729                           ;app.c: 372: len--;
  3730  0671  3001               	movlw	1
  3731  0672  02F5               	subwf	mem_compare@len,f
  3732                           
  3733                           ;app.c: 373: sour++;
  3734  0673  3001               	movlw	1
  3735  0674  00F6               	movwf	??_mem_compare
  3736  0675  0876               	movf	??_mem_compare,w
  3737  0676  07F4               	addwf	mem_compare@sour,f
  3738                           
  3739                           ;app.c: 374: dest++;
  3740  0677  3001               	movlw	1
  3741  0678  00F6               	movwf	??_mem_compare
  3742  0679  0876               	movf	??_mem_compare,w
  3743  067A  07F8               	addwf	mem_compare@dest,f
  3744  067B  2E60               	goto	l141
  3745  067C                     l1573:	
  3746                           
  3747                           ;app.c: 375: }
  3748                           ;app.c: 376: return status;
  3749  067C  0877               	movf	mem_compare@status,w
  3750  067D  0008               	return
  3751  067E                     __end_of_mem_compare:	
  3752                           
  3753                           	psect	text17
  3754  0765                     __ptext17:	
  3755 ;; *************** function _led0_task *****************
  3756 ;; Defined at:
  3757 ;;		line 342 in file "../Src/system.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3771 ;;      Params:         0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0
  3773 ;;      Temps:          1       0       0       0       0
  3774 ;;      Totals:         1       0       0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    2
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_app_test_100ms
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _led0_task
  3787  0765                     _led0_task:	
  3788                           
  3789                           ;system.c: 345: if(Led_st_cnt)
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _led0_task: [wreg+status,2+status,0]
  3793  0765  0020               	movlb	0	; select bank0
  3794  0766  082C               	movf	_Led_st_cnt,w
  3795  0767  1903               	btfsc	3,2
  3796  0768  0008               	return
  3797                           
  3798                           ;system.c: 346: {
  3799                           ;system.c: 347: Led_st_cnt--;
  3800  0769  3001               	movlw	1
  3801  076A  02AC               	subwf	_Led_st_cnt,f
  3802                           
  3803                           ;system.c: 348: LATAbits.LATA0^=1;
  3804  076B  0022               	movlb	2	; select bank2
  3805  076C  080C               	movf	12,w	;volatile
  3806  076D  3901               	andlw	1
  3807  076E  00F4               	movwf	??_led0_task
  3808  076F  3001               	movlw	1
  3809  0770  06F4               	xorwf	??_led0_task,f
  3810  0771  080C               	movf	12,w	;volatile
  3811  0772  0674               	xorwf	??_led0_task,w
  3812  0773  39FE               	andlw	-2
  3813  0774  0674               	xorwf	??_led0_task,w
  3814  0775  008C               	movwf	12	;volatile
  3815  0776  0008               	return
  3816  0777                     __end_of_led0_task:	
  3817                           
  3818                           	psect	text18
  3819  0777                     __ptext18:	
  3820 ;; *************** function _get_temp_key *****************
  3821 ;; Defined at:
  3822 ;;		line 139 in file "../Src/os.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  temp_key        1    9[COMMON] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      unsigned char 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3836 ;;      Params:         0       0       0       0       0
  3837 ;;      Locals:         1       0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0
  3839 ;;      Totals:         2       0       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    3
  3843 ;; This function calls:
  3844 ;;		_os_get_sys_tim
  3845 ;; This function is called by:
  3846 ;;		_app_test_100ms
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           
  3851                           ;psect for function _get_temp_key
  3852  0777                     _get_temp_key:	
  3853                           
  3854                           ;os.c: 141: uint8 temp_key;
  3855                           ;os.c: 142: temp_key = os_get_sys_tim();
  3856                           
  3857                           ;incstack = 0
  3858                           ; Regs used in _get_temp_key: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3859  0777  26D2               	fcall	_os_get_sys_tim
  3860  0778  0874               	movf	?_os_get_sys_tim,w
  3861  0779  00F8               	movwf	??_get_temp_key
  3862  077A  0878               	movf	??_get_temp_key,w
  3863  077B  00F9               	movwf	get_temp_key@temp_key
  3864                           
  3865                           ;os.c: 143: if(temp_key == 0xFF)
  3866  077C  0A79               	incf	get_temp_key@temp_key,w
  3867  077D  1D03               	btfss	3,2
  3868  077E  2F83               	goto	l227
  3869                           
  3870                           ;os.c: 144: {
  3871                           ;os.c: 145: temp_key = 0xAA;
  3872  077F  30AA               	movlw	170
  3873  0780  00F8               	movwf	??_get_temp_key
  3874  0781  0878               	movf	??_get_temp_key,w
  3875  0782  00F9               	movwf	get_temp_key@temp_key
  3876  0783                     l227:	
  3877                           
  3878                           ;os.c: 146: }
  3879                           ;os.c: 147: return temp_key;
  3880  0783  0879               	movf	get_temp_key@temp_key,w
  3881  0784  0008               	return
  3882  0785                     __end_of_get_temp_key:	
  3883                           
  3884                           	psect	text19
  3885  06D2                     __ptext19:	
  3886 ;; *************** function _os_get_sys_tim *****************
  3887 ;; Defined at:
  3888 ;;		line 53 in file "../Src/os.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  temp_tim        4    0[BANK0l] unsigned long 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  4    4[COMMON] unsigned long 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3902 ;;      Params:         4       0       0       0       0
  3903 ;;      Locals:         0       0       4       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         4       0       4       0       0
  3906 ;;Total ram usage:        8 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    2
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_get_temp_key
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _os_get_sys_tim
  3918  06D2                     _os_get_sys_tim:	
  3919                           
  3920                           ;os.c: 55: uint32 temp_tim;
  3921                           ;os.c: 57: INTCONbits.GIE=0;
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _os_get_sys_tim: [wreg+fsr1l+fsr1h+status,2+status,0]
  3925  06D2  138B               	bcf	11,7	;volatile
  3926                           
  3927                           ;os.c: 58: temp_tim = os.os_time_ms;
  3928  06D3  3008               	movlw	8
  3929  06D4  3ED6               	addlw	(low (_os| 0))& (0+255)
  3930  06D5  0086               	movwf	6
  3931  06D6  0187               	clrf	7
  3932  06D7  3F40               	moviw [0]fsr1
  3933  06D8  0020               	movlb	0	; select bank0
  3934  06D9  00CD               	movwf	os_get_sys_tim@temp_tim
  3935  06DA  3F41               	moviw [1]fsr1
  3936  06DB  00CE               	movwf	os_get_sys_tim@temp_tim+1
  3937  06DC  3F42               	moviw [2]fsr1
  3938  06DD  00CF               	movwf	os_get_sys_tim@temp_tim+2
  3939  06DE  3F43               	moviw [3]fsr1
  3940  06DF  00D0               	movwf	os_get_sys_tim@temp_tim+3
  3941                           
  3942                           ;os.c: 59: INTCONbits.GIE=1;
  3943  06E0  178B               	bsf	11,7	;volatile
  3944                           
  3945                           ;os.c: 61: return (temp_tim);
  3946  06E1  0850               	movf	os_get_sys_tim@temp_tim+3,w
  3947  06E2  00F7               	movwf	?_os_get_sys_tim+3
  3948  06E3  084F               	movf	os_get_sys_tim@temp_tim+2,w
  3949  06E4  00F6               	movwf	?_os_get_sys_tim+2
  3950  06E5  084E               	movf	os_get_sys_tim@temp_tim+1,w
  3951  06E6  00F5               	movwf	?_os_get_sys_tim+1
  3952  06E7  084D               	movf	os_get_sys_tim@temp_tim,w
  3953  06E8  00F4               	movwf	?_os_get_sys_tim
  3954  06E9  0008               	return
  3955  06EA                     __end_of_os_get_sys_tim:	
  3956                           
  3957                           	psect	text20
  3958  067E                     __ptext20:	
  3959 ;; *************** function _event_push *****************
  3960 ;; Defined at:
  3961 ;;		line 109 in file "../Src/os.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  Event_ID        1    wreg     unsigned char 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  Event_ID        1    5[COMMON] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         1       0       0       0       0
  3977 ;;      Temps:          1       0       0       0       0
  3978 ;;      Totals:         2       0       0       0       0
  3979 ;;Total ram usage:        2 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    2
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_app_test_100ms
  3986 ;;		_app_test_BG
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _event_push
  3992  067E                     _event_push:	
  3993                           
  3994                           ;incstack = 0
  3995                           ; Regs used in _event_push: [wreg+fsr1l+fsr1h+status,2+status,0]
  3996                           ;event_push@Event_ID stored from wreg
  3997  067E  00F5               	movwf	event_push@Event_ID
  3998                           
  3999                           ;os.c: 111: if(!str_event.overflow)
  4000  067F  0020               	movlb	0	; select bank0
  4001  0680  0826               	movf	_str_event+6,w
  4002  0681  1D03               	btfss	3,2
  4003  0682  0008               	return
  4004                           
  4005                           ;os.c: 112: {
  4006                           ;os.c: 113: str_event.queue[str_event.head] = Event_ID;
  4007  0683  0875               	movf	event_push@Event_ID,w
  4008  0684  00F4               	movwf	??_event_push
  4009  0685  0820               	movf	_str_event,w
  4010  0686  3E22               	addlw	(low ((_str_event| 0+2)))& (0+255)
  4011  0687  0086               	movwf	6
  4012  0688  0187               	clrf	7
  4013  0689  0874               	movf	??_event_push,w
  4014  068A  0081               	movwf	1
  4015                           
  4016                           ;os.c: 114: if(str_event.head<(4 - 1)){str_event.head++;}else {str_event.head = 0;}
  4017  068B  3003               	movlw	3
  4018  068C  0220               	subwf	_str_event,w
  4019  068D  1803               	skipnc
  4020  068E  2E94               	goto	l1607
  4021  068F  3001               	movlw	1
  4022  0690  00F4               	movwf	??_event_push
  4023  0691  0874               	movf	??_event_push,w
  4024  0692  07A0               	addwf	_str_event,f
  4025  0693  2E95               	goto	l1609
  4026  0694                     l1607:	
  4027  0694  01A0               	clrf	_str_event
  4028  0695                     l1609:	
  4029                           
  4030                           ;os.c: 116: if(str_event.head == str_event.tale)
  4031  0695  0821               	movf	_str_event+1,w
  4032  0696  0620               	xorwf	_str_event,w
  4033  0697  1D03               	skipz
  4034  0698  0008               	return
  4035                           
  4036                           ;os.c: 117: {
  4037                           ;os.c: 118: str_event.overflow=1;
  4038  0699  01A6               	clrf	_str_event+6
  4039  069A  0AA6               	incf	_str_event+6,f
  4040                           
  4041                           ;os.c: 119: }
  4042                           ;os.c: 120: }
  4043  069B  0008               	return
  4044  069C                     __end_of_event_push:	
  4045                           ;os.c: 121: else
  4046                           ;os.c: 122: {
  4047                           
  4048                           
  4049                           	psect	text21
  4050  0702                     __ptext21:	
  4051 ;; *************** function _enc_dec *****************
  4052 ;; Defined at:
  4053 ;;		line 399 in file "../Src/app.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  data            1    wreg     PTR unsigned char 
  4056 ;;		 -> cmd_res_data(16), 
  4057 ;;  len             1    4[COMMON] unsigned char 
  4058 ;;  temp_key_0      1    5[COMMON] unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  data            1    8[COMMON] PTR unsigned char 
  4061 ;;		 -> cmd_res_data(16), 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4071 ;;      Params:         2       0       0       0       0
  4072 ;;      Locals:         1       0       0       0       0
  4073 ;;      Temps:          2       0       0       0       0
  4074 ;;      Totals:         5       0       0       0       0
  4075 ;;Total ram usage:        5 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    2
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_app_test_100ms
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _enc_dec
  4087  0702                     _enc_dec:	
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _enc_dec: [wreg+fsr1l+fsr1h+status,2+status,0]
  4091                           ;enc_dec@data stored from wreg
  4092  0702  00F8               	movwf	enc_dec@data
  4093  0703                     l1533:	
  4094                           ;app.c: 401: while(len)
  4095                           
  4096  0703  0874               	movf	enc_dec@len,w
  4097  0704  1903               	btfsc	3,2
  4098  0705  0008               	return
  4099                           
  4100                           ;app.c: 402: {
  4101                           ;app.c: 403: len--;
  4102  0706  3001               	movlw	1
  4103  0707  02F4               	subwf	enc_dec@len,f
  4104                           
  4105                           ;app.c: 404: data[len] ^= temp_key_0;
  4106  0708  0875               	movf	enc_dec@temp_key_0,w
  4107  0709  00F6               	movwf	??_enc_dec
  4108  070A  0874               	movf	enc_dec@len,w
  4109  070B  0778               	addwf	enc_dec@data,w
  4110  070C  00F7               	movwf	??_enc_dec+1
  4111  070D  0877               	movf	??_enc_dec+1,w
  4112  070E  0086               	movwf	6
  4113  070F  0187               	clrf	7
  4114  0710  0876               	movf	??_enc_dec,w
  4115  0711  0681               	xorwf	1,f
  4116                           
  4117                           ;app.c: 405: temp_key_0 ^= len;
  4118  0712  0874               	movf	enc_dec@len,w
  4119  0713  00F6               	movwf	??_enc_dec
  4120  0714  0876               	movf	??_enc_dec,w
  4121  0715  06F5               	xorwf	enc_dec@temp_key_0,f
  4122  0716  2F03               	goto	l1533
  4123  0717                     __end_of_enc_dec:	
  4124                           
  4125                           	psect	text22
  4126  0785                     __ptext22:	
  4127 ;; *************** function _eep_write_char *****************
  4128 ;; Defined at:
  4129 ;;		line 333 in file "../Src/system.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  add             1    wreg     unsigned char 
  4132 ;;  data            1    4[COMMON] unsigned char 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  add             1    6[COMMON] unsigned char 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4144 ;;      Params:         1       0       0       0       0
  4145 ;;      Locals:         1       0       0       0       0
  4146 ;;      Temps:          1       0       0       0       0
  4147 ;;      Totals:         3       0       0       0       0
  4148 ;;Total ram usage:        3 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    3
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_app_test_100ms
  4155 ;;		_app_test_BG
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _eep_write_char
  4161  0785                     _eep_write_char:	
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in _eep_write_char: [allreg]
  4165                           ;eep_write_char@add stored from wreg
  4166  0785  00F6               	movwf	eep_write_char@add
  4167                           
  4168                           ;system.c: 335: Bt_Data.EepWr.add=add;
  4169  0786  0876               	movf	eep_write_char@add,w
  4170  0787  00F5               	movwf	??_eep_write_char
  4171  0788  0875               	movf	??_eep_write_char,w
  4172  0789  0020               	movlb	0	; select bank0
  4173  078A  00E8               	movwf	104	;volatile
  4174                           
  4175                           ;system.c: 336: Bt_Data.EepWr.eep_data=data;
  4176  078B  0874               	movf	eep_write_char@data,w
  4177  078C  00E9               	movwf	105	;volatile
  4178                           
  4179                           ;system.c: 337: INTCONbits.GIE=0;
  4180  078D  138B               	bcf	11,7	;volatile
  4181                           
  4182                           ;system.c: 338: Bt_WriteEep();
  4183  078E  3182 2238 3187     	fcall	568
  4184                           
  4185                           ;system.c: 339: INTCONbits.GIE=1;
  4186  0791  178B               	bsf	11,7	;volatile
  4187  0792  0008               	return
  4188  0793                     __end_of_eep_write_char:	
  4189  0238                     _Bt_WriteEep	set	568
  4190                           
  4191                           	psect	text23
  4192  06EA                     __ptext23:	
  4193 ;; *************** function _com_rx_read_char *****************
  4194 ;; Defined at:
  4195 ;;		line 135 in file "../Src/uart.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  temp_val        1    5[COMMON] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      unsigned char 
  4202 ;; Registers used:
  4203 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4209 ;;      Params:         0       0       0       0       0
  4210 ;;      Locals:         1       0       0       0       0
  4211 ;;      Temps:          1       0       0       0       0
  4212 ;;      Totals:         2       0       0       0       0
  4213 ;;Total ram usage:        2 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_app_test_100ms
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _com_rx_read_char
  4225  06EA                     _com_rx_read_char:	
  4226                           
  4227                           ;uart.c: 137: uint8 temp_val=0;
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _com_rx_read_char: [wreg+fsr1l+fsr1h+status,2+status,0]
  4231  06EA  01F5               	clrf	com_rx_read_char@temp_val
  4232                           
  4233                           ;uart.c: 139: INTCONbits.GIE=0;
  4234  06EB  138B               	bcf	11,7	;volatile
  4235                           
  4236                           ;uart.c: 140: temp_val=com.rx_buf[com.rx_tale];
  4237  06EC  0021               	movlb	1	; select bank1
  4238  06ED  0854               	movf	(_com^(0+128)+52),w
  4239  06EE  3EBB               	addlw	(low ((_com| 0+27)))& (0+255)
  4240  06EF  0086               	movwf	6
  4241  06F0  0187               	clrf	7
  4242  06F1  0801               	movf	1,w
  4243  06F2  00F4               	movwf	??_com_rx_read_char
  4244  06F3  0874               	movf	??_com_rx_read_char,w
  4245  06F4  00F5               	movwf	com_rx_read_char@temp_val
  4246                           
  4247                           ;uart.c: 141: if(com.rx_tale>=(24u - 1u)){com.rx_tale = 0u;}else{com.rx_tale++;};
  4248  06F5  3017               	movlw	23
  4249  06F6  0254               	subwf	(_com^(0+128)+52),w
  4250  06F7  1C03               	skipc
  4251  06F8  2EFB               	goto	l1509
  4252  06F9  01D4               	clrf	(_com^(0+128)+52)
  4253  06FA  2EFF               	goto	l1511
  4254  06FB                     l1509:	
  4255  06FB  3001               	movlw	1
  4256  06FC  00F4               	movwf	??_com_rx_read_char
  4257  06FD  0874               	movf	??_com_rx_read_char,w
  4258  06FE  07D4               	addwf	(_com^(0+128)+52),f
  4259  06FF                     l1511:	
  4260                           
  4261                           ;uart.c: 142: INTCONbits.GIE=1;
  4262  06FF  178B               	bsf	11,7	;volatile
  4263                           
  4264                           ;uart.c: 144: return temp_val;
  4265  0700  0875               	movf	com_rx_read_char@temp_val,w
  4266  0701  0008               	return
  4267  0702                     __end_of_com_rx_read_char:	
  4268                           
  4269                           	psect	text24
  4270  073F                     __ptext24:	
  4271 ;; *************** function _com_get_rx_buf_lnt *****************
  4272 ;; Defined at:
  4273 ;;		line 58 in file "../Src/uart.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  temp_dif        1    5[COMMON] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      unsigned char 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4287 ;;      Params:         0       0       0       0       0
  4288 ;;      Locals:         1       0       0       0       0
  4289 ;;      Temps:          1       0       0       0       0
  4290 ;;      Totals:         2       0       0       0       0
  4291 ;;Total ram usage:        2 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    2
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_app_test_100ms
  4298 ;;		_com_if_received
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _com_get_rx_buf_lnt
  4304  073F                     _com_get_rx_buf_lnt:	
  4305                           
  4306                           ;uart.c: 60: uint8 temp_dif;
  4307                           ;uart.c: 61: INTCONbits.GIE=0;
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _com_get_rx_buf_lnt: [wreg+status,2+status,0]
  4311  073F  138B               	bcf	11,7	;volatile
  4312                           
  4313                           ;uart.c: 62: if(com.rx_head >= com.rx_tale)
  4314  0740  0021               	movlb	1	; select bank1
  4315  0741  0854               	movf	(_com^(0+128)+52),w
  4316  0742  0253               	subwf	(_com^(0+128)+51),w
  4317  0743  1C03               	skipc
  4318  0744  2F49               	goto	l1491
  4319                           
  4320                           ;uart.c: 63: {
  4321                           ;uart.c: 64: temp_dif = (com.rx_head - com.rx_tale);
  4322  0745  0354               	decf	(_com^(0+128)+52),w
  4323  0746  3AFF               	xorlw	255
  4324  0747  0753               	addwf	(_com^(0+128)+51),w
  4325  0748  2F4D               	goto	L6
  4326  0749                     l1491:	
  4327                           ;uart.c: 65: }
  4328                           
  4329                           
  4330                           ;uart.c: 66: else
  4331                           ;uart.c: 67: {
  4332                           ;uart.c: 68: temp_dif = ((24u-com.rx_tale) + com.rx_head);
  4333  0749  0354               	decf	(_com^(0+128)+52),w
  4334  074A  3AFF               	xorlw	255
  4335  074B  0753               	addwf	(_com^(0+128)+51),w
  4336  074C  3E18               	addlw	24
  4337  074D                     L6:	
  4338  074D  00F4               	movwf	??_com_get_rx_buf_lnt
  4339  074E  0874               	movf	??_com_get_rx_buf_lnt,w
  4340  074F  00F5               	movwf	com_get_rx_buf_lnt@temp_dif
  4341                           
  4342                           ;uart.c: 69: }
  4343                           ;uart.c: 70: INTCONbits.GIE=1;
  4344  0750  178B               	bsf	11,7	;volatile
  4345                           
  4346                           ;uart.c: 71: return(temp_dif);
  4347  0751  0875               	movf	com_get_rx_buf_lnt@temp_dif,w
  4348  0752  0008               	return
  4349  0753                     __end_of_com_get_rx_buf_lnt:	
  4350                           
  4351                           	psect	text25
  4352  05E5                     __ptext25:	
  4353 ;; *************** function _CRC_Chk *****************
  4354 ;; Defined at:
  4355 ;;		line 379 in file "../Src/app.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  dbuf            1    wreg     PTR unsigned char 
  4358 ;;		 -> cmd_res_data(16), 
  4359 ;;  len             1    4[COMMON] unsigned char 
  4360 ;;  flg             1    5[COMMON] unsigned char 
  4361 ;;  MacKey          1    6[COMMON] unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  dbuf            1    2[BANK0h] PTR unsigned char 
  4364 ;;		 -> cmd_res_data(16), 
  4365 ;;  sum             1    1[BANK0h] unsigned char 
  4366 ;;  st              1    0[BANK0h] unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      unsigned char 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4376 ;;      Params:         3       0       0       0       0
  4377 ;;      Locals:         0       3       0       0       0
  4378 ;;      Temps:          1       0       0       0       0
  4379 ;;      Totals:         4       3       0       0       0
  4380 ;;Total ram usage:        7 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    2
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_app_test_100ms
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _CRC_Chk
  4392  05E5                     _CRC_Chk:	
  4393                           
  4394                           ;incstack = 0
  4395                           ; Regs used in _CRC_Chk: [wreg+fsr1l+fsr1h+status,2+status,0]
  4396                           ;CRC_Chk@dbuf stored from wreg
  4397  05E5  0020               	movlb	0	; select bank0
  4398  05E6  00DD               	movwf	CRC_Chk@dbuf
  4399                           
  4400                           ;app.c: 381: uint8 sum = 0,st=0;
  4401  05E7  01DC               	clrf	CRC_Chk@sum
  4402  05E8  01DB               	clrf	CRC_Chk@st
  4403  05E9                     l2095:	
  4404                           ;app.c: 382: while(len)
  4405                           
  4406  05E9  0874               	movf	CRC_Chk@len,w
  4407  05EA  1903               	btfsc	3,2
  4408  05EB  2DFA               	goto	l2097
  4409                           
  4410                           ;app.c: 383: {
  4411                           ;app.c: 384: sum +=*dbuf;
  4412  05EC  085D               	movf	CRC_Chk@dbuf,w
  4413  05ED  0086               	movwf	6
  4414  05EE  0187               	clrf	7
  4415  05EF  0801               	movf	1,w
  4416  05F0  00F7               	movwf	??_CRC_Chk
  4417  05F1  0877               	movf	??_CRC_Chk,w
  4418  05F2  07DC               	addwf	CRC_Chk@sum,f
  4419                           
  4420                           ;app.c: 385: dbuf++;
  4421  05F3  3001               	movlw	1
  4422  05F4  00F7               	movwf	??_CRC_Chk
  4423  05F5  0877               	movf	??_CRC_Chk,w
  4424  05F6  07DD               	addwf	CRC_Chk@dbuf,f
  4425                           
  4426                           ;app.c: 386: len--;
  4427  05F7  3001               	movlw	1
  4428  05F8  02F4               	subwf	CRC_Chk@len,f
  4429  05F9  2DE9               	goto	l2095
  4430  05FA                     l2097:	
  4431                           
  4432                           ;app.c: 387: }
  4433                           ;app.c: 388: if(flg)
  4434  05FA  0875               	movf	CRC_Chk@flg,w
  4435  05FB  1903               	btfsc	3,2
  4436  05FC  2E05               	goto	l151
  4437                           
  4438                           ;app.c: 389: {
  4439                           ;app.c: 390: *dbuf = sum^MacKey;
  4440  05FD  085C               	movf	CRC_Chk@sum,w
  4441  05FE  0676               	xorwf	CRC_Chk@MacKey,w
  4442  05FF  00F7               	movwf	??_CRC_Chk
  4443  0600  085D               	movf	CRC_Chk@dbuf,w
  4444  0601  0086               	movwf	6
  4445  0602  0187               	clrf	7
  4446  0603  0877               	movf	??_CRC_Chk,w
  4447  0604  0081               	movwf	1
  4448  0605                     l151:	
  4449                           
  4450                           ;app.c: 391: }
  4451                           ;app.c: 392: if((sum^MacKey) == *dbuf)
  4452  0605  085D               	movf	CRC_Chk@dbuf,w
  4453  0606  0086               	movwf	6
  4454  0607  0187               	clrf	7
  4455  0608  0876               	movf	CRC_Chk@MacKey,w
  4456  0609  065C               	xorwf	CRC_Chk@sum,w
  4457  060A  00F7               	movwf	??_CRC_Chk
  4458  060B  0877               	movf	??_CRC_Chk,w
  4459  060C  0601               	xorwf	1,w
  4460  060D  1D03               	skipz
  4461  060E  2E11               	goto	l2103
  4462                           
  4463                           ;app.c: 393: {
  4464                           ;app.c: 394: st = 1;
  4465  060F  01DB               	clrf	CRC_Chk@st
  4466  0610  0ADB               	incf	CRC_Chk@st,f
  4467  0611                     l2103:	
  4468                           
  4469                           ;app.c: 395: }
  4470                           ;app.c: 396: return st;
  4471  0611  085B               	movf	CRC_Chk@st,w
  4472  0612  0008               	return
  4473  0613                     __end_of_CRC_Chk:	
  4474                           
  4475                           	psect	text26
  4476  05B4                     __ptext26:	
  4477 ;; *************** function _com_send_dat *****************
  4478 ;; Defined at:
  4479 ;;		line 5 in file "../Src/uart.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  ptr             2    4[COMMON] PTR unsigned char 
  4482 ;;		 -> STR_2(7), STR_1(10), cmd_res_data(16), lock_id(16), 
  4483 ;;  len             1    6[COMMON] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4495 ;;      Params:         3       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0
  4497 ;;      Temps:          1       0       0       0       0
  4498 ;;      Totals:         4       0       0       0       0
  4499 ;;Total ram usage:        4 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_app_test_100ms
  4506 ;;		_app_test_1000ms
  4507 ;;		_app_test_BG
  4508 ;;		_com_send_string
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           
  4513                           ;psect for function _com_send_dat
  4514  05B4                     _com_send_dat:	
  4515  05B4                     l349:	
  4516                           
  4517                           ;uart.c: 21: INTCONbits.GIE=0;
  4518  05B4  138B               	bcf	11,7	;volatile
  4519  05B5                     l1597:	
  4520  05B5  0876               	movf	com_send_dat@len,w
  4521  05B6  1903               	btfsc	3,2
  4522  05B7  2DE1               	goto	l350
  4523                           
  4524                           ;uart.c: 9: {
  4525                           ;uart.c: 10: com.tx_buf[com.tx_head]=*ptr;
  4526                           
  4527                           ;uart.c: 8: while(len)
  4528                           
  4529                           ;uart.c: 7: INTCONbits.GIE=0;
  4530                           
  4531                           ;incstack = 0
  4532                           ; Regs used in _com_send_dat: [wreg-fsr1h+status,2+status,0+pclath]
  4533  05B8  0874               	movf	com_send_dat@ptr,w
  4534  05B9  0084               	movwf	4
  4535  05BA  0875               	movf	com_send_dat@ptr+1,w
  4536  05BB  0085               	movwf	5
  4537  05BC  0800               	movf	0,w	;code access
  4538  05BD  00F7               	movwf	??_com_send_dat
  4539  05BE  0021               	movlb	1	; select bank1
  4540  05BF  0838               	movf	(_com^(0+128)+24),w
  4541  05C0  3EA0               	addlw	(low (_com| 0))& (0+255)
  4542  05C1  0086               	movwf	6
  4543  05C2  0187               	clrf	7
  4544  05C3  0877               	movf	??_com_send_dat,w
  4545  05C4  0081               	movwf	1
  4546                           
  4547                           ;uart.c: 11: ptr++;
  4548  05C5  3001               	movlw	1
  4549  05C6  07F4               	addwf	com_send_dat@ptr,f
  4550  05C7  3000               	movlw	0
  4551  05C8  3DF5               	addwfc	com_send_dat@ptr+1,f
  4552                           
  4553                           ;uart.c: 12: len--;
  4554  05C9  3001               	movlw	1
  4555  05CA  02F6               	subwf	com_send_dat@len,f
  4556                           
  4557                           ;uart.c: 13: if(com.tx_head>=(24u - 1u)){com.tx_head = 0;}else{com.tx_head++;};
  4558  05CB  3017               	movlw	23
  4559  05CC  0238               	subwf	(_com^(0+128)+24),w
  4560  05CD  1C03               	skipc
  4561  05CE  2DD1               	goto	l1589
  4562  05CF  01B8               	clrf	(_com^(0+128)+24)
  4563  05D0  2DD5               	goto	l1591
  4564  05D1                     l1589:	
  4565  05D1  3001               	movlw	1
  4566  05D2  00F7               	movwf	??_com_send_dat
  4567  05D3  0877               	movf	??_com_send_dat,w
  4568  05D4  07B8               	addwf	(_com^(0+128)+24),f
  4569  05D5                     l1591:	
  4570                           
  4571                           ;uart.c: 14: if((com.tx_tale == com.tx_head))
  4572  05D5  0839               	movf	(_com^(0+128)+25),w
  4573  05D6  0638               	xorwf	(_com^(0+128)+24),w
  4574  05D7  1D03               	skipz
  4575  05D8  2DB5               	goto	l1597
  4576                           
  4577                           ;uart.c: 15: {
  4578                           ;uart.c: 16: com.tx_ovrfl = 1;
  4579  05D9  01BA               	clrf	(_com^(0+128)+26)
  4580  05DA  0ABA               	incf	(_com^(0+128)+26),f
  4581                           
  4582                           ;uart.c: 18: (TXIE = 1);
  4583  05DB  1611               	bsf	17,4	;volatile
  4584                           
  4585                           ;uart.c: 19: INTCONbits.GIE=1;
  4586  05DC  178B               	bsf	11,7	;volatile
  4587  05DD                     l1595:	
  4588                           ;uart.c: 20: while(com.tx_ovrfl);
  4589                           
  4590  05DD  083A               	movf	(_com^(0+128)+26),w
  4591  05DE  1903               	btfsc	3,2
  4592  05DF  2DB4               	goto	l349
  4593  05E0  2DDD               	goto	l1595
  4594  05E1                     l350:	
  4595                           
  4596                           ;uart.c: 22: }
  4597                           ;uart.c: 24: }
  4598                           ;uart.c: 26: (TXIE = 1);
  4599  05E1  0021               	movlb	1	; select bank1
  4600  05E2  1611               	bsf	17,4	;volatile
  4601                           
  4602                           ;uart.c: 27: INTCONbits.GIE=1;
  4603  05E3  178B               	bsf	11,7	;volatile
  4604  05E4  0008               	return
  4605  05E5                     __end_of_com_send_dat:	
  4606                           
  4607                           	psect	intentry
  4608  02A4                     __pintentry:	
  4609 ;; *************** function _isr *****************
  4610 ;; Defined at:
  4611 ;;		line 21 in file "../Src/system.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4625 ;;      Params:         0       0       0       0       0
  4626 ;;      Locals:         0       0       0       0       0
  4627 ;;      Temps:          2       0       0       0       0
  4628 ;;      Totals:         2       0       0       0       0
  4629 ;;Total ram usage:        2 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    1
  4632 ;; This function calls:
  4633 ;;		_byte_received
  4634 ;;		_byte_transmit
  4635 ;; This function is called by:
  4636 ;;		Interrupt level 1
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640  02A4                     _isr:	
  4641                           
  4642                           ;incstack = 0
  4643  02A4  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4644                           
  4645                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4646  02A5  3182               	pagesel	$
  4647  02A6  0020               	movlb	0	; select bank0
  4648  02A7  087F               	movf	127,w
  4649  02A8  00F3               	movwf	??_isr+1
  4650                           
  4651                           ;system.c: 25: if(PIR0bits.TMR0IF)
  4652  02A9  1E90               	btfss	16,5	;volatile
  4653  02AA  2AB2               	goto	i1l1999
  4654                           
  4655                           ;system.c: 26: {
  4656                           ;system.c: 27: (os.time_keeper[0] = 10);
  4657  02AB  300A               	movlw	10
  4658  02AC  00F2               	movwf	??_isr
  4659  02AD  0872               	movf	??_isr,w
  4660  02AE  0021               	movlb	1	; select bank1
  4661  02AF  00E4               	movwf	(_os^(0+128)+14)
  4662                           
  4663                           ;system.c: 29: PIR0bits.TMR0IF=0;
  4664  02B0  0020               	movlb	0	; select bank0
  4665  02B1  1290               	bcf	16,5	;volatile
  4666  02B2                     i1l1999:	
  4667                           
  4668                           ;system.c: 32: }
  4669                           ;system.c: 33: if(PIR1bits.RCIF)
  4670  02B2  1E91               	btfss	17,5	;volatile
  4671  02B3  2AB6               	goto	i1l294
  4672                           
  4673                           ;system.c: 34: {
  4674                           ;system.c: 36: byte_received();
  4675  02B4  2613               	fcall	_byte_received
  4676                           
  4677                           ;system.c: 38: }
  4678  02B5  2ABC               	goto	i1l2007
  4679  02B6                     i1l294:	
  4680                           
  4681                           ;system.c: 39: else if(PIR1bits.TXIF)
  4682  02B6  1E11               	btfss	17,4	;volatile
  4683  02B7  2ABC               	goto	i1l2007
  4684                           
  4685                           ;system.c: 40: {
  4686                           ;system.c: 41: if(TXIE)
  4687  02B8  0021               	movlb	1	; select bank1
  4688  02B9  1E11               	btfss	17,4	;volatile
  4689  02BA  2ABC               	goto	i1l2007
  4690                           
  4691                           ;system.c: 42: {
  4692                           ;system.c: 43: byte_transmit();
  4693  02BB  263A               	fcall	_byte_transmit
  4694  02BC                     i1l2007:	
  4695                           
  4696                           ;system.c: 44: }
  4697                           ;system.c: 49: }
  4698                           ;system.c: 50: if(TMR2IF)
  4699  02BC  0020               	movlb	0	; select bank0
  4700  02BD  1891               	btfsc	17,1	;volatile
  4701                           
  4702                           ;system.c: 51: {
  4703                           ;system.c: 52: TMR2IF=0;
  4704  02BE  1091               	bcf	17,1	;volatile
  4705                           
  4706                           ;system.c: 53: }
  4707                           ;system.c: 54: if(ADIF)
  4708  02BF  1B11               	btfsc	17,6	;volatile
  4709                           
  4710                           ;system.c: 55: {
  4711                           ;system.c: 59: ADIF=0;
  4712  02C0  1311               	bcf	17,6	;volatile
  4713  02C1  0873               	movf	??_isr+1,w
  4714  02C2  00FF               	movwf	127
  4715  02C3  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4716  02C4  0009               	retfie
  4717  02C5                     __end_of_isr:	
  4718                           
  4719                           	psect	text28
  4720  063A                     __ptext28:	
  4721 ;; *************** function _byte_transmit *****************
  4722 ;; Defined at:
  4723 ;;		line 187 in file "../Src/uart.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4737 ;;      Params:         0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0
  4739 ;;      Temps:          1       0       0       0       0
  4740 ;;      Totals:         1       0       0       0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_isr
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _byte_transmit
  4752  063A                     _byte_transmit:	
  4753                           
  4754                           ;uart.c: 189: if((com.tx_tale != com.tx_head) || com.tx_ovrfl )
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _byte_transmit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4758  063A  0021               	movlb	1	; select bank1
  4759  063B  0839               	movf	(_com^(0+128)+25),w
  4760  063C  0638               	xorwf	(_com^(0+128)+24),w
  4761  063D  1903               	btfsc	3,2
  4762  063E  083A               	movf	(_com^(0+128)+26),w
  4763  063F  1903               	btfsc	3,2
  4764  0640  2E5C               	goto	i1l396
  4765                           
  4766                           ;uart.c: 190: {
  4767                           ;uart.c: 191: TX1REG = com.tx_buf[com.tx_tale];
  4768  0641  0839               	movf	(_com^(0+128)+25),w
  4769  0642  3EA0               	addlw	(low (_com| 0))& (0+255)
  4770  0643  0086               	movwf	6
  4771  0644  0187               	clrf	7
  4772  0645  0801               	movf	1,w
  4773  0646  0023               	movlb	3	; select bank3
  4774  0647  009A               	movwf	26	;volatile
  4775                           
  4776                           ;uart.c: 192: if(com.tx_tale>=(24u - 1u)){ com.tx_tale = 0u;}else{com.tx_tale++;};
  4777  0648  3017               	movlw	23
  4778  0649  0021               	movlb	1	; select bank1
  4779  064A  0239               	subwf	(_com^(0+128)+25),w
  4780  064B  1C03               	skipc
  4781  064C  2E4F               	goto	i1l1981
  4782  064D  01B9               	clrf	(_com^(0+128)+25)
  4783  064E  2E53               	goto	i1l1983
  4784  064F                     i1l1981:	
  4785  064F  3001               	movlw	1
  4786  0650  00F0               	movwf	??_byte_transmit
  4787  0651  0870               	movf	??_byte_transmit,w
  4788  0652  07B9               	addwf	(_com^(0+128)+25),f
  4789  0653                     i1l1983:	
  4790                           
  4791                           ;uart.c: 193: if((com.tx_tale == com.tx_head))
  4792  0653  0839               	movf	(_com^(0+128)+25),w
  4793  0654  0638               	xorwf	(_com^(0+128)+24),w
  4794  0655  1903               	btfsc	3,2
  4795                           
  4796                           ;uart.c: 194: {
  4797                           ;uart.c: 195: (TXIE = 0);
  4798  0656  1211               	bcf	17,4	;volatile
  4799                           
  4800                           ;uart.c: 196: }
  4801                           ;uart.c: 197: if(com.tx_ovrfl)
  4802  0657  083A               	movf	(_com^(0+128)+26),w
  4803  0658  1903               	btfsc	3,2
  4804  0659  0008               	return
  4805                           
  4806                           ;uart.c: 198: {
  4807                           ;uart.c: 199: com.tx_ovrfl=0;
  4808  065A  01BA               	clrf	(_com^(0+128)+26)
  4809                           
  4810                           ;uart.c: 200: }
  4811                           ;uart.c: 201: }
  4812  065B  0008               	return
  4813  065C                     i1l396:	
  4814                           
  4815                           ;uart.c: 202: else
  4816                           ;uart.c: 203: {
  4817                           ;uart.c: 204: (TXIE = 0);
  4818  065C  1211               	bcf	17,4	;volatile
  4819  065D  0008               	return
  4820  065E                     __end_of_byte_transmit:	
  4821                           
  4822                           	psect	text29
  4823  0613                     __ptext29:	
  4824 ;; *************** function _byte_received *****************
  4825 ;; Defined at:
  4826 ;;		line 170 in file "../Src/uart.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  temp_data       1    1[COMMON] unsigned char 
  4831 ;; Return value:  Size  Location     Type
  4832 ;;                  1    wreg      void 
  4833 ;; Registers used:
  4834 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4840 ;;      Params:         0       0       0       0       0
  4841 ;;      Locals:         1       0       0       0       0
  4842 ;;      Temps:          1       0       0       0       0
  4843 ;;      Totals:         2       0       0       0       0
  4844 ;;Total ram usage:        2 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_isr
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _byte_received
  4855  0613                     _byte_received:	
  4856                           
  4857                           ;uart.c: 172: uint8 temp_data;
  4858                           ;uart.c: 173: temp_data = RC1REG;
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _byte_received: [wreg+fsr1l+fsr1h+status,2+status,0]
  4862  0613  0023               	movlb	3	; select bank3
  4863  0614  0819               	movf	25,w	;volatile
  4864  0615  00F0               	movwf	??_byte_received
  4865  0616  0870               	movf	??_byte_received,w
  4866  0617  00F1               	movwf	byte_received@temp_data
  4867                           
  4868                           ;uart.c: 174: if(!((com.rx_ovrfl)&& ((com.rx_tale == com.rx_head))))
  4869  0618  0021               	movlb	1	; select bank1
  4870  0619  0855               	movf	(_com^(0+128)+53),w
  4871  061A  1903               	btfsc	3,2
  4872  061B  2E20               	goto	i1l1957
  4873  061C  0854               	movf	(_com^(0+128)+52),w
  4874  061D  0653               	xorwf	(_com^(0+128)+51),w
  4875  061E  1903               	skipnz
  4876  061F  0008               	return
  4877  0620                     i1l1957:	
  4878                           
  4879                           ;uart.c: 175: {
  4880                           ;uart.c: 176: com.rx_ovrfl = 0;
  4881  0620  01D5               	clrf	(_com^(0+128)+53)
  4882                           
  4883                           ;uart.c: 177: com.rx_buf[com.rx_head] = temp_data;
  4884  0621  0871               	movf	byte_received@temp_data,w
  4885  0622  00F0               	movwf	??_byte_received
  4886  0623  0853               	movf	(_com^(0+128)+51),w
  4887  0624  3EBB               	addlw	(low ((_com| 0+27)))& (0+255)
  4888  0625  0086               	movwf	6
  4889  0626  0187               	clrf	7
  4890  0627  0870               	movf	??_byte_received,w
  4891  0628  0081               	movwf	1
  4892                           
  4893                           ;uart.c: 178: if(com.rx_head>=(24u - 1u)){com.rx_head = 0u;}else{com.rx_head++;};
  4894  0629  3017               	movlw	23
  4895  062A  0253               	subwf	(_com^(0+128)+51),w
  4896  062B  1C03               	skipc
  4897  062C  2E2F               	goto	i1l1965
  4898  062D  01D3               	clrf	(_com^(0+128)+51)
  4899  062E  2E33               	goto	i1l1967
  4900  062F                     i1l1965:	
  4901  062F  3001               	movlw	1
  4902  0630  00F0               	movwf	??_byte_received
  4903  0631  0870               	movf	??_byte_received,w
  4904  0632  07D3               	addwf	(_com^(0+128)+51),f
  4905  0633                     i1l1967:	
  4906                           
  4907                           ;uart.c: 179: if((com.rx_tale == com.rx_head))
  4908  0633  0854               	movf	(_com^(0+128)+52),w
  4909  0634  0653               	xorwf	(_com^(0+128)+51),w
  4910  0635  1D03               	skipz
  4911  0636  0008               	return
  4912                           
  4913                           ;uart.c: 180: {
  4914                           ;uart.c: 181: com.rx_ovrfl = 1;
  4915  0637  01D5               	clrf	(_com^(0+128)+53)
  4916  0638  0AD5               	incf	(_com^(0+128)+53),f
  4917  0639  0008               	return
  4918  063A                     __end_of_byte_received:	
  4919  007E                     btemp	set	126	;btemp
  4920  007E                     int$flags	set	126
  4921  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    0
    Data        19
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0h            3      3       3
    BANK0l           72     14      60
    BANK1            80      0      72
    BANK2            80      0       0

Pointer List with Targets:

    com_send_dat@ptr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[7]), STR_1(CODE[10]), cmd_res_data(BANK0l[16]), lock_id(BANK0l[16]), 

    S437Str_Flh$flashWordArray	PTR unsigned int  size(1) Largest target is 0

    Bt_Data.Flh.flashWordArray	PTR unsigned int  size(1) Largest target is 0

    S431Str_Com$ptr	PTR unsigned char  size(1) Largest target is 0

    Bt_Data.Com.ptr	PTR unsigned char  size(1) Largest target is 0

    enc_dec@data	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    CRC_Chk@dbuf	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    mem_compare@sour	PTR unsigned char  size(1) Largest target is 16
		 -> lock_id(BANK0l[16]), 

    mem_compare@dest	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    S122STR_OS$pro_ptr	PTR FTN()void [4] size(2) Largest target is 1
		 -> app_test_1000ms(), app_test_100ms(), app_test_10ms(), app_test_1ms(), 

    os.pro_ptr	PTR FTN()void [4] size(2) Largest target is 1
		 -> app_test_1000ms(), app_test_100ms(), app_test_10ms(), app_test_1ms(), 


Critical Paths under _main in COMMON

    _main->_Sys_Ini
    _Sys_Ini->_app_ini
    _app_ini->_read_mem
    _Run_Os->_app_test_1000ms
    _Run_Os->_app_test_BG
    _app_test_BG->_com_send_dat
    _app_test_100ms->_get_temp_key
    _get_temp_key->_os_get_sys_tim
    _app_test_1000ms->_com_send_dat

Critical Paths under _isr in COMMON

    _isr->_byte_received

Critical Paths under _main in BANK0h

    _Run_Os->_app_test_BG
    _app_test_100ms->_CRC_Chk

Critical Paths under _isr in BANK0h

    None.

Critical Paths under _main in BANK0l

    _main->_Run_Os
    _Sys_Ini->_app_ini
    _Run_Os->_app_test_100ms
    _get_temp_key->_os_get_sys_tim

Critical Paths under _isr in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6422
                             _Run_Os
                            _Sys_Ini
 ---------------------------------------------------------------------------------
 (1) _Sys_Ini                                              2     2      0     509
                                              8 COMMON     2     2      0
                            _Ini_Dio
                     _Ini_Oscillator
                        _Ini_Timer_0
                            _app_ini
                            _com_ini
 ---------------------------------------------------------------------------------
 (2) _com_ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_ini                                              5     5      0     475
                                              7 COMMON     1     1      0
                                              0 BANK0l     4     4      0
                           _read_mem
 ---------------------------------------------------------------------------------
 (2) _Ini_Timer_0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ini_Oscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ini_Dio                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run_Os                                               1     1      0    5913
                                             13 BANK0l     1     1      0
                    _app_test_1000ms *
                     _app_test_100ms *
                      _app_test_10ms *
                       _app_test_1ms *
                        _app_test_BG
                 _com_get_tx_buf_lnt
 ---------------------------------------------------------------------------------
 (2) _com_get_tx_buf_lnt                                   2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _app_test_BG                                          5     5      0    1229
                                              8 COMMON     2     2      0
                                              0 BANK0h     3     3      0
                       _com_send_dat
                     _eep_write_char
                         _event_push
                         _event_read
 ---------------------------------------------------------------------------------
 (3) _event_read                                           2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _app_test_1ms                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_test_10ms                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_test_100ms                                       9     9      0    3708
                                              4 BANK0l     9     9      0
                            _CRC_Chk
                 _com_get_rx_buf_lnt
                   _com_rx_read_char
                       _com_send_dat
                     _eep_write_char
                            _enc_dec
                         _event_push
                       _get_temp_key
                          _led0_task
                        _mem_compare
                           _read_mem
 ---------------------------------------------------------------------------------
 (3) _read_mem                                             3     0      3     370
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) _mem_compare                                          5     3      2     252
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _led0_task                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_temp_key                                         2     2      0     102
                                              8 COMMON     2     2      0
                     _os_get_sys_tim
 ---------------------------------------------------------------------------------
 (4) _os_get_sys_tim                                       8     4      4      34
                                              4 COMMON     4     0      4
                                              0 BANK0l     4     4      0
 ---------------------------------------------------------------------------------
 (3) _event_push                                           2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _enc_dec                                              5     3      2     428
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _eep_write_char                                       3     2      1     300
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _com_rx_read_char                                     2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _com_get_rx_buf_lnt                                   2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CRC_Chk                                              7     4      3     856
                                              4 COMMON     4     1      3
                                              0 BANK0h     3     3      0
 ---------------------------------------------------------------------------------
 (2) _app_test_1000ms                                      7     7      0     952
                                              8 COMMON     2     2      0
                                              0 BANK0l     5     5      0
                       _com_send_dat
 ---------------------------------------------------------------------------------
 (3) _com_send_dat                                         4     1      3     814
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              2 COMMON     2     2      0
                      _byte_received
                      _byte_transmit
 ---------------------------------------------------------------------------------
 (6) _byte_transmit                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _byte_received                                        2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Run_Os
     _app_test_1000ms *
       _com_send_dat
     _app_test_100ms *
       _CRC_Chk
       _com_get_rx_buf_lnt
       _com_rx_read_char
       _com_send_dat
       _eep_write_char
         _Bt_WriteEep
       _enc_dec
       _event_push
       _get_temp_key
         _os_get_sys_tim
       _led0_task
       _mem_compare
       _read_mem
         _Bt_ReadData
     _app_test_10ms *
     _app_test_1ms *
     _app_test_BG *
       _com_send_dat
       _eep_write_char
         _Bt_WriteEep
       _event_push
       _event_read
     _com_get_tx_buf_lnt *
   _Sys_Ini
     _Ini_Dio
     _Ini_Oscillator
     _Ini_Timer_0
     _app_ini
       _read_mem
         _Bt_ReadData
     _com_ini

 _isr (ROOT)
   _byte_received
   _byte_transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      92       4        0.0%
BITBANK0h            3      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0l           48      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK0h               3      3       3       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK0l              48      E      3C       8       83.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK1            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK1               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK2            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK2               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
DATA                 0      0      92      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 22 19:56:56 2020

      __size_of_app_test_1000ms 0071                     __CFG_CP$OFF 0000                   ?_get_temp_key 0070  
                            _os 00D6                             l113 048B                             l115 049D  
                           l141 0660                             l109 047E                             l133 04F0  
                           l151 0605                             l119 04AA                             l223 06B6  
                           l138 0539                             l227 0783                             l350 05E1  
                           l195 053A                             l349 05B4                    __CFG_CPD$OFF 0000  
                ??_app_test_1ms 0074                             _j_1 007A                   ??_Ini_Timer_0 0074  
                           _com 00A0                             _isr 02A4                             wreg 0009  
               __end_of_CRC_Chk 0613                    _tmr_temp_key 002A                    __CFG_LVP$OFF 0000  
                          l2103 0611                            l2131 02EB                            l2123 0594  
                          l2213 03CF                            l2141 0306                            l1511 06FF  
                          l2215 03D8                            l2303 06C0                            l2233 0404  
                          l2225 03F5                            l2209 03BD                            l2161 0334  
                          l2145 030F                            l2137 02F9                            l2219 03E4  
                          l2251 0436                            l1509 06FB                            l1533 0703  
                          l2237 040D                            l2245 041A                            l2341 0576  
                          l2333 0563                            l2325 0543                            l2095 05E9  
                          l1607 0694                            l2271 045F                            l2247 041C  
                          l2263 0451                            l1631 06B7                            l2097 05FA  
                          l1609 0695                            l2185 036C                            l2337 056C  
                          l1491 0749                            l1571 0671                            l2275 0466  
                          l2187 0394                            l2259 0444                            l2339 0575  
                          l1573 067C                            l1629 06B5                            l1591 05D5  
                          l1823 0498                            l1815 0484                            l1809 0476  
                          l1595 05DD                            l1835 04BC                            l1851 04E9  
                          l1843 04DA                  ??_com_send_dat 0077                            l1589 05D1  
                          l1597 05B5                            l1829 04A3                            l1861 051C  
                          l1847 04E2                            l1857 0503                            l1869 052E  
                          l1877 0722                 ??_app_test_10ms 0074                            _ADIF 008E  
                          ?_isr 0070                            STR_1 07AA                            STR_2 07B4  
                          _LATA 010C                            _RCIE 048D               enc_dec@temp_key_0 0075  
                          _TXIE 048C                            _WPUA 020C                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _main 07C7                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                 __CFG_BORV$LOW 0000                            start 02C5                    ?_mem_compare 0074  
                 __CFG_CSWEN$ON 0000                 __end_of_Ini_Dio 079F                  ??_get_temp_key 0078  
                         ??_isr 0072                ??_app_test_100ms 0051                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                 __end_of_Sys_Ini 06D2                  __CFG_DEBUG$OFF 0000  
                         i1l294 02B6                           i1l396 065C                           _TMR0H 0016  
                         _TMR0L 0015                           _TRISA 008C                     _Bt_ReadData 0206  
               __end_of_enc_dec 0717                 __end_of_app_ini 05B4                 __end_of_com_ini 07CD  
       __size_of_os_get_sys_tim 0018                      _Led_st_cnt 002C             __end_of_Ini_Timer_0 07AA  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __end_of_sys_ver F0F3                  __CFG_MCLRE$OFF 0000                     _Bt_WriteEep 0238  
               __initialization 02C6      __end_of_com_get_rx_buf_lnt 0753                    __end_of_main 07CA  
    __end_of_com_get_tx_buf_lnt 072B                          ??_main 007A         event_read@temp_event_id 0075  
                     ??_CRC_Chk 0077               ??_app_test_1000ms 0078          __size_of_byte_received 0027  
                        _ANSELA 018C                          _RC1REG 0199                          i1l2007 02BC  
                        i1l1965 062F                          i1l1957 0620                          i1l1981 064F  
                        i1l1967 0633                          i1l1983 0653                          i1l1999 02B2  
                        _TMR2IF 0089                          _TX1REG 019A                       ??_Ini_Dio 0074  
          __size_of_app_test_BG 0061            __end_of_app_test_1ms 07D1                ??_Ini_Oscillator 0074  
                __CFG_PWRTE$OFF 0000          __size_of_byte_transmit 0024                          _Run_Os 053A  
     __size_of_com_rx_read_char 0018                  __CFG_STVREN$ON 0000                       ??_Sys_Ini 0078  
                  Sys_Ini@count 0078            __end_of_com_send_dat 05E5                __end_of_read_mem 073F  
                     ??_enc_dec 0076                       ??_app_ini 0077                       ??_com_ini 0074  
                  __pdataBANK0l 005E                     _Ini_Timer_0 079F                     read_mem@typ 0076  
          __end_of_get_temp_key 0785                       CRC_Chk@st 005B         __end_of__initialization 02DF  
               com_send_dat@len 0076                 com_send_dat@ptr 0074                  __pcstackBANK0h 005B  
                __pcstackBANK0l 004D                  __pcstackCOMMON 0070                    __pidataBANK1 0753  
                 _byte_received 0613            __size_of_mem_compare 0020              __size_of_led0_task 0012  
                 _byte_transmit 063A                  _os_get_sys_tim 06D2                      __pbssBANK1 00A0  
                mem_compare@len 0075        app_test_1000ms@temp_time 0051                      __pmaintext 07C7  
                       ?_Run_Os 0070                  ?_byte_received 0070                    _cmd_res_data 003D  
               __CFG_PPS1WAY$ON 0000                      __pintentry 02A4                  ?_byte_transmit 0070  
        __end_of_os_get_sys_tim 06EA                         _CPUDOZE 0918                         _CRC_Chk 05E5  
         __size_of_app_test_1ms 0001                         _Bt_Data 0068              eep_write_char@data 0074  
             __end_of_led0_task 0777           __end_of_app_test_10ms 07D0                       ?_read_mem 0074  
                       _Ini_Dio 0793         __size_of_eep_write_char 000E           __size_of_com_send_dat 0031  
              _com_rx_read_char 06EA                 __size_of_Run_Os 0044                 _app_test_1000ms 0468  
                    _event_read 069C                         _Sys_Ini 06B9                      _event_push 067E  
               _app_test_BG$178 005B                         _enc_dec 0702                         __ptext1 06B9  
                       _app_ini 057E                         __ptext2 07CA                         __ptext3 057E  
                       __ptext4 079F                         __ptext5 07CE                         __ptext6 0793  
                       __ptext7 053A                         __ptext8 0717                         __ptext9 04D9  
                       _com_ini 07CA                 ?_os_get_sys_tim 0074                    __size_of_isr 0021  
            _com_get_rx_buf_lnt 073F                         _lock_id 002D                    _app_test_1ms 07D0  
         __size_of_get_temp_key 000E                         clrloop0 07C2             ?_com_get_rx_buf_lnt 0070  
          end_of_initialization 02DF              _com_get_tx_buf_lnt 0717                         _sys_ver F0F2  
           _Replay_Attack_Frame 0027                    _com_send_dat 05B4                         init_ram 07BB  
                       initloop 07BC                      ??_read_mem 0077             ?_com_get_tx_buf_lnt 0070  
           _app_test_1000ms$173 004D             _app_test_1000ms$174 004F                 ??_byte_received 0070  
                    enc_dec@len 0074            ??_com_get_rx_buf_lnt 0074                    _get_temp_key 0777  
               ??_byte_transmit 0070                       _PORTAbits 000C                 app_ini@dest_add 004D  
                    CRC_Chk@flg 0075                      CRC_Chk@len 0074                      CRC_Chk@sum 005C  
      com_rx_read_char@temp_val 0075            ??_com_get_tx_buf_lnt 0074                    ?_Ini_Timer_0 0070  
              read_mem@mem_addr 0074         __size_of_app_test_100ms 0186                   _Replay_Attack 0028  
              __CFG_FEXTOSC$OFF 0000                   ??_app_test_BG 0078                 app_ini@temp_add 004F  
       __end_of_app_test_1000ms 04D9                     ?_event_read 0070                     ?_event_push 0070  
                __end_of_Run_Os 057E                   __pidataBANK0l 07CD             start_initialization 02C6  
                   __end_of_isr 02C5                 __p_sys_ver_text F0F2               mem_compare@status 0077  
                _eep_write_char 0785                   ??_mem_compare 0076             __end_of_app_test_BG 053A  
              __CFG_LPBOREN$OFF 0000                        ??_Run_Os 005A                     __pdataBANK1 00D6  
       __size_of_Ini_Oscillator 0001          byte_received@temp_data 0071                        ?_CRC_Chk 0074  
                   __pbssBANK0l 0020                     __pbssCOMMON 007A                       ___latbits 0000  
      __end_of_com_rx_read_char 0702                 mem_compare@dest 0078      com_get_tx_buf_lnt@temp_dif 0075  
        __end_of_eep_write_char 0793             __size_of_event_read 001D                 mem_compare@sour 0074  
           __size_of_event_push 001E                        ?_Ini_Dio 0070                ?_app_test_1000ms 0070  
                     _led0_task 0765              event_push@Event_ID 0075               __size_of_read_mem 0014  
                      ?_Sys_Ini 0070                ??_os_get_sys_tim 0078             __end_of_mem_compare 067E  
                      ?_enc_dec 0074                        ?_app_ini 0070                        ?_com_ini 0070  
             eep_write_char@add 0076    app_test_100ms@dat_idx_offset 0053            app_test_100ms@sw0_st 0059  
          __size_of_Ini_Timer_0 000B                  _app_test_100ms 02E2                 ?_eep_write_char 0074  
                   _app_test_BG 04D9                        _LATAbits 010C                       clear_ram0 07C1  
                      _PIE0bits 0090                      ?_led0_task 0070                        _PIR0bits 0010  
                      _PIR1bits 0011                 _sys_ver_absaddr F0F2          __size_of_app_test_10ms 0001  
              __size_of_CRC_Chk 002E          __end_of_app_test_100ms 0468                       _str_event 0020  
      app_test_100ms@MacKeyTemp 0056          os_get_sys_tim@temp_tim 004D                __size_of_Ini_Dio 000C  
        app_test_100ms@resp_len 0057                     _mem_compare 065E           __end_of_byte_received 063A  
                  ??_event_read 0074                    ??_event_push 0074     __size_of_com_get_rx_buf_lnt 0014  
                   _sw0_st_prev 0029                __size_of_Sys_Ini 0019                  _Ini_Oscillator 07CE  
         __end_of_byte_transmit 065E                __size_of_enc_dec 0015                __size_of_app_ini 0036  
              __size_of_com_ini 0003    app_test_100ms@cmd_idx_offset 0055     __size_of_com_get_tx_buf_lnt 0014  
                    _T0CON0bits 0017                      _T0CON1bits 0018                 ?_app_test_100ms 0070  
                      __ptext10 069C                        __ptext11 0468                        __ptext20 067E  
                      __ptext12 02E2                        __ptext21 0702                        __ptext13 07CF  
                      __ptext22 0785                        __ptext14 07D0                        __ptext23 06EA  
                      __ptext15 072B                        __ptext24 073F                        __ptext16 065E  
                      __ptext25 05E5                        __ptext17 0765                        __ptext26 05B4  
                      __ptext18 0777                        __ptext19 06D2                        __ptext28 063A  
                      __ptext29 0613            app_test_BG@temp_time 005D              __end_of_event_read 06B9  
            __end_of_event_push 069C                   __size_of_main 0003                   _app_test_10ms 07CF  
                      _read_mem 072B                     ??_led0_task 0074            get_temp_key@temp_key 0079  
                      _temp_key 005E                        _tmr_1ses 002B                        int$flags 007E  
        __end_of_Ini_Oscillator 07CF                      _INTCONbits 000B                   CRC_Chk@MacKey 0076  
               app_test_100ms@i 0058               __CFG_BOREN$SBOREN 0000               ?_com_rx_read_char 0070  
                      intlevel1 0000              ??_com_rx_read_char 0074                  ?_app_test_10ms 0070  
             __CFG_CLKOUTEN$OFF 0000  app_test_100ms@temp_add_or_rand 0054                     enc_dec@data 0078  
               ?_Ini_Oscillator 0070                   __pstringtext1 07AA                   __pstringtext2 07B4  
                 __pstringtext3 0000                   ?_app_test_1ms 0070                ??_eep_write_char 0075  
    com_get_rx_buf_lnt@temp_dif 0075                     CRC_Chk@dbuf 005D                   ?_com_send_dat 0074  
                  ?_app_test_BG 0070  
