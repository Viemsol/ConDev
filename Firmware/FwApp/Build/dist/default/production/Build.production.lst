

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 08 19:39:48 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0l,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	_sys_typ_text,global,class=CODE,delta=2
     7                           	psect	_sys_ver_text,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0l,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackBANK0l,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F18313 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0097                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  018C                     	;# 
   139  0197                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  020C                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0297                     	;# 
   192  0298                     	;# 
   193  030C                     	;# 
   194  038C                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0498                     	;# 
   204  0498                     	;# 
   205  0499                     	;# 
   206  049A                     	;# 
   207  049B                     	;# 
   208  049B                     	;# 
   209  049C                     	;# 
   210  049D                     	;# 
   211  049E                     	;# 
   212  049F                     	;# 
   213  0617                     	;# 
   214  0618                     	;# 
   215  0619                     	;# 
   216  0619                     	;# 
   217  061A                     	;# 
   218  061B                     	;# 
   219  061C                     	;# 
   220  061C                     	;# 
   221  0691                     	;# 
   222  0692                     	;# 
   223  0693                     	;# 
   224  0694                     	;# 
   225  0695                     	;# 
   226  0696                     	;# 
   227  0697                     	;# 
   228  0698                     	;# 
   229  0699                     	;# 
   230  0891                     	;# 
   231  0891                     	;# 
   232  0891                     	;# 
   233  0891                     	;# 
   234  0891                     	;# 
   235  0891                     	;# 
   236  0892                     	;# 
   237  0892                     	;# 
   238  0892                     	;# 
   239  0893                     	;# 
   240  0893                     	;# 
   241  0893                     	;# 
   242  0893                     	;# 
   243  0893                     	;# 
   244  0893                     	;# 
   245  0894                     	;# 
   246  0894                     	;# 
   247  0894                     	;# 
   248  0895                     	;# 
   249  0895                     	;# 
   250  0895                     	;# 
   251  0896                     	;# 
   252  0896                     	;# 
   253  0896                     	;# 
   254  089B                     	;# 
   255  0911                     	;# 
   256  0912                     	;# 
   257  0913                     	;# 
   258  0914                     	;# 
   259  0915                     	;# 
   260  0916                     	;# 
   261  0918                     	;# 
   262  0919                     	;# 
   263  091A                     	;# 
   264  091B                     	;# 
   265  091C                     	;# 
   266  091D                     	;# 
   267  091E                     	;# 
   268  091F                     	;# 
   269  0E0F                     	;# 
   270  0E10                     	;# 
   271  0E11                     	;# 
   272  0E12                     	;# 
   273  0E13                     	;# 
   274  0E14                     	;# 
   275  0E15                     	;# 
   276  0E18                     	;# 
   277  0E1A                     	;# 
   278  0E1B                     	;# 
   279  0E1C                     	;# 
   280  0E20                     	;# 
   281  0E21                     	;# 
   282  0E22                     	;# 
   283  0E24                     	;# 
   284  0E25                     	;# 
   285  0E28                     	;# 
   286  0E29                     	;# 
   287  0E2A                     	;# 
   288  0E2B                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E94                     	;# 
   293  0E95                     	;# 
   294  0F0F                     	;# 
   295  0F10                     	;# 
   296  0F11                     	;# 
   297  0F12                     	;# 
   298  0F13                     	;# 
   299  0F14                     	;# 
   300  0F15                     	;# 
   301  0F16                     	;# 
   302  0F17                     	;# 
   303  0F18                     	;# 
   304  0F19                     	;# 
   305  0F1A                     	;# 
   306  0F1B                     	;# 
   307  0F1C                     	;# 
   308  0F1D                     	;# 
   309  0F1E                     	;# 
   310  0F1F                     	;# 
   311  0F20                     	;# 
   312  0F21                     	;# 
   313  0F22                     	;# 
   314  0F23                     	;# 
   315  0FE4                     	;# 
   316  0FE5                     	;# 
   317  0FE6                     	;# 
   318  0FE7                     	;# 
   319  0FE8                     	;# 
   320  0FE9                     	;# 
   321  0FEA                     	;# 
   322  0FEB                     	;# 
   323  0FED                     	;# 
   324  0FEE                     	;# 
   325  0FEF                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  008C                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0097                     	;# 
   365  009B                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  010C                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0115                     	;# 
   375  0116                     	;# 
   376  0117                     	;# 
   377  0118                     	;# 
   378  0119                     	;# 
   379  018C                     	;# 
   380  0197                     	;# 
   381  0199                     	;# 
   382  0199                     	;# 
   383  0199                     	;# 
   384  019A                     	;# 
   385  019A                     	;# 
   386  019A                     	;# 
   387  019B                     	;# 
   388  019B                     	;# 
   389  019B                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019C                     	;# 
   393  019C                     	;# 
   394  019C                     	;# 
   395  019D                     	;# 
   396  019D                     	;# 
   397  019D                     	;# 
   398  019E                     	;# 
   399  019E                     	;# 
   400  019E                     	;# 
   401  019F                     	;# 
   402  019F                     	;# 
   403  019F                     	;# 
   404  019F                     	;# 
   405  019F                     	;# 
   406  020C                     	;# 
   407  0211                     	;# 
   408  0211                     	;# 
   409  0212                     	;# 
   410  0212                     	;# 
   411  0213                     	;# 
   412  0213                     	;# 
   413  0214                     	;# 
   414  0214                     	;# 
   415  0215                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  028C                     	;# 
   424  0291                     	;# 
   425  0291                     	;# 
   426  0292                     	;# 
   427  0293                     	;# 
   428  0294                     	;# 
   429  0295                     	;# 
   430  0295                     	;# 
   431  0296                     	;# 
   432  0297                     	;# 
   433  0298                     	;# 
   434  030C                     	;# 
   435  038C                     	;# 
   436  0391                     	;# 
   437  0392                     	;# 
   438  0393                     	;# 
   439  039A                     	;# 
   440  039C                     	;# 
   441  039D                     	;# 
   442  039E                     	;# 
   443  039F                     	;# 
   444  0498                     	;# 
   445  0498                     	;# 
   446  0499                     	;# 
   447  049A                     	;# 
   448  049B                     	;# 
   449  049B                     	;# 
   450  049C                     	;# 
   451  049D                     	;# 
   452  049E                     	;# 
   453  049F                     	;# 
   454  0617                     	;# 
   455  0618                     	;# 
   456  0619                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061C                     	;# 
   462  0691                     	;# 
   463  0692                     	;# 
   464  0693                     	;# 
   465  0694                     	;# 
   466  0695                     	;# 
   467  0696                     	;# 
   468  0697                     	;# 
   469  0698                     	;# 
   470  0699                     	;# 
   471  0891                     	;# 
   472  0891                     	;# 
   473  0891                     	;# 
   474  0891                     	;# 
   475  0891                     	;# 
   476  0891                     	;# 
   477  0892                     	;# 
   478  0892                     	;# 
   479  0892                     	;# 
   480  0893                     	;# 
   481  0893                     	;# 
   482  0893                     	;# 
   483  0893                     	;# 
   484  0893                     	;# 
   485  0893                     	;# 
   486  0894                     	;# 
   487  0894                     	;# 
   488  0894                     	;# 
   489  0895                     	;# 
   490  0895                     	;# 
   491  0895                     	;# 
   492  0896                     	;# 
   493  0896                     	;# 
   494  0896                     	;# 
   495  089B                     	;# 
   496  0911                     	;# 
   497  0912                     	;# 
   498  0913                     	;# 
   499  0914                     	;# 
   500  0915                     	;# 
   501  0916                     	;# 
   502  0918                     	;# 
   503  0919                     	;# 
   504  091A                     	;# 
   505  091B                     	;# 
   506  091C                     	;# 
   507  091D                     	;# 
   508  091E                     	;# 
   509  091F                     	;# 
   510  0E0F                     	;# 
   511  0E10                     	;# 
   512  0E11                     	;# 
   513  0E12                     	;# 
   514  0E13                     	;# 
   515  0E14                     	;# 
   516  0E15                     	;# 
   517  0E18                     	;# 
   518  0E1A                     	;# 
   519  0E1B                     	;# 
   520  0E1C                     	;# 
   521  0E20                     	;# 
   522  0E21                     	;# 
   523  0E22                     	;# 
   524  0E24                     	;# 
   525  0E25                     	;# 
   526  0E28                     	;# 
   527  0E29                     	;# 
   528  0E2A                     	;# 
   529  0E2B                     	;# 
   530  0E90                     	;# 
   531  0E91                     	;# 
   532  0E92                     	;# 
   533  0E94                     	;# 
   534  0E95                     	;# 
   535  0F0F                     	;# 
   536  0F10                     	;# 
   537  0F11                     	;# 
   538  0F12                     	;# 
   539  0F13                     	;# 
   540  0F14                     	;# 
   541  0F15                     	;# 
   542  0F16                     	;# 
   543  0F17                     	;# 
   544  0F18                     	;# 
   545  0F19                     	;# 
   546  0F1A                     	;# 
   547  0F1B                     	;# 
   548  0F1C                     	;# 
   549  0F1D                     	;# 
   550  0F1E                     	;# 
   551  0F1F                     	;# 
   552  0F20                     	;# 
   553  0F21                     	;# 
   554  0F22                     	;# 
   555  0F23                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001D                     	;# 
   597  001E                     	;# 
   598  001F                     	;# 
   599  008C                     	;# 
   600  0090                     	;# 
   601  0091                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0097                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  018C                     	;# 
   621  0197                     	;# 
   622  0199                     	;# 
   623  0199                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019A                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019C                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019D                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019E                     	;# 
   641  019E                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  019F                     	;# 
   645  019F                     	;# 
   646  019F                     	;# 
   647  020C                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  028C                     	;# 
   665  0291                     	;# 
   666  0291                     	;# 
   667  0292                     	;# 
   668  0293                     	;# 
   669  0294                     	;# 
   670  0295                     	;# 
   671  0295                     	;# 
   672  0296                     	;# 
   673  0297                     	;# 
   674  0298                     	;# 
   675  030C                     	;# 
   676  038C                     	;# 
   677  0391                     	;# 
   678  0392                     	;# 
   679  0393                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0498                     	;# 
   686  0498                     	;# 
   687  0499                     	;# 
   688  049A                     	;# 
   689  049B                     	;# 
   690  049B                     	;# 
   691  049C                     	;# 
   692  049D                     	;# 
   693  049E                     	;# 
   694  049F                     	;# 
   695  0617                     	;# 
   696  0618                     	;# 
   697  0619                     	;# 
   698  0619                     	;# 
   699  061A                     	;# 
   700  061B                     	;# 
   701  061C                     	;# 
   702  061C                     	;# 
   703  0691                     	;# 
   704  0692                     	;# 
   705  0693                     	;# 
   706  0694                     	;# 
   707  0695                     	;# 
   708  0696                     	;# 
   709  0697                     	;# 
   710  0698                     	;# 
   711  0699                     	;# 
   712  0891                     	;# 
   713  0891                     	;# 
   714  0891                     	;# 
   715  0891                     	;# 
   716  0891                     	;# 
   717  0891                     	;# 
   718  0892                     	;# 
   719  0892                     	;# 
   720  0892                     	;# 
   721  0893                     	;# 
   722  0893                     	;# 
   723  0893                     	;# 
   724  0893                     	;# 
   725  0893                     	;# 
   726  0893                     	;# 
   727  0894                     	;# 
   728  0894                     	;# 
   729  0894                     	;# 
   730  0895                     	;# 
   731  0895                     	;# 
   732  0895                     	;# 
   733  0896                     	;# 
   734  0896                     	;# 
   735  0896                     	;# 
   736  089B                     	;# 
   737  0911                     	;# 
   738  0912                     	;# 
   739  0913                     	;# 
   740  0914                     	;# 
   741  0915                     	;# 
   742  0916                     	;# 
   743  0918                     	;# 
   744  0919                     	;# 
   745  091A                     	;# 
   746  091B                     	;# 
   747  091C                     	;# 
   748  091D                     	;# 
   749  091E                     	;# 
   750  091F                     	;# 
   751  0E0F                     	;# 
   752  0E10                     	;# 
   753  0E11                     	;# 
   754  0E12                     	;# 
   755  0E13                     	;# 
   756  0E14                     	;# 
   757  0E15                     	;# 
   758  0E18                     	;# 
   759  0E1A                     	;# 
   760  0E1B                     	;# 
   761  0E1C                     	;# 
   762  0E20                     	;# 
   763  0E21                     	;# 
   764  0E22                     	;# 
   765  0E24                     	;# 
   766  0E25                     	;# 
   767  0E28                     	;# 
   768  0E29                     	;# 
   769  0E2A                     	;# 
   770  0E2B                     	;# 
   771  0E90                     	;# 
   772  0E91                     	;# 
   773  0E92                     	;# 
   774  0E94                     	;# 
   775  0E95                     	;# 
   776  0F0F                     	;# 
   777  0F10                     	;# 
   778  0F11                     	;# 
   779  0F12                     	;# 
   780  0F13                     	;# 
   781  0F14                     	;# 
   782  0F15                     	;# 
   783  0F16                     	;# 
   784  0F17                     	;# 
   785  0F18                     	;# 
   786  0F19                     	;# 
   787  0F1A                     	;# 
   788  0F1B                     	;# 
   789  0F1C                     	;# 
   790  0F1D                     	;# 
   791  0F1E                     	;# 
   792  0F1F                     	;# 
   793  0F20                     	;# 
   794  0F21                     	;# 
   795  0F22                     	;# 
   796  0F23                     	;# 
   797  0FE4                     	;# 
   798  0FE5                     	;# 
   799  0FE6                     	;# 
   800  0FE7                     	;# 
   801  0FE8                     	;# 
   802  0FE9                     	;# 
   803  0FEA                     	;# 
   804  0FEB                     	;# 
   805  0FED                     	;# 
   806  0FEE                     	;# 
   807  0FEF                     	;# 
   808  0000                     	;# 
   809  0001                     	;# 
   810  0002                     	;# 
   811  0003                     	;# 
   812  0004                     	;# 
   813  0005                     	;# 
   814  0006                     	;# 
   815  0007                     	;# 
   816  0008                     	;# 
   817  0009                     	;# 
   818  000A                     	;# 
   819  000B                     	;# 
   820  000C                     	;# 
   821  0010                     	;# 
   822  0011                     	;# 
   823  0012                     	;# 
   824  0013                     	;# 
   825  0014                     	;# 
   826  0015                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  0019                     	;# 
   834  001A                     	;# 
   835  001B                     	;# 
   836  001C                     	;# 
   837  001D                     	;# 
   838  001E                     	;# 
   839  001F                     	;# 
   840  008C                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0097                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  0111                     	;# 
   855  0112                     	;# 
   856  0115                     	;# 
   857  0116                     	;# 
   858  0117                     	;# 
   859  0118                     	;# 
   860  0119                     	;# 
   861  018C                     	;# 
   862  0197                     	;# 
   863  0199                     	;# 
   864  0199                     	;# 
   865  0199                     	;# 
   866  019A                     	;# 
   867  019A                     	;# 
   868  019A                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019B                     	;# 
   874  019C                     	;# 
   875  019C                     	;# 
   876  019C                     	;# 
   877  019D                     	;# 
   878  019D                     	;# 
   879  019D                     	;# 
   880  019E                     	;# 
   881  019E                     	;# 
   882  019E                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  019F                     	;# 
   886  019F                     	;# 
   887  019F                     	;# 
   888  020C                     	;# 
   889  0211                     	;# 
   890  0211                     	;# 
   891  0212                     	;# 
   892  0212                     	;# 
   893  0213                     	;# 
   894  0213                     	;# 
   895  0214                     	;# 
   896  0214                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0216                     	;# 
   902  0216                     	;# 
   903  0217                     	;# 
   904  0217                     	;# 
   905  028C                     	;# 
   906  0291                     	;# 
   907  0291                     	;# 
   908  0292                     	;# 
   909  0293                     	;# 
   910  0294                     	;# 
   911  0295                     	;# 
   912  0295                     	;# 
   913  0296                     	;# 
   914  0297                     	;# 
   915  0298                     	;# 
   916  030C                     	;# 
   917  038C                     	;# 
   918  0391                     	;# 
   919  0392                     	;# 
   920  0393                     	;# 
   921  039A                     	;# 
   922  039C                     	;# 
   923  039D                     	;# 
   924  039E                     	;# 
   925  039F                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  0619                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061C                     	;# 
   944  0691                     	;# 
   945  0692                     	;# 
   946  0693                     	;# 
   947  0694                     	;# 
   948  0695                     	;# 
   949  0696                     	;# 
   950  0697                     	;# 
   951  0698                     	;# 
   952  0699                     	;# 
   953  0891                     	;# 
   954  0891                     	;# 
   955  0891                     	;# 
   956  0891                     	;# 
   957  0891                     	;# 
   958  0891                     	;# 
   959  0892                     	;# 
   960  0892                     	;# 
   961  0892                     	;# 
   962  0893                     	;# 
   963  0893                     	;# 
   964  0893                     	;# 
   965  0893                     	;# 
   966  0893                     	;# 
   967  0893                     	;# 
   968  0894                     	;# 
   969  0894                     	;# 
   970  0894                     	;# 
   971  0895                     	;# 
   972  0895                     	;# 
   973  0895                     	;# 
   974  0896                     	;# 
   975  0896                     	;# 
   976  0896                     	;# 
   977  089B                     	;# 
   978  0911                     	;# 
   979  0912                     	;# 
   980  0913                     	;# 
   981  0914                     	;# 
   982  0915                     	;# 
   983  0916                     	;# 
   984  0918                     	;# 
   985  0919                     	;# 
   986  091A                     	;# 
   987  091B                     	;# 
   988  091C                     	;# 
   989  091D                     	;# 
   990  091E                     	;# 
   991  091F                     	;# 
   992  0E0F                     	;# 
   993  0E10                     	;# 
   994  0E11                     	;# 
   995  0E12                     	;# 
   996  0E13                     	;# 
   997  0E14                     	;# 
   998  0E15                     	;# 
   999  0E18                     	;# 
  1000  0E1A                     	;# 
  1001  0E1B                     	;# 
  1002  0E1C                     	;# 
  1003  0E20                     	;# 
  1004  0E21                     	;# 
  1005  0E22                     	;# 
  1006  0E24                     	;# 
  1007  0E25                     	;# 
  1008  0E28                     	;# 
  1009  0E29                     	;# 
  1010  0E2A                     	;# 
  1011  0E2B                     	;# 
  1012  0E90                     	;# 
  1013  0E91                     	;# 
  1014  0E92                     	;# 
  1015  0E94                     	;# 
  1016  0E95                     	;# 
  1017  0F0F                     	;# 
  1018  0F10                     	;# 
  1019  0F11                     	;# 
  1020  0F12                     	;# 
  1021  0F13                     	;# 
  1022  0F14                     	;# 
  1023  0F15                     	;# 
  1024  0F16                     	;# 
  1025  0F17                     	;# 
  1026  0F18                     	;# 
  1027  0F19                     	;# 
  1028  0F1A                     	;# 
  1029  0F1B                     	;# 
  1030  0F1C                     	;# 
  1031  0F1D                     	;# 
  1032  0F1E                     	;# 
  1033  0F1F                     	;# 
  1034  0F20                     	;# 
  1035  0F21                     	;# 
  1036  0F22                     	;# 
  1037  0F23                     	;# 
  1038  0FE4                     	;# 
  1039  0FE5                     	;# 
  1040  0FE6                     	;# 
  1041  0FE7                     	;# 
  1042  0FE8                     	;# 
  1043  0FE9                     	;# 
  1044  0FEA                     	;# 
  1045  0FEB                     	;# 
  1046  0FED                     	;# 
  1047  0FEE                     	;# 
  1048  0FEF                     	;# 
  1049                           
  1050                           	psect	idataBANK0l
  1051  0774                     __pidataBANK0l:	
  1052                           
  1053                           ;initializer for _temp_key
  1054  0774  34FF               	retlw	255
  1055                           
  1056                           	psect	idataBANK1
  1057  070B                     __pidataBANK1:	
  1058                           
  1059                           ;initializer for _os
  1060  070B  3477               	retlw	low _app_test_1ms
  1061  070C  3407               	retlw	high _app_test_1ms
  1062  070D  3476               	retlw	low _app_test_10ms
  1063  070E  3407               	retlw	high _app_test_10ms
  1064  070F  34E4               	retlw	low _app_test_100ms
  1065  0710  3402               	retlw	high _app_test_100ms
  1066  0711  3454               	retlw	low _app_test_1000ms
  1067  0712  3404               	retlw	high _app_test_1000ms
  1068  0713  3400               	retlw	0
  1069  0714  3400               	retlw	0
  1070  0715  3400               	retlw	0
  1071  0716  3400               	retlw	0
  1072  0717  3400               	retlw	0
  1073  0718  3400               	retlw	0
  1074  0719  3400               	retlw	0
  1075  071A  3400               	retlw	0
  1076  071B  3400               	retlw	0
  1077  071C  3400               	retlw	0
  1078  F0FC                     _sys_typ_absaddr	set	61692
  1079  F0F2                     _sys_ver_absaddr	set	61682
  1080  F0FC                     _sys_typ_absaddr	set	61692
  1081                           
  1082                           	psect	_sys_typ_text
  1083  F0FC                     __p_sys_typ_text:	
  1084  F0FC                     _sys_typ:	
  1085  F0FC  3401               	retlw	1
  1086  F0FD                     __end_of_sys_typ:	
  1087  F0F2                     _sys_ver_absaddr	set	61682
  1088                           
  1089                           	psect	_sys_ver_text
  1090  F0F2                     __p_sys_ver_text:	
  1091  F0F2                     _sys_ver:	
  1092  F0F2  3403               	retlw	3
  1093  F0F3                     __end_of_sys_ver:	
  1094  0068                     _Bt_Data	set	104
  1095  0016                     _TMR0H	set	22
  1096  0015                     _TMR0L	set	21
  1097  0018                     _T0CON1bits	set	24
  1098  0017                     _T0CON0bits	set	23
  1099  0011                     _PIR1bits	set	17
  1100  0010                     _PIR0bits	set	16
  1101  000B                     _INTCONbits	set	11
  1102  000C                     _PORTAbits	set	12
  1103  008E                     _ADIF	set	142
  1104  0089                     _TMR2IF	set	137
  1105  0090                     _PIE0bits	set	144
  1106  008C                     _TRISA	set	140
  1107  048D                     _RCIE	set	1165
  1108  048C                     _TXIE	set	1164
  1109  010C                     _LATA	set	268
  1110  010C                     _LATAbits	set	268
  1111  019A                     _TX1REG	set	410
  1112  0199                     _RC1REG	set	409
  1113  018C                     _ANSELA	set	396
  1114  020C                     _WPUA	set	524
  1115  0918                     _CPUDOZE	set	2328
  1116                           
  1117                           ; #config settings
  1118  0000                     
  1119                           	psect	cinit
  1120  02C6                     start_initialization:	
  1121  02C6                     __initialization:	
  1122                           
  1123                           ; Initialize objects allocated to BANK0l
  1124  02C6  2774               	fcall	__pidataBANK0l	;fetch initializer
  1125  02C7  00DA               	movwf	__pdataBANK0l& (0+127)
  1126                           
  1127                           ; Initialize objects allocated to BANK1
  1128  02C8  300B               	movlw	low __pidataBANK1
  1129  02C9  0084               	movwf	4
  1130  02CA  3087               	movlw	(high __pidataBANK1)| (0+128)
  1131  02CB  0085               	movwf	5
  1132  02CC  30D6               	movlw	low __pdataBANK1
  1133  02CD  0086               	movwf	6
  1134  02CE  3000               	movlw	high __pdataBANK1
  1135  02CF  0087               	movwf	7
  1136  02D0  3012               	movlw	18
  1137  02D1  2762               	fcall	init_ram
  1138                           
  1139                           ; Clear objects allocated to COMMON
  1140  02D2  01FA               	clrf	__pbssCOMMON& (0+127)
  1141  02D3  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1142  02D4  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1143                           
  1144                           ; Clear objects allocated to BANK0l
  1145  02D5  3020               	movlw	low __pbssBANK0l
  1146  02D6  0084               	movwf	4
  1147  02D7  3000               	movlw	high __pbssBANK0l
  1148  02D8  0085               	movwf	5
  1149  02D9  3029               	movlw	41
  1150  02DA  2768               	fcall	clear_ram0
  1151                           
  1152                           ; Clear objects allocated to BANK1
  1153  02DB  30A0               	movlw	low __pbssBANK1
  1154  02DC  0084               	movwf	4
  1155  02DD  3000               	movlw	high __pbssBANK1
  1156  02DE  0085               	movwf	5
  1157  02DF  3036               	movlw	54
  1158  02E0  2768               	fcall	clear_ram0
  1159  02E1                     end_of_initialization:	
  1160                           ;End of C runtime variable initialization code
  1161                           
  1162  02E1                     __end_of__initialization:	
  1163  02E1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1164  02E2  0020               	movlb	0
  1165  02E3  2F6E               	ljmp	_main	;jump to C main() function
  1166                           
  1167                           	psect	bssCOMMON
  1168  007A                     __pbssCOMMON:	
  1169  007A                     _j_1:	
  1170  007A                     	ds	1
  1171  007B                     _tmr_temp_key:	
  1172  007B                     	ds	1
  1173  007C                     _tmr_1ses:	
  1174  007C                     	ds	1
  1175                           
  1176                           	psect	bssBANK0l
  1177  0020                     __pbssBANK0l:	
  1178  0020                     _str_event:	
  1179  0020                     	ds	7
  1180  0027                     _sw0_st_prev:	
  1181  0027                     	ds	1
  1182  0028                     _Led_st_cnt:	
  1183  0028                     	ds	1
  1184  0029                     _lock_id:	
  1185  0029                     	ds	16
  1186  0039                     _cmd_res_data:	
  1187  0039                     	ds	16
  1188                           
  1189                           	psect	dataBANK0l
  1190  005A                     __pdataBANK0l:	
  1191  005A                     _temp_key:	
  1192  005A                     	ds	1
  1193                           
  1194                           	psect	bssBANK1
  1195  00A0                     __pbssBANK1:	
  1196  00A0                     _com:	
  1197  00A0                     	ds	54
  1198                           
  1199                           	psect	dataBANK1
  1200  00D6                     __pdataBANK1:	
  1201  00D6                     _os:	
  1202  00D6                     	ds	18
  1203                           
  1204                           	psect	inittext
  1205  0762                     init_ram:	
  1206  0762  00FE               	movwf	126
  1207  0763                     initloop:	
  1208  0763  0012               	moviw fsr0++
  1209  0764  001E               	movwi fsr1++
  1210  0765  0BFE               	decfsz	126,f
  1211  0766  2F63               	goto	initloop
  1212  0767  3400               	retlw	0
  1213                           
  1214                           	psect	clrtext
  1215  0768                     clear_ram0:	
  1216                           ;	Called with FSR0 containing the base address, and
  1217                           ;	WREG with the size to clear
  1218                           
  1219  0768  0064               	clrwdt	;clear the watchdog before getting into this loop
  1220  0769                     clrloop0:	
  1221  0769  0180               	clrf	0	;clear RAM location pointed to by FSR
  1222  076A  3101               	addfsr 0,1
  1223  076B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1224  076C  2F69               	goto	clrloop0	;have we reached the end yet?
  1225  076D  3400               	retlw	0	;all done for this memory range, return
  1226                           
  1227                           	psect	cstackCOMMON
  1228  0070                     __pcstackCOMMON:	
  1229  0070                     ?_com_get_rx_buf_lnt:	
  1230  0070                     ?_com_rx_read_char:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_get_temp_key:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_event_push:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_led0_task:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_event_read:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_Sys_Ini:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_Run_Os:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_com_get_tx_buf_lnt:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_byte_received:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ??_byte_received:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_byte_transmit:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ??_byte_transmit:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_Ini_Oscillator:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_Ini_Dio:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_com_ini:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_Ini_Timer_0:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_app_ini:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_app_test_1ms:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_app_test_10ms:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_app_test_100ms:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_app_test_1000ms:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_app_test_BG:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_main:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_isr:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x0
  1304  0070                     	ds	1
  1305  0071                     byte_received@temp_data:	
  1306                           
  1307                           ; 1 bytes @ 0x1
  1308  0071                     	ds	1
  1309  0072                     ??_isr:	
  1310                           
  1311                           ; 1 bytes @ 0x2
  1312  0072                     	ds	2
  1313  0074                     ??_com_get_rx_buf_lnt:	
  1314  0074                     ??_com_rx_read_char:	
  1315                           ; 1 bytes @ 0x4
  1316                           
  1317  0074                     ?_enc_dec:	
  1318                           ; 1 bytes @ 0x4
  1319                           
  1320  0074                     ?_CRC_Chk:	
  1321                           ; 1 bytes @ 0x4
  1322                           
  1323  0074                     ?_eep_write_char:	
  1324                           ; 1 bytes @ 0x4
  1325                           
  1326  0074                     ?_mem_compare:	
  1327                           ; 1 bytes @ 0x4
  1328                           
  1329  0074                     ?_com_send_dat:	
  1330                           ; 1 bytes @ 0x4
  1331                           
  1332  0074                     ??_event_push:	
  1333                           ; 1 bytes @ 0x4
  1334                           
  1335  0074                     ??_led0_task:	
  1336                           ; 1 bytes @ 0x4
  1337                           
  1338  0074                     ??_event_read:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     ??_com_get_tx_buf_lnt:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344  0074                     ??_Ini_Oscillator:	
  1345                           ; 1 bytes @ 0x4
  1346                           
  1347  0074                     ??_Ini_Dio:	
  1348                           ; 1 bytes @ 0x4
  1349                           
  1350  0074                     ??_com_ini:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     ??_Ini_Timer_0:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     ??_app_test_1ms:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     ??_app_test_10ms:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     ??_app_test_1000ms:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ?_read_mem:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ?_os_get_sys_tim:	
  1369                           ; 2 bytes @ 0x4
  1370                           
  1371  0074                     mem_compare@sour:	
  1372                           ; 4 bytes @ 0x4
  1373                           
  1374  0074                     CRC_Chk@len:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     enc_dec@len:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     eep_write_char@data:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     com_send_dat@len:	
  1384                           ; 1 bytes @ 0x4
  1385                           
  1386  0074                     read_mem@mem_addr:	
  1387                           ; 1 bytes @ 0x4
  1388                           
  1389                           
  1390                           ; 2 bytes @ 0x4
  1391  0074                     	ds	1
  1392  0075                     ??_eep_write_char:	
  1393  0075                     ??_com_send_dat:	
  1394                           ; 1 bytes @ 0x5
  1395                           
  1396  0075                     mem_compare@len:	
  1397                           ; 1 bytes @ 0x5
  1398                           
  1399  0075                     CRC_Chk@flg:	
  1400                           ; 1 bytes @ 0x5
  1401                           
  1402  0075                     enc_dec@temp_key_0:	
  1403                           ; 1 bytes @ 0x5
  1404                           
  1405  0075                     event_push@Event_ID:	
  1406                           ; 1 bytes @ 0x5
  1407                           
  1408  0075                     event_read@temp_event_id:	
  1409                           ; 1 bytes @ 0x5
  1410                           
  1411  0075                     com_get_tx_buf_lnt@temp_dif:	
  1412                           ; 1 bytes @ 0x5
  1413                           
  1414  0075                     com_get_rx_buf_lnt@temp_dif:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417  0075                     com_rx_read_char@temp_val:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x5
  1422  0075                     	ds	1
  1423  0076                     ??_enc_dec:	
  1424  0076                     ??_mem_compare:	
  1425                           ; 1 bytes @ 0x6
  1426                           
  1427  0076                     CRC_Chk@MacKey:	
  1428                           ; 1 bytes @ 0x6
  1429                           
  1430  0076                     read_mem@typ:	
  1431                           ; 1 bytes @ 0x6
  1432                           
  1433  0076                     eep_write_char@add:	
  1434                           ; 1 bytes @ 0x6
  1435                           
  1436  0076                     com_send_dat@ptr:	
  1437                           ; 1 bytes @ 0x6
  1438                           
  1439                           
  1440                           ; 1 bytes @ 0x6
  1441  0076                     	ds	1
  1442  0077                     ??_read_mem:	
  1443  0077                     ??_CRC_Chk:	
  1444                           ; 1 bytes @ 0x7
  1445                           
  1446  0077                     ??_app_ini:	
  1447                           ; 1 bytes @ 0x7
  1448                           
  1449  0077                     ??_app_test_BG:	
  1450                           ; 1 bytes @ 0x7
  1451                           
  1452  0077                     mem_compare@status:	
  1453                           ; 1 bytes @ 0x7
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x7
  1457  0077                     	ds	1
  1458  0078                     ??_get_temp_key:	
  1459  0078                     ??_Sys_Ini:	
  1460                           ; 1 bytes @ 0x8
  1461                           
  1462  0078                     ??_os_get_sys_tim:	
  1463                           ; 1 bytes @ 0x8
  1464                           
  1465  0078                     mem_compare@dest:	
  1466                           ; 1 bytes @ 0x8
  1467                           
  1468  0078                     enc_dec@data:	
  1469                           ; 1 bytes @ 0x8
  1470                           
  1471  0078                     Sys_Ini@count:	
  1472                           ; 1 bytes @ 0x8
  1473                           
  1474                           
  1475                           ; 2 bytes @ 0x8
  1476  0078                     	ds	1
  1477  0079                     get_temp_key@temp_key:	
  1478                           
  1479                           ; 1 bytes @ 0x9
  1480  0079                     	ds	1
  1481  007A                     ??_main:	
  1482                           
  1483                           	psect	cstackBANK0h
  1484  0057                     __pcstackBANK0h:	
  1485                           ; 1 bytes @ 0xA
  1486                           
  1487  0057                     CRC_Chk@st:	
  1488  0057                     _app_test_BG$176:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x0
  1493  0057                     	ds	1
  1494  0058                     CRC_Chk@sum:	
  1495                           
  1496                           ; 1 bytes @ 0x1
  1497  0058                     	ds	1
  1498  0059                     app_test_BG@temp_time:	
  1499  0059                     CRC_Chk@dbuf:	
  1500                           ; 1 bytes @ 0x2
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x2
  1504  0059                     	ds	1
  1505                           
  1506                           	psect	cstackBANK0l
  1507  0049                     __pcstackBANK0l:	
  1508  0049                     app_ini@dest_add:	
  1509  0049                     _app_test_1000ms$172:	
  1510                           ; 2 bytes @ 0x0
  1511                           
  1512  0049                     os_get_sys_tim@temp_tim:	
  1513                           ; 2 bytes @ 0x0
  1514                           
  1515                           
  1516                           ; 4 bytes @ 0x0
  1517  0049                     	ds	2
  1518  004B                     app_ini@temp_add:	
  1519  004B                     _app_test_1000ms$173:	
  1520                           ; 2 bytes @ 0x2
  1521                           
  1522                           
  1523                           ; 2 bytes @ 0x2
  1524  004B                     	ds	2
  1525  004D                     ??_app_test_100ms:	
  1526  004D                     app_test_1000ms@temp_time:	
  1527                           ; 1 bytes @ 0x4
  1528                           
  1529                           
  1530                           ; 1 bytes @ 0x4
  1531  004D                     	ds	2
  1532  004F                     app_test_100ms@dat_idx_offset:	
  1533                           
  1534                           ; 1 bytes @ 0x6
  1535  004F                     	ds	1
  1536  0050                     app_test_100ms@temp_add_or_rand:	
  1537                           
  1538                           ; 1 bytes @ 0x7
  1539  0050                     	ds	1
  1540  0051                     app_test_100ms@cmd_idx_offset:	
  1541                           
  1542                           ; 1 bytes @ 0x8
  1543  0051                     	ds	1
  1544  0052                     app_test_100ms@MacKeyTemp:	
  1545                           
  1546                           ; 1 bytes @ 0x9
  1547  0052                     	ds	1
  1548  0053                     app_test_100ms@resp_len:	
  1549                           
  1550                           ; 1 bytes @ 0xA
  1551  0053                     	ds	1
  1552  0054                     app_test_100ms@i:	
  1553                           
  1554                           ; 1 bytes @ 0xB
  1555  0054                     	ds	1
  1556  0055                     app_test_100ms@sw0_st:	
  1557                           
  1558                           ; 1 bytes @ 0xC
  1559  0055                     	ds	1
  1560  0056                     ??_Run_Os:	
  1561                           
  1562                           ; 1 bytes @ 0xD
  1563  0056                     	ds	1
  1564                           
  1565                           	psect	maintext
  1566  076E                     __pmaintext:	
  1567 ;;
  1568 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1569 ;;
  1570 ;; *************** function _main *****************
  1571 ;; Defined at:
  1572 ;;		line 12 in file "../Src/os.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : B1F/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels required when called:    6
  1592 ;; This function calls:
  1593 ;;		_Run_Os
  1594 ;;		_Sys_Ini
  1595 ;; This function is called by:
  1596 ;;		Startup code after reset
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _main
  1602  076E                     _main:	
  1603                           
  1604                           ;os.c: 15: Sys_Ini();
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _main: [allreg]
  1608  076E  2671               	fcall	_Sys_Ini
  1609                           
  1610                           ;os.c: 20: Run_Os();
  1611  076F  24EC               	fcall	_Run_Os
  1612  0770  2AC5               	ljmp	start
  1613  0771                     __end_of_main:	
  1614                           
  1615                           	psect	text1
  1616  0671                     __ptext1:	
  1617 ;; *************** function _Sys_Ini *****************
  1618 ;; Defined at:
  1619 ;;		line 63 in file "../Src/system.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  count           2    8[COMMON] unsigned int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1633 ;;      Params:         0       0       0       0       0
  1634 ;;      Locals:         2       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0
  1636 ;;      Totals:         2       0       0       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    5
  1640 ;; This function calls:
  1641 ;;		_Ini_Dio
  1642 ;;		_Ini_Oscillator
  1643 ;;		_Ini_Timer_0
  1644 ;;		_app_ini
  1645 ;;		_com_ini
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _Sys_Ini
  1653  0671                     _Sys_Ini:	
  1654                           
  1655                           ;system.c: 65: uint16 count=1;
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _Sys_Ini: [allreg]
  1659  0671  3001               	movlw	1
  1660  0672  00F8               	movwf	Sys_Ini@count
  1661  0673  3000               	movlw	0
  1662  0674  00F9               	movwf	Sys_Ini@count+1
  1663                           
  1664                           ;system.c: 66: Ini_Oscillator();
  1665  0675  2775               	fcall	_Ini_Oscillator
  1666                           
  1667                           ;system.c: 67: Ini_Dio();
  1668  0676  274B               	fcall	_Ini_Dio
  1669                           
  1670                           ;system.c: 68: com_ini();
  1671  0677  2771               	fcall	_com_ini
  1672  0678                     l2352:	
  1673                           ;system.c: 71: while((count++));
  1674                           
  1675  0678  3001               	movlw	1
  1676  0679  07F8               	addwf	Sys_Ini@count,f
  1677  067A  3000               	movlw	0
  1678  067B  3DF9               	addwfc	Sys_Ini@count+1,f
  1679  067C  0378               	decf	Sys_Ini@count,w
  1680  067D  0479               	iorwf	Sys_Ini@count+1,w
  1681  067E  1D03               	btfss	3,2
  1682  067F  2E78               	goto	l2352
  1683                           
  1684                           ;system.c: 77: CPUDOZE=0x80;
  1685  0680  3080               	movlw	128
  1686  0681  0032               	movlb	18	; select bank18
  1687  0682  0098               	movwf	24	;volatile
  1688                           
  1689                           ;system.c: 79: Ini_Timer_0();
  1690  0683  2757               	fcall	_Ini_Timer_0
  1691                           
  1692                           ;system.c: 80: app_ini();
  1693  0684  2530               	fcall	_app_ini
  1694                           
  1695                           ;system.c: 82: T0CON0bits.T0EN=1;
  1696  0685  0020               	movlb	0	; select bank0
  1697  0686  1797               	bsf	23,7	;volatile
  1698                           
  1699                           ;system.c: 83: INTCONbits.PEIE=1;
  1700  0687  170B               	bsf	11,6	;volatile
  1701                           
  1702                           ;system.c: 84: INTCONbits.GIE=1;
  1703  0688  178B               	bsf	11,7	;volatile
  1704  0689  0008               	return
  1705  068A                     __end_of_Sys_Ini:	
  1706                           
  1707                           	psect	text2
  1708  0771                     __ptext2:	
  1709 ;; *************** function _com_ini *****************
  1710 ;; Defined at:
  1711 ;;		line 146 in file "../Src/uart.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		None
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_Sys_Ini
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _com_ini
  1741  0771                     _com_ini:	
  1742                           
  1743                           ;uart.c: 163: (RCIE = 1);
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _com_ini: []
  1747  0771  0021               	movlb	1	; select bank1
  1748  0772  1691               	bsf	17,5	;volatile
  1749  0773  0008               	return
  1750  0774                     __end_of_com_ini:	
  1751                           
  1752                           	psect	text3
  1753  0530                     __ptext3:	
  1754 ;; *************** function _app_ini *****************
  1755 ;; Defined at:
  1756 ;;		line 11 in file "../Src/app.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  temp_add        2    2[BANK0l] unsigned int 
  1761 ;;  dest_add        2    0[BANK0l] unsigned int 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       4       0       0
  1773 ;;      Temps:          1       0       0       0       0
  1774 ;;      Totals:         1       0       4       0       0
  1775 ;;Total ram usage:        5 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		_read_mem
  1780 ;; This function is called by:
  1781 ;;		_Sys_Ini
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _app_ini
  1787  0530                     _app_ini:	
  1788                           
  1789                           ;app.c: 13: uint16 temp_add,dest_add;
  1790                           ;app.c: 16: sw0_st_prev = ! (PORTAbits.RA5);
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _app_ini: [allreg]
  1794  0530  1003               	clrc
  1795  0531  0020               	movlb	0	; select bank0
  1796  0532  1E8C               	btfss	12,5	;volatile
  1797  0533  1403               	setc
  1798  0534  3000               	movlw	0
  1799  0535  1803               	btfsc	3,0
  1800  0536  3001               	movlw	1
  1801  0537  00A7               	movwf	_sw0_st_prev
  1802                           
  1803                           ;app.c: 17: (tmr_1ses = 0xFF);
  1804  0538  30FF               	movlw	255
  1805  0539  00F7               	movwf	??_app_ini
  1806  053A  0877               	movf	??_app_ini,w
  1807  053B  00FC               	movwf	_tmr_1ses
  1808                           
  1809                           ;app.c: 19: (tmr_temp_key = 0xFF);
  1810  053C  30FF               	movlw	255
  1811  053D  00F7               	movwf	??_app_ini
  1812  053E  0877               	movf	??_app_ini,w
  1813  053F  00FB               	movwf	_tmr_temp_key
  1814                           
  1815                           ;app.c: 25: temp_add = 0x70F0;
  1816  0540  30F0               	movlw	240
  1817  0541  00CB               	movwf	app_ini@temp_add
  1818  0542  3070               	movlw	112
  1819  0543  00CC               	movwf	app_ini@temp_add+1
  1820                           
  1821                           ;app.c: 26: dest_add = 0;
  1822  0544  01C9               	clrf	app_ini@dest_add
  1823  0545  01CA               	clrf	app_ini@dest_add+1
  1824  0546                     l2128:	
  1825                           ;app.c: 27: while(temp_add <= 0x70FF)
  1826                           
  1827  0546  3071               	movlw	113
  1828  0547  024C               	subwf	app_ini@temp_add+1,w
  1829  0548  3000               	movlw	0
  1830  0549  1903               	skipnz
  1831  054A  024B               	subwf	app_ini@temp_add,w
  1832  054B  1803               	btfsc	3,0
  1833  054C  0008               	return
  1834                           
  1835                           ;app.c: 28: {
  1836                           ;app.c: 29: lock_id[dest_add] = read_mem(temp_add,1);
  1837  054D  084C               	movf	app_ini@temp_add+1,w
  1838  054E  00F5               	movwf	read_mem@mem_addr+1
  1839  054F  084B               	movf	app_ini@temp_add,w
  1840  0550  00F4               	movwf	read_mem@mem_addr
  1841  0551  01F6               	clrf	read_mem@typ
  1842  0552  0AF6               	incf	read_mem@typ,f
  1843  0553  26E3               	fcall	_read_mem
  1844  0554  0874               	movf	?_read_mem,w
  1845  0555  00F7               	movwf	??_app_ini
  1846  0556  0020               	movlb	0	; select bank0
  1847  0557  0849               	movf	app_ini@dest_add,w
  1848  0558  3E29               	addlw	(low (_lock_id| 0))& (0+255)
  1849  0559  0086               	movwf	6
  1850  055A  0187               	clrf	7
  1851  055B  0877               	movf	??_app_ini,w
  1852  055C  0081               	movwf	1
  1853                           
  1854                           ;app.c: 30: dest_add++;
  1855  055D  3001               	movlw	1
  1856  055E  07C9               	addwf	app_ini@dest_add,f
  1857  055F  3000               	movlw	0
  1858  0560  3DCA               	addwfc	app_ini@dest_add+1,f
  1859                           
  1860                           ;app.c: 31: temp_add++;
  1861  0561  3001               	movlw	1
  1862  0562  07CB               	addwf	app_ini@temp_add,f
  1863  0563  3000               	movlw	0
  1864  0564  3DCC               	addwfc	app_ini@temp_add+1,f
  1865  0565  2D46               	goto	l2128
  1866  0566                     __end_of_app_ini:	
  1867                           
  1868                           	psect	text4
  1869  0757                     __ptext4:	
  1870 ;; *************** function _Ini_Timer_0 *****************
  1871 ;; Defined at:
  1872 ;;		line 127 in file "../Src/system.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1886 ;;      Params:         0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_Sys_Ini
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _Ini_Timer_0
  1902  0757                     _Ini_Timer_0:	
  1903                           
  1904                           ;system.c: 131: T0CON1bits.T0CS0=0;
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _Ini_Timer_0: [wreg+status,2]
  1908  0757  0020               	movlb	0	; select bank0
  1909  0758  1298               	bcf	24,5	;volatile
  1910                           
  1911                           ;system.c: 132: T0CON1bits.T0CS1=0;
  1912  0759  1318               	bcf	24,6	;volatile
  1913                           
  1914                           ;system.c: 133: T0CON1bits.T0CS2=1;
  1915  075A  1798               	bsf	24,7	;volatile
  1916                           
  1917                           ;system.c: 136: TMR0L=0;
  1918  075B  0195               	clrf	21	;volatile
  1919                           
  1920                           ;system.c: 137: TMR0H=31;
  1921  075C  301F               	movlw	31
  1922  075D  0096               	movwf	22	;volatile
  1923                           
  1924                           ;system.c: 138: PIR0bits.TMR0IF = 0;
  1925  075E  1290               	bcf	16,5	;volatile
  1926                           
  1927                           ;system.c: 139: PIE0bits.TMR0IE =1;
  1928  075F  0021               	movlb	1	; select bank1
  1929  0760  1690               	bsf	16,5	;volatile
  1930  0761  0008               	return
  1931  0762                     __end_of_Ini_Timer_0:	
  1932                           
  1933                           	psect	text5
  1934  0775                     __ptext5:	
  1935 ;; *************** function _Ini_Oscillator *****************
  1936 ;; Defined at:
  1937 ;;		line 86 in file "../Src/system.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		None
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_Sys_Ini
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _Ini_Oscillator
  1967  0775                     _Ini_Oscillator:	
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Ini_Oscillator: []
  1971  0775  0008               	return
  1972  0776                     __end_of_Ini_Oscillator:	
  1973                           
  1974                           	psect	text6
  1975  074B                     __ptext6:	
  1976 ;; *************** function _Ini_Dio *****************
  1977 ;; Defined at:
  1978 ;;		line 95 in file "../Src/system.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         0       0       0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_Sys_Ini
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _Ini_Dio
  2008  074B                     _Ini_Dio:	
  2009                           
  2010                           ;system.c: 99: TRISA = 0b00101000;
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _Ini_Dio: [wreg+status,2]
  2014  074B  3028               	movlw	40
  2015  074C  0021               	movlb	1	; select bank1
  2016  074D  008C               	movwf	12	;volatile
  2017                           
  2018                           ;system.c: 100: ANSELA = 0b00000000;
  2019  074E  0023               	movlb	3	; select bank3
  2020  074F  018C               	clrf	12	;volatile
  2021                           
  2022                           ;system.c: 101: WPUA = 0x39;
  2023  0750  3039               	movlw	57
  2024  0751  0024               	movlb	4	; select bank4
  2025  0752  008C               	movwf	12	;volatile
  2026                           
  2027                           ;system.c: 122: LATA = 0b00111000;
  2028  0753  3038               	movlw	56
  2029  0754  0022               	movlb	2	; select bank2
  2030  0755  008C               	movwf	12	;volatile
  2031  0756  0008               	return
  2032  0757                     __end_of_Ini_Dio:	
  2033                           
  2034                           	psect	text7
  2035  04EC                     __ptext7:	
  2036 ;; *************** function _Run_Os *****************
  2037 ;; Defined at:
  2038 ;;		line 24 in file "../Src/os.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0
  2054 ;;      Temps:          0       0       1       0       0
  2055 ;;      Totals:         0       0       1       0       0
  2056 ;;Total ram usage:        1 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    5
  2059 ;; This function calls:
  2060 ;;		_app_test_1000ms
  2061 ;;		_app_test_100ms
  2062 ;;		_app_test_10ms
  2063 ;;		_app_test_1ms
  2064 ;;		_app_test_BG
  2065 ;;		_com_get_tx_buf_lnt
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _Run_Os
  2073  04EC                     _Run_Os:	
  2074  04EC                     l190:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _Run_Os: [allreg]
  2077                           ;os.c: 26: while(1)
  2078                           
  2079                           
  2080                           ;os.c: 27: {
  2081                           ;os.c: 28: if(os.time_keeper[0])
  2082  04EC  0021               	movlb	1	; select bank1
  2083  04ED  0864               	movf	(_os^(0+128)+14),w
  2084  04EE  1903               	btfsc	3,2
  2085  04EF  2D27               	goto	l2388
  2086                           
  2087                           ;os.c: 29: {
  2088                           ;os.c: 31: for(j_1=0u;j_1<((5u-1u));j_1++)
  2089  04F0  01FA               	clrf	_j_1
  2090  04F1  3004               	movlw	4
  2091  04F2  027A               	subwf	_j_1,w
  2092  04F3  1803               	btfsc	3,0
  2093  04F4  2D1E               	goto	l2386
  2094  04F5                     l2374:	
  2095                           
  2096                           ;os.c: 32: {
  2097                           ;os.c: 33: if(os.time_keeper[j_1]>=10u)
  2098  04F5  087A               	movf	_j_1,w
  2099  04F6  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2100  04F7  0086               	movwf	6
  2101  04F8  0187               	clrf	7
  2102  04F9  300A               	movlw	10
  2103  04FA  0201               	subwf	1,w
  2104  04FB  1C03               	skipc
  2105  04FC  2D15               	goto	l2382
  2106                           
  2107                           ;os.c: 34: {
  2108                           ;os.c: 35: os.pro_ptr[j_1]();
  2109  04FD  357A               	lslf	_j_1,w
  2110  04FE  3ED6               	addlw	(low (_os| 0))& (0+255)
  2111  04FF  0086               	movwf	6
  2112  0500  0187               	clrf	7
  2113  0501  3F41               	moviw [1]fsr1
  2114  0502  008A               	movwf	10
  2115  0503  3F40               	moviw [0]fsr1
  2116  0504  000A               	callw
  2117  0505  3184               	pagesel	$
  2118                           
  2119                           ;os.c: 37: os.time_keeper[j_1+1u]++;
  2120  0506  3001               	movlw	1
  2121  0507  0020               	movlb	0	; select bank0
  2122  0508  00D6               	movwf	??_Run_Os
  2123  0509  087A               	movf	_j_1,w
  2124  050A  3E01               	addlw	1
  2125  050B  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2126  050C  0086               	movwf	6
  2127  050D  0187               	clrf	7
  2128  050E  0856               	movf	??_Run_Os,w
  2129  050F  0781               	addwf	1,f
  2130                           
  2131                           ;os.c: 38: os.time_keeper[j_1]=0u;
  2132  0510  087A               	movf	_j_1,w
  2133  0511  3EE4               	addlw	(low ((_os| 0+14)))& (0+255)
  2134  0512  0086               	movwf	6
  2135  0513  0187               	clrf	7
  2136  0514  0181               	clrf	1
  2137  0515                     l2382:	
  2138  0515  3001               	movlw	1
  2139  0516  0020               	movlb	0	; select bank0
  2140  0517  00D6               	movwf	??_Run_Os
  2141  0518  0856               	movf	??_Run_Os,w
  2142  0519  07FA               	addwf	_j_1,f
  2143  051A  3004               	movlw	4
  2144  051B  027A               	subwf	_j_1,w
  2145  051C  1C03               	skipc
  2146  051D  2CF5               	goto	l2374
  2147  051E                     l2386:	
  2148                           
  2149                           ;os.c: 39: }
  2150                           ;os.c: 40: }
  2151                           ;os.c: 41: os.os_time_ms++;
  2152  051E  3001               	movlw	1
  2153  051F  0021               	movlb	1	; select bank1
  2154  0520  07DE               	addwf	(_os^(0+128)+8),f
  2155  0521  3000               	movlw	0
  2156  0522  3DDF               	addwfc	((_os+1)^(0+128)+8),f
  2157  0523  3000               	movlw	0
  2158  0524  3DE0               	addwfc	((_os+2)^(0+128)+8),f
  2159  0525  3000               	movlw	0
  2160  0526  3DE1               	addwfc	((_os+3)^(0+128)+8),f
  2161  0527                     l2388:	
  2162                           
  2163                           ;os.c: 42: }
  2164                           ;os.c: 43: app_test_BG();
  2165  0527  24A4               	fcall	_app_test_BG
  2166  0528                     l2390:	
  2167                           ;os.c: 45: while(com_get_tx_buf_lnt());
  2168                           
  2169  0528  26CF               	fcall	_com_get_tx_buf_lnt
  2170  0529  3A00               	xorlw	0
  2171  052A  1D03               	skipz
  2172  052B  2D28               	goto	l2390
  2173  052C  0063               	sleep	;# 
  2174                           
  2175                           ;os.c: 47: __nop();
  2176  052D  0000               	nop
  2177                           
  2178                           ;os.c: 48: __nop();
  2179  052E  0000               	nop
  2180  052F  2CEC               	goto	l190
  2181  0530                     __end_of_Run_Os:	
  2182                           
  2183                           	psect	text8
  2184  06CF                     __ptext8:	
  2185 ;; *************** function _com_get_tx_buf_lnt *****************
  2186 ;; Defined at:
  2187 ;;		line 43 in file "../Src/uart.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  temp_dif        1    5[COMMON] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2201 ;;      Params:         0       0       0       0       0
  2202 ;;      Locals:         1       0       0       0       0
  2203 ;;      Temps:          1       0       0       0       0
  2204 ;;      Totals:         2       0       0       0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    2
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_Run_Os
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _com_get_tx_buf_lnt
  2217  06CF                     _com_get_tx_buf_lnt:	
  2218                           
  2219                           ;uart.c: 45: uint8 temp_dif;
  2220                           ;uart.c: 46: INTCONbits.GIE=0;
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _com_get_tx_buf_lnt: [wreg+status,2+status,0]
  2224  06CF  138B               	bcf	11,7	;volatile
  2225                           
  2226                           ;uart.c: 47: if(com.tx_head > com.tx_tale)
  2227  06D0  0021               	movlb	1	; select bank1
  2228  06D1  0838               	movf	(_com^(0+128)+24),w
  2229  06D2  0239               	subwf	(_com^(0+128)+25),w
  2230  06D3  1803               	skipnc
  2231  06D4  2EDA               	goto	l1838
  2232                           
  2233                           ;uart.c: 48: {
  2234                           ;uart.c: 49: temp_dif = ((24u - com.tx_head) + com.tx_tale);
  2235  06D5  0338               	decf	(_com^(0+128)+24),w
  2236  06D6  3AFF               	xorlw	255
  2237  06D7  0739               	addwf	(_com^(0+128)+25),w
  2238  06D8  3E18               	addlw	24
  2239  06D9  2EDD               	goto	L1
  2240  06DA                     l1838:	
  2241                           ;uart.c: 50: }
  2242                           
  2243                           
  2244                           ;uart.c: 51: else
  2245                           ;uart.c: 52: {
  2246                           ;uart.c: 53: temp_dif = (com.tx_tale - com.tx_head);
  2247  06DA  0338               	decf	(_com^(0+128)+24),w
  2248  06DB  3AFF               	xorlw	255
  2249  06DC  0739               	addwf	(_com^(0+128)+25),w
  2250  06DD                     L1:	
  2251  06DD  00F4               	movwf	??_com_get_tx_buf_lnt
  2252  06DE  0874               	movf	??_com_get_tx_buf_lnt,w
  2253  06DF  00F5               	movwf	com_get_tx_buf_lnt@temp_dif
  2254                           
  2255                           ;uart.c: 54: }
  2256                           ;uart.c: 55: INTCONbits.GIE=1;
  2257  06E0  178B               	bsf	11,7	;volatile
  2258                           
  2259                           ;uart.c: 56: return(temp_dif);
  2260  06E1  0875               	movf	com_get_tx_buf_lnt@temp_dif,w
  2261  06E2  0008               	return
  2262  06E3                     __end_of_com_get_tx_buf_lnt:	
  2263                           
  2264                           	psect	text9
  2265  04A4                     __ptext9:	
  2266 ;; *************** function _app_test_BG *****************
  2267 ;; Defined at:
  2268 ;;		line 298 in file "../Src/app.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  temp_time       1    2[BANK0h] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0       0
  2283 ;;      Locals:         0       3       0       0       0
  2284 ;;      Temps:          2       0       0       0       0
  2285 ;;      Totals:         2       3       0       0       0
  2286 ;;Total ram usage:        5 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		_eep_write_char
  2291 ;;		_event_push
  2292 ;;		_event_read
  2293 ;; This function is called by:
  2294 ;;		_Run_Os
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _app_test_BG
  2300  04A4                     _app_test_BG:	
  2301                           
  2302                           ;app.c: 300: uint8 temp_time;
  2303                           ;app.c: 302: switch(event_read())
  2304                           
  2305                           ;incstack = 0
  2306                           ; Regs used in _app_test_BG: [allreg]
  2307  04A4  2CE0               	goto	l2324
  2308  04A5                     l2302:	
  2309                           ;app.c: 303: {
  2310                           ;app.c: 304: case SW0_PRESS :
  2311                           
  2312                           
  2313                           ;app.c: 305: (tmr_1ses = 0);
  2314  04A5  01FC               	clrf	_tmr_1ses
  2315                           
  2316                           ;app.c: 306: Led_st_cnt=Led_st_cnt + 2;;
  2317  04A6  0020               	movlb	0	; select bank0
  2318  04A7  0828               	movf	_Led_st_cnt,w
  2319  04A8  3E02               	addlw	2
  2320  04A9  00F7               	movwf	??_app_test_BG
  2321  04AA  0877               	movf	??_app_test_BG,w
  2322  04AB  00A8               	movwf	_Led_st_cnt
  2323                           
  2324                           ;app.c: 307: break;
  2325  04AC  0008               	return
  2326  04AD                     l2306:	
  2327                           ;app.c: 308: case SW0_RELEASE :
  2328                           
  2329                           
  2330                           ;app.c: 309: temp_time = ((tmr_1ses < 0xFF)?tmr_1ses:0);
  2331  04AD  0A7C               	incf	_tmr_1ses,w
  2332  04AE  1D03               	btfss	3,2
  2333  04AF  2CB4               	goto	l2310
  2334  04B0  0020               	movlb	0	; select bank0
  2335  04B1  01D7               	clrf	_app_test_BG$176
  2336  04B2  01D8               	clrf	_app_test_BG$176+1
  2337  04B3  2CBC               	goto	l127
  2338  04B4                     l2310:	
  2339  04B4  087C               	movf	_tmr_1ses,w
  2340  04B5  00F7               	movwf	??_app_test_BG
  2341  04B6  01F8               	clrf	??_app_test_BG+1
  2342  04B7  0877               	movf	??_app_test_BG,w
  2343  04B8  0020               	movlb	0	; select bank0
  2344  04B9  00D7               	movwf	_app_test_BG$176
  2345  04BA  0878               	movf	??_app_test_BG+1,w
  2346  04BB  00D8               	movwf	_app_test_BG$176+1
  2347  04BC                     l127:	
  2348  04BC  0857               	movf	_app_test_BG$176,w
  2349  04BD  00F7               	movwf	??_app_test_BG
  2350  04BE  0877               	movf	??_app_test_BG,w
  2351  04BF  00D9               	movwf	app_test_BG@temp_time
  2352                           
  2353                           ;app.c: 310: (tmr_1ses = 0xFF);
  2354  04C0  30FF               	movlw	255
  2355  04C1  00F7               	movwf	??_app_test_BG
  2356  04C2  0877               	movf	??_app_test_BG,w
  2357  04C3  00FC               	movwf	_tmr_1ses
  2358                           
  2359                           ;app.c: 312: if((temp_time <= 15))
  2360  04C4  3010               	movlw	16
  2361  04C5  0259               	subwf	app_test_BG@temp_time,w
  2362  04C6  1803               	skipnc
  2363  04C7  0008               	return
  2364                           
  2365                           ;app.c: 313: {
  2366                           ;app.c: 314: if(temp_time >= 10)
  2367  04C8  300A               	movlw	10
  2368  04C9  0259               	subwf	app_test_BG@temp_time,w
  2369  04CA  1C03               	skipc
  2370  04CB  0008               	return
  2371                           
  2372                           ;app.c: 315: {
  2373                           ;app.c: 316: event_push(FDR);
  2374  04CC  3004               	movlw	4
  2375  04CD  2636               	fcall	_event_push
  2376                           
  2377                           ;app.c: 317: }
  2378                           ;app.c: 318: }
  2379                           ;app.c: 320: break;
  2380  04CE  0008               	return
  2381  04CF                     l2316:	
  2382                           ;app.c: 322: case FDR :
  2383                           
  2384                           
  2385                           ;app.c: 323: eep_write_char(0xF3,0xFF);
  2386  04CF  30FF               	movlw	255
  2387  04D0  00F7               	movwf	??_app_test_BG
  2388  04D1  0877               	movf	??_app_test_BG,w
  2389  04D2  00F4               	movwf	eep_write_char@data
  2390  04D3  30F3               	movlw	243
  2391  04D4  273D               	fcall	_eep_write_char
  2392                           
  2393                           ;app.c: 324: lock_id[3]=0xFF;
  2394  04D5  30FF               	movlw	255
  2395  04D6  00F7               	movwf	??_app_test_BG
  2396  04D7  0877               	movf	??_app_test_BG,w
  2397  04D8  0020               	movlb	0	; select bank0
  2398  04D9  00AC               	movwf	_lock_id+3
  2399                           
  2400                           ;app.c: 326: Led_st_cnt=Led_st_cnt + 40;;
  2401  04DA  0828               	movf	_Led_st_cnt,w
  2402  04DB  3E28               	addlw	40
  2403  04DC  00F7               	movwf	??_app_test_BG
  2404  04DD  0877               	movf	??_app_test_BG,w
  2405  04DE  00A8               	movwf	_Led_st_cnt
  2406                           
  2407                           ;app.c: 329: }
  2408                           
  2409                           ;app.c: 328: break;
  2410  04DF  0008               	return
  2411  04E0                     l2324:	
  2412  04E0  2654               	fcall	_event_read
  2413                           
  2414                           ; Switch size 1, requested type "space"
  2415                           ; Number of cases is 3, Range of values is 1 to 4
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte           10     6 (average)
  2419                           ; direct_byte           17     9 (fixed)
  2420                           ; jumptable            263     9 (fixed)
  2421                           ;	Chosen strategy is simple_byte
  2422  04E1  3A01               	xorlw	1	; case 1
  2423  04E2  1903               	skipnz
  2424  04E3  2CAD               	goto	l2306
  2425  04E4  3A03               	xorlw	3	; case 2
  2426  04E5  1903               	skipnz
  2427  04E6  2CA5               	goto	l2302
  2428  04E7  3A06               	xorlw	6	; case 4
  2429  04E8  1903               	skipnz
  2430  04E9  2CCF               	goto	l2316
  2431  04EA  2CEB               	goto	l131
  2432  04EB                     l131:	
  2433  04EB  0008               	return
  2434  04EC                     __end_of_app_test_BG:	
  2435                           
  2436                           	psect	text10
  2437  0654                     __ptext10:	
  2438 ;; *************** function _event_read *****************
  2439 ;; Defined at:
  2440 ;;		line 126 in file "../Src/os.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  temp_event_i    1    5[COMMON] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      unsigned char 
  2447 ;; Registers used:
  2448 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2454 ;;      Params:         0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0
  2456 ;;      Temps:          1       0       0       0       0
  2457 ;;      Totals:         2       0       0       0       0
  2458 ;;Total ram usage:        2 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    2
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_app_test_BG
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _event_read
  2470  0654                     _event_read:	
  2471                           
  2472                           ;os.c: 129: uint8 temp_event_id=0;
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _event_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  2476  0654  01F5               	clrf	event_read@temp_event_id
  2477                           
  2478                           ;os.c: 130: if((str_event.head != str_event.tale)||str_event.overflow)
  2479  0655  0020               	movlb	0	; select bank0
  2480  0656  0821               	movf	_str_event+1,w
  2481  0657  0620               	xorwf	_str_event,w
  2482  0658  1903               	btfsc	3,2
  2483  0659  0826               	movf	_str_event+6,w
  2484  065A  1903               	btfsc	3,2
  2485  065B  2E6F               	goto	l2108
  2486                           
  2487                           ;os.c: 131: {
  2488                           ;os.c: 132: temp_event_id = str_event.queue[str_event.tale];
  2489  065C  0821               	movf	_str_event+1,w
  2490  065D  3E22               	addlw	(low ((_str_event| 0+2)))& (0+255)
  2491  065E  0086               	movwf	6
  2492  065F  0187               	clrf	7
  2493  0660  0801               	movf	1,w
  2494  0661  00F4               	movwf	??_event_read
  2495  0662  0874               	movf	??_event_read,w
  2496  0663  00F5               	movwf	event_read@temp_event_id
  2497                           
  2498                           ;os.c: 133: if(str_event.tale<(4 - 1)){str_event.tale ++;}else{str_event.tale = 0;}
  2499  0664  3003               	movlw	3
  2500  0665  0221               	subwf	_str_event+1,w
  2501  0666  1803               	skipnc
  2502  0667  2E6D               	goto	l2106
  2503  0668  3001               	movlw	1
  2504  0669  00F4               	movwf	??_event_read
  2505  066A  0874               	movf	??_event_read,w
  2506  066B  07A1               	addwf	_str_event+1,f
  2507  066C  2E6E               	goto	l218
  2508  066D                     l2106:	
  2509  066D  01A1               	clrf	_str_event+1
  2510  066E                     l218:	
  2511                           
  2512                           ;os.c: 134: str_event.overflow=0;
  2513  066E  01A6               	clrf	_str_event+6
  2514  066F                     l2108:	
  2515                           
  2516                           ;os.c: 135: }
  2517                           ;os.c: 136: return (temp_event_id);
  2518  066F  0875               	movf	event_read@temp_event_id,w
  2519  0670  0008               	return
  2520  0671                     __end_of_event_read:	
  2521                           
  2522                           	psect	text11
  2523  0454                     __ptext11:	
  2524 ;; *************** function _app_test_1000ms *****************
  2525 ;; Defined at:
  2526 ;;		line 273 in file "../Src/app.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  temp_time       1    4[BANK0l] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       5       0       0
  2542 ;;      Temps:          2       0       0       0       0
  2543 ;;      Totals:         2       0       5       0       0
  2544 ;;Total ram usage:        7 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_Run_Os
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _app_test_1000ms
  2556  0454                     _app_test_1000ms:	
  2557                           
  2558                           ;app.c: 275: uint8 temp_time;
  2559                           ;app.c: 279: os.os_time_sec++;
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _app_test_1000ms: [wreg+status,2+status,0]
  2563  0454  3001               	movlw	1
  2564  0455  0021               	movlb	1	; select bank1
  2565  0456  07E2               	addwf	(_os^(0+128)+12),f
  2566  0457  3000               	movlw	0
  2567  0458  3DE3               	addwfc	((_os+1)^(0+128)+12),f
  2568                           
  2569                           ;app.c: 280: if(tmr_1ses < 0xFE){tmr_1ses++; };
  2570  0459  30FE               	movlw	254
  2571  045A  027C               	subwf	_tmr_1ses,w
  2572  045B  1803               	skipnc
  2573  045C  2C61               	goto	l2276
  2574  045D  3001               	movlw	1
  2575  045E  00F4               	movwf	??_app_test_1000ms
  2576  045F  0874               	movf	??_app_test_1000ms,w
  2577  0460  07FC               	addwf	_tmr_1ses,f
  2578  0461                     l2276:	
  2579                           
  2580                           ;app.c: 282: if(tmr_temp_key < 0xFE){tmr_temp_key++; };
  2581  0461  30FE               	movlw	254
  2582  0462  027B               	subwf	_tmr_temp_key,w
  2583  0463  1803               	skipnc
  2584  0464  2C69               	goto	l106
  2585  0465  3001               	movlw	1
  2586  0466  00F4               	movwf	??_app_test_1000ms
  2587  0467  0874               	movf	??_app_test_1000ms,w
  2588  0468  07FB               	addwf	_tmr_temp_key,f
  2589  0469                     l106:	
  2590                           
  2591                           ;app.c: 283: temp_time = ((tmr_temp_key < 0xFF)?tmr_temp_key:0);
  2592  0469  0A7B               	incf	_tmr_temp_key,w
  2593  046A  1D03               	btfss	3,2
  2594  046B  2C70               	goto	l2282
  2595  046C  0020               	movlb	0	; select bank0
  2596  046D  01C9               	clrf	_app_test_1000ms$172
  2597  046E  01CA               	clrf	_app_test_1000ms$172+1
  2598  046F  2C78               	goto	l110
  2599  0470                     l2282:	
  2600  0470  087B               	movf	_tmr_temp_key,w
  2601  0471  00F4               	movwf	??_app_test_1000ms
  2602  0472  01F5               	clrf	??_app_test_1000ms+1
  2603  0473  0874               	movf	??_app_test_1000ms,w
  2604  0474  0020               	movlb	0	; select bank0
  2605  0475  00C9               	movwf	_app_test_1000ms$172
  2606  0476  0875               	movf	??_app_test_1000ms+1,w
  2607  0477  00CA               	movwf	_app_test_1000ms$172+1
  2608  0478                     l110:	
  2609  0478  0849               	movf	_app_test_1000ms$172,w
  2610  0479  00F4               	movwf	??_app_test_1000ms
  2611  047A  0874               	movf	??_app_test_1000ms,w
  2612  047B  00CD               	movwf	app_test_1000ms@temp_time
  2613                           
  2614                           ;app.c: 284: if(temp_time == 15)
  2615  047C  300F               	movlw	15
  2616  047D  064D               	xorwf	app_test_1000ms@temp_time,w
  2617  047E  1D03               	btfss	3,2
  2618  047F  2C85               	goto	l2290
  2619                           
  2620                           ;app.c: 285: {
  2621                           ;app.c: 286: (tmr_temp_key = 0xFF);
  2622  0480  30FF               	movlw	255
  2623  0481  00F4               	movwf	??_app_test_1000ms
  2624  0482  0874               	movf	??_app_test_1000ms,w
  2625  0483  00FB               	movwf	_tmr_temp_key
  2626                           
  2627                           ;app.c: 287: temp_key = ~temp_key;
  2628  0484  09DA               	comf	_temp_key,f
  2629  0485                     l2290:	
  2630                           
  2631                           ;app.c: 288: }
  2632                           ;app.c: 290: temp_time = ((tmr_1ses < 0xFF)?tmr_1ses:0);
  2633  0485  0A7C               	incf	_tmr_1ses,w
  2634  0486  1D03               	btfss	3,2
  2635  0487  2C8B               	goto	l2294
  2636  0488  01CB               	clrf	_app_test_1000ms$173
  2637  0489  01CC               	clrf	_app_test_1000ms$173+1
  2638  048A  2C92               	goto	l115
  2639  048B                     l2294:	
  2640  048B  087C               	movf	_tmr_1ses,w
  2641  048C  00F4               	movwf	??_app_test_1000ms
  2642  048D  01F5               	clrf	??_app_test_1000ms+1
  2643  048E  0874               	movf	??_app_test_1000ms,w
  2644  048F  00CB               	movwf	_app_test_1000ms$173
  2645  0490  0875               	movf	??_app_test_1000ms+1,w
  2646  0491  00CC               	movwf	_app_test_1000ms$173+1
  2647  0492                     l115:	
  2648  0492  084B               	movf	_app_test_1000ms$173,w
  2649  0493  00F4               	movwf	??_app_test_1000ms
  2650  0494  0874               	movf	??_app_test_1000ms,w
  2651  0495  00CD               	movwf	app_test_1000ms@temp_time
  2652                           
  2653                           ;app.c: 292: if((temp_time >= 10) && (temp_time <= 15))
  2654  0496  300A               	movlw	10
  2655  0497  024D               	subwf	app_test_1000ms@temp_time,w
  2656  0498  1C03               	skipc
  2657  0499  0008               	return
  2658  049A  3010               	movlw	16
  2659  049B  024D               	subwf	app_test_1000ms@temp_time,w
  2660  049C  1803               	skipnc
  2661  049D  0008               	return
  2662                           
  2663                           ;app.c: 293: {
  2664                           ;app.c: 294: Led_st_cnt=Led_st_cnt + 4;;
  2665  049E  0828               	movf	_Led_st_cnt,w
  2666  049F  3E04               	addlw	4
  2667  04A0  00F4               	movwf	??_app_test_1000ms
  2668  04A1  0874               	movf	??_app_test_1000ms,w
  2669  04A2  00A8               	movwf	_Led_st_cnt
  2670  04A3  0008               	return
  2671  04A4                     __end_of_app_test_1000ms:	
  2672                           
  2673                           	psect	text12
  2674  02E4                     __ptext12:	
  2675 ;; *************** function _app_test_100ms *****************
  2676 ;; Defined at:
  2677 ;;		line 48 in file "../Src/app.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  cmd_idx_offs    1    8[BANK0l] unsigned char 
  2682 ;;  temp_add_or_    1    7[BANK0l] unsigned char 
  2683 ;;  dat_idx_offs    1    6[BANK0l] unsigned char 
  2684 ;;  i               1   11[BANK0l] unsigned char 
  2685 ;;  resp_len        1   10[BANK0l] unsigned char 
  2686 ;;  sw0_st          1   12[BANK0l] volatile unsigned char 
  2687 ;;  MacKeyTemp      1    9[BANK0l] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         0       0       7       0       0
  2699 ;;      Temps:          0       0       2       0       0
  2700 ;;      Totals:         0       0       9       0       0
  2701 ;;Total ram usage:        9 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    4
  2704 ;; This function calls:
  2705 ;;		_CRC_Chk
  2706 ;;		_com_get_rx_buf_lnt
  2707 ;;		_com_rx_read_char
  2708 ;;		_com_send_dat
  2709 ;;		_eep_write_char
  2710 ;;		_enc_dec
  2711 ;;		_event_push
  2712 ;;		_get_temp_key
  2713 ;;		_led0_task
  2714 ;;		_mem_compare
  2715 ;;		_read_mem
  2716 ;; This function is called by:
  2717 ;;		_Run_Os
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _app_test_100ms
  2723  02E4                     _app_test_100ms:	
  2724                           
  2725                           ;app.c: 50: uint8 i=0, resp_len = 0,MacKeyTemp = 0;
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _app_test_100ms: [allreg]
  2729  02E4  0020               	movlb	0	; select bank0
  2730  02E5  01D4               	clrf	app_test_100ms@i
  2731  02E6  01D3               	clrf	app_test_100ms@resp_len
  2732  02E7  01D2               	clrf	app_test_100ms@MacKeyTemp
  2733                           
  2734                           ;app.c: 51: volatile uint8 sw0_st;
  2735                           ;app.c: 52: if( lock_id[3] == 0xFF )
  2736  02E8  0A2C               	incf	_lock_id+3,w
  2737  02E9  1D03               	btfss	3,2
  2738  02EA  2AED               	goto	l2136
  2739                           
  2740                           ;app.c: 53: {
  2741                           ;app.c: 54: MacKeyTemp = lock_id[8];
  2742  02EB  0831               	movf	_lock_id+8,w
  2743  02EC  2AEE               	goto	L2
  2744  02ED                     l2136:	
  2745                           ;app.c: 55: }
  2746                           
  2747                           
  2748                           ;app.c: 56: else
  2749                           ;app.c: 57: {
  2750                           ;app.c: 58: MacKeyTemp = lock_id[3];
  2751  02ED  082C               	movf	_lock_id+3,w
  2752  02EE                     L2:	
  2753  02EE  00CD               	movwf	??_app_test_100ms
  2754  02EF  084D               	movf	??_app_test_100ms,w
  2755  02F0  00D2               	movwf	app_test_100ms@MacKeyTemp
  2756                           
  2757                           ;app.c: 59: }
  2758                           ;app.c: 61: if(com_get_rx_buf_lnt())
  2759  02F1  26F7               	fcall	_com_get_rx_buf_lnt
  2760  02F2  3A00               	xorlw	0
  2761  02F3  1903               	skipnz
  2762  02F4  2C3D               	goto	l2258
  2763                           
  2764                           ;app.c: 62: {
  2765                           ;app.c: 64: cmd_res_data[0] = 0xFF;
  2766  02F5  30FF               	movlw	255
  2767  02F6  0020               	movlb	0	; select bank0
  2768  02F7  00CD               	movwf	??_app_test_100ms
  2769  02F8  084D               	movf	??_app_test_100ms,w
  2770  02F9  00B9               	movwf	_cmd_res_data
  2771                           
  2772                           ;app.c: 65: while(com_get_rx_buf_lnt() && (i < 16))
  2773  02FA  2B08               	goto	l2146
  2774  02FB                     l2142:	
  2775                           
  2776                           ;app.c: 66: {
  2777                           ;app.c: 67: cmd_res_data[i]=com_rx_read_char();
  2778  02FB  26A2               	fcall	_com_rx_read_char
  2779  02FC  0020               	movlb	0	; select bank0
  2780  02FD  00CD               	movwf	??_app_test_100ms
  2781  02FE  0854               	movf	app_test_100ms@i,w
  2782  02FF  3E39               	addlw	(low (_cmd_res_data| 0))& (0+255)
  2783  0300  0086               	movwf	6
  2784  0301  0187               	clrf	7
  2785  0302  084D               	movf	??_app_test_100ms,w
  2786  0303  0081               	movwf	1
  2787                           
  2788                           ;app.c: 68: i++;
  2789  0304  3001               	movlw	1
  2790  0305  00CD               	movwf	??_app_test_100ms
  2791  0306  084D               	movf	??_app_test_100ms,w
  2792  0307  07D4               	addwf	app_test_100ms@i,f
  2793  0308                     l2146:	
  2794  0308  26F7               	fcall	_com_get_rx_buf_lnt
  2795  0309  3A00               	xorlw	0
  2796  030A  1903               	skipnz
  2797  030B  2B11               	goto	l2150
  2798  030C  3010               	movlw	16
  2799  030D  0020               	movlb	0	; select bank0
  2800  030E  0254               	subwf	app_test_100ms@i,w
  2801  030F  1C03               	skipc
  2802  0310  2AFB               	goto	l2142
  2803  0311                     l2150:	
  2804                           
  2805                           ;app.c: 69: }
  2806                           ;app.c: 72: if( cmd_res_data[0] == 5 )
  2807  0311  3005               	movlw	5
  2808  0312  0020               	movlb	0	; select bank0
  2809  0313  0639               	xorwf	_cmd_res_data,w
  2810  0314  1D03               	btfss	3,2
  2811  0315  2B36               	goto	l2166
  2812                           
  2813                           ;app.c: 73: {
  2814                           ;app.c: 74: cmd_res_data[0] = 8;
  2815  0316  3008               	movlw	8
  2816  0317  00CD               	movwf	??_app_test_100ms
  2817  0318  084D               	movf	??_app_test_100ms,w
  2818  0319  00B9               	movwf	_cmd_res_data
  2819                           
  2820                           ;app.c: 77: temp_key = cmd_res_data[1];
  2821  031A  083A               	movf	_cmd_res_data+1,w
  2822  031B  00CD               	movwf	??_app_test_100ms
  2823  031C  084D               	movf	??_app_test_100ms,w
  2824  031D  00DA               	movwf	_temp_key
  2825                           
  2826                           ;app.c: 79: cmd_res_data[1] = get_temp_key();
  2827  031E  272F               	fcall	_get_temp_key
  2828  031F  0020               	movlb	0	; select bank0
  2829  0320  00CD               	movwf	??_app_test_100ms
  2830  0321  084D               	movf	??_app_test_100ms,w
  2831  0322  00BA               	movwf	_cmd_res_data+1
  2832                           
  2833                           ;app.c: 81: temp_key ^= cmd_res_data[1];
  2834  0323  083A               	movf	_cmd_res_data+1,w
  2835  0324  00CD               	movwf	??_app_test_100ms
  2836  0325  084D               	movf	??_app_test_100ms,w
  2837  0326  06DA               	xorwf	_temp_key,f
  2838                           
  2839                           ;app.c: 82: temp_key ^= lock_id[8];
  2840  0327  0831               	movf	_lock_id+8,w
  2841  0328  00CD               	movwf	??_app_test_100ms
  2842  0329  084D               	movf	??_app_test_100ms,w
  2843  032A  06DA               	xorwf	_temp_key,f
  2844                           
  2845                           ;app.c: 84: (tmr_temp_key = 0);
  2846  032B  01FB               	clrf	_tmr_temp_key
  2847                           
  2848                           ;app.c: 87: Led_st_cnt=Led_st_cnt + 2;;
  2849  032C  0828               	movf	_Led_st_cnt,w
  2850  032D  3E02               	addlw	2
  2851  032E  00CD               	movwf	??_app_test_100ms
  2852  032F  084D               	movf	??_app_test_100ms,w
  2853  0330  00A8               	movwf	_Led_st_cnt
  2854                           
  2855                           ;app.c: 88: resp_len = 5;
  2856  0331  3005               	movlw	5
  2857  0332  00CD               	movwf	??_app_test_100ms
  2858  0333  084D               	movf	??_app_test_100ms,w
  2859  0334  00D3               	movwf	app_test_100ms@resp_len
  2860                           
  2861                           ;app.c: 89: }
  2862  0335  2C33               	goto	l2254
  2863  0336                     l2166:	
  2864                           
  2865                           ;app.c: 91: else if((i == 16))
  2866  0336  3010               	movlw	16
  2867  0337  0654               	xorwf	app_test_100ms@i,w
  2868  0338  1D03               	btfss	3,2
  2869  0339  2C33               	goto	l2254
  2870                           
  2871                           ;app.c: 92: {
  2872                           ;app.c: 98: enc_dec(&cmd_res_data[1], (16 -1) ,temp_key);
  2873  033A  300F               	movlw	15
  2874  033B  00CD               	movwf	??_app_test_100ms
  2875  033C  084D               	movf	??_app_test_100ms,w
  2876  033D  00F4               	movwf	enc_dec@len
  2877  033E  085A               	movf	_temp_key,w
  2878  033F  00CE               	movwf	??_app_test_100ms+1
  2879  0340  084E               	movf	??_app_test_100ms+1,w
  2880  0341  00F5               	movwf	enc_dec@temp_key_0
  2881  0342  303A               	movlw	(low ((_cmd_res_data| 0+1)))& (0+255)
  2882  0343  26BA               	fcall	_enc_dec
  2883                           
  2884                           ;app.c: 100: if(CRC_Chk(&cmd_res_data[0],(16 -1),0,MacKeyTemp))
  2885  0344  300F               	movlw	15
  2886  0345  0020               	movlb	0	; select bank0
  2887  0346  00CD               	movwf	??_app_test_100ms
  2888  0347  084D               	movf	??_app_test_100ms,w
  2889  0348  00F4               	movwf	CRC_Chk@len
  2890  0349  01F5               	clrf	CRC_Chk@flg
  2891  034A  0852               	movf	app_test_100ms@MacKeyTemp,w
  2892  034B  00CE               	movwf	??_app_test_100ms+1
  2893  034C  084E               	movf	??_app_test_100ms+1,w
  2894  034D  00F6               	movwf	CRC_Chk@MacKey
  2895  034E  3039               	movlw	(low (_cmd_res_data| 0))& (0+255)
  2896  034F  2597               	fcall	_CRC_Chk
  2897  0350  3A00               	xorlw	0
  2898  0351  1903               	skipnz
  2899  0352  2C33               	goto	l2254
  2900                           
  2901                           ;app.c: 101: {
  2902                           ;app.c: 103: if(cmd_res_data[0] == 0x0C)
  2903  0353  300C               	movlw	12
  2904  0354  0020               	movlb	0	; select bank0
  2905  0355  0639               	xorwf	_cmd_res_data,w
  2906  0356  1D03               	btfss	3,2
  2907  0357  2C1B               	goto	l2250
  2908                           
  2909                           ;app.c: 104: {
  2910                           ;app.c: 105: resp_len = 16;
  2911  0358  3010               	movlw	16
  2912  0359  00CD               	movwf	??_app_test_100ms
  2913  035A  084D               	movf	??_app_test_100ms,w
  2914  035B  00D3               	movwf	app_test_100ms@resp_len
  2915                           
  2916                           ;app.c: 107: if( lock_id[3] == 0xFF )
  2917  035C  0A2C               	incf	_lock_id+3,w
  2918  035D  1D03               	btfss	3,2
  2919  035E  2BBC               	goto	l2212
  2920                           
  2921                           ;app.c: 108: {
  2922                           ;app.c: 110: uint8 temp_add_or_rand = 0xF4;
  2923  035F  30F4               	movlw	244
  2924  0360  00CD               	movwf	??_app_test_100ms
  2925  0361  084D               	movf	??_app_test_100ms,w
  2926  0362  00D0               	movwf	app_test_100ms@temp_add_or_rand
  2927                           
  2928                           ;app.c: 111: uint8 dat_idx_offset = 4;
  2929  0363  3004               	movlw	4
  2930  0364  00CD               	movwf	??_app_test_100ms
  2931  0365  084D               	movf	??_app_test_100ms,w
  2932  0366  00CF               	movwf	app_test_100ms@dat_idx_offset
  2933                           
  2934                           ;app.c: 112: uint8 cmd_idx_offset = 3;
  2935  0367  3003               	movlw	3
  2936  0368  00CD               	movwf	??_app_test_100ms
  2937  0369  084D               	movf	??_app_test_100ms,w
  2938  036A  00D1               	movwf	app_test_100ms@cmd_idx_offset
  2939  036B                     l2188:	
  2940                           ;app.c: 114: while(temp_add_or_rand <= 0xF7)
  2941                           
  2942  036B  30F8               	movlw	248
  2943  036C  0250               	subwf	app_test_100ms@temp_add_or_rand,w
  2944  036D  1803               	btfsc	3,0
  2945  036E  2B93               	goto	l2190
  2946                           
  2947                           ;app.c: 115: {
  2948                           ;app.c: 116: eep_write_char(temp_add_or_rand,cmd_res_data[cmd_idx_offset]);
  2949  036F  0851               	movf	app_test_100ms@cmd_idx_offset,w
  2950  0370  3E39               	addlw	(low (_cmd_res_data| 0))& (0+255)
  2951  0371  0086               	movwf	6
  2952  0372  0187               	clrf	7
  2953  0373  0801               	movf	1,w
  2954  0374  00CD               	movwf	??_app_test_100ms
  2955  0375  084D               	movf	??_app_test_100ms,w
  2956  0376  00F4               	movwf	eep_write_char@data
  2957  0377  0850               	movf	app_test_100ms@temp_add_or_rand,w
  2958  0378  273D               	fcall	_eep_write_char
  2959                           
  2960                           ;app.c: 117: lock_id[dat_idx_offset] = cmd_res_data[cmd_idx_offset];
  2961  0379  0020               	movlb	0	; select bank0
  2962  037A  0851               	movf	app_test_100ms@cmd_idx_offset,w
  2963  037B  3E39               	addlw	(low (_cmd_res_data| 0))& (0+255)
  2964  037C  0086               	movwf	6
  2965  037D  0187               	clrf	7
  2966  037E  0801               	movf	1,w
  2967  037F  00CD               	movwf	??_app_test_100ms
  2968  0380  084F               	movf	app_test_100ms@dat_idx_offset,w
  2969  0381  3E29               	addlw	(low (_lock_id| 0))& (0+255)
  2970  0382  0086               	movwf	6
  2971  0383  0187               	clrf	7
  2972  0384  084D               	movf	??_app_test_100ms,w
  2973  0385  0081               	movwf	1
  2974                           
  2975                           ;app.c: 118: dat_idx_offset++;
  2976  0386  3001               	movlw	1
  2977  0387  00CD               	movwf	??_app_test_100ms
  2978  0388  084D               	movf	??_app_test_100ms,w
  2979  0389  07CF               	addwf	app_test_100ms@dat_idx_offset,f
  2980                           
  2981                           ;app.c: 119: cmd_idx_offset++;
  2982  038A  3001               	movlw	1
  2983  038B  00CD               	movwf	??_app_test_100ms
  2984  038C  084D               	movf	??_app_test_100ms,w
  2985  038D  07D1               	addwf	app_test_100ms@cmd_idx_offset,f
  2986                           
  2987                           ;app.c: 120: temp_add_or_rand++;
  2988  038E  3001               	movlw	1
  2989  038F  00CD               	movwf	??_app_test_100ms
  2990  0390  084D               	movf	??_app_test_100ms,w
  2991  0391  07D0               	addwf	app_test_100ms@temp_add_or_rand,f
  2992  0392  2B6B               	goto	l2188
  2993  0393                     l2190:	
  2994                           
  2995                           ;app.c: 121: }
  2996                           ;app.c: 124: lock_id[3] = get_temp_key();
  2997  0393  272F               	fcall	_get_temp_key
  2998  0394  0020               	movlb	0	; select bank0
  2999  0395  00CD               	movwf	??_app_test_100ms
  3000  0396  084D               	movf	??_app_test_100ms,w
  3001  0397  00AC               	movwf	_lock_id+3
  3002                           
  3003                           ;app.c: 127: eep_write_char(0xF3,lock_id[3]);
  3004  0398  082C               	movf	_lock_id+3,w
  3005  0399  00CD               	movwf	??_app_test_100ms
  3006  039A  084D               	movf	??_app_test_100ms,w
  3007  039B  00F4               	movwf	eep_write_char@data
  3008  039C  30F3               	movlw	243
  3009  039D  273D               	fcall	_eep_write_char
  3010                           
  3011                           ;app.c: 131: cmd_res_data[2] = lock_id[3];
  3012  039E  0020               	movlb	0	; select bank0
  3013  039F  082C               	movf	_lock_id+3,w
  3014  03A0  00CD               	movwf	??_app_test_100ms
  3015  03A1  084D               	movf	??_app_test_100ms,w
  3016  03A2  00BB               	movwf	_cmd_res_data+2
  3017                           
  3018                           ;app.c: 132: cmd_res_data[7] = lock_id[8];
  3019  03A3  0831               	movf	_lock_id+8,w
  3020  03A4  00CD               	movwf	??_app_test_100ms
  3021  03A5  084D               	movf	??_app_test_100ms,w
  3022  03A6  00C0               	movwf	_cmd_res_data+7
  3023                           
  3024                           ;app.c: 133: cmd_res_data[8] = lock_id[9];
  3025  03A7  0832               	movf	_lock_id+9,w
  3026  03A8  00CD               	movwf	??_app_test_100ms
  3027  03A9  084D               	movf	??_app_test_100ms,w
  3028  03AA  00C1               	movwf	_cmd_res_data+8
  3029                           
  3030                           ;app.c: 134: cmd_res_data[9] = lock_id[10];
  3031  03AB  0833               	movf	_lock_id+10,w
  3032  03AC  00CD               	movwf	??_app_test_100ms
  3033  03AD  084D               	movf	??_app_test_100ms,w
  3034  03AE  00C2               	movwf	_cmd_res_data+9
  3035                           
  3036                           ;app.c: 135: cmd_res_data[10] = lock_id[11];
  3037  03AF  0834               	movf	_lock_id+11,w
  3038  03B0  00CD               	movwf	??_app_test_100ms
  3039  03B1  084D               	movf	??_app_test_100ms,w
  3040  03B2  00C3               	movwf	_cmd_res_data+10
  3041                           
  3042                           ;app.c: 136: cmd_res_data[11] = lock_id[12];
  3043  03B3  0835               	movf	_lock_id+12,w
  3044  03B4  00CD               	movwf	??_app_test_100ms
  3045  03B5  084D               	movf	??_app_test_100ms,w
  3046  03B6  00C4               	movwf	_cmd_res_data+11
  3047                           
  3048                           ;app.c: 137: cmd_res_data[12] = 0x51;
  3049  03B7  3051               	movlw	81
  3050  03B8  00CD               	movwf	??_app_test_100ms
  3051  03B9  084D               	movf	??_app_test_100ms,w
  3052  03BA  00C5               	movwf	_cmd_res_data+12
  3053  03BB  2BCE               	goto	l2216
  3054  03BC                     l2212:	
  3055                           ;app.c: 140: }
  3056                           
  3057                           ;app.c: 139: cmd_res_data[14] = lock_id[2];
  3058                           
  3059                           ;app.c: 138: cmd_res_data[13] = lock_id[14];
  3060                           
  3061                           
  3062                           ;app.c: 141: else if(!mem_compare(&cmd_res_data[2],&lock_id[3],10))
  3063  03BC  302C               	movlw	(low ((_lock_id| 0+3)))& (0+255)
  3064  03BD  00CD               	movwf	??_app_test_100ms
  3065  03BE  084D               	movf	??_app_test_100ms,w
  3066  03BF  00F4               	movwf	mem_compare@sour
  3067  03C0  300A               	movlw	10
  3068  03C1  00CE               	movwf	??_app_test_100ms+1
  3069  03C2  084E               	movf	??_app_test_100ms+1,w
  3070  03C3  00F5               	movwf	mem_compare@len
  3071  03C4  303B               	movlw	(low ((_cmd_res_data| 0+2)))& (0+255)
  3072  03C5  2616               	fcall	_mem_compare
  3073  03C6  3A00               	xorlw	0
  3074  03C7  1D03               	skipz
  3075  03C8  2C19               	goto	l2248
  3076                           
  3077                           ;app.c: 142: {
  3078                           ;app.c: 152: if(cmd_res_data[12] == 0x51 )
  3079  03C9  3051               	movlw	81
  3080  03CA  0020               	movlb	0	; select bank0
  3081  03CB  0645               	xorwf	_cmd_res_data+12,w
  3082  03CC  1D03               	btfss	3,2
  3083  03CD  2BD7               	goto	l2218
  3084  03CE                     l2216:	
  3085                           
  3086                           ;app.c: 153: {
  3087                           ;app.c: 154: cmd_res_data[13] = lock_id[14];
  3088  03CE  0837               	movf	_lock_id+14,w
  3089  03CF  00CD               	movwf	??_app_test_100ms
  3090  03D0  084D               	movf	??_app_test_100ms,w
  3091  03D1  00C6               	movwf	_cmd_res_data+13
  3092                           
  3093                           ;app.c: 155: cmd_res_data[14] = lock_id[2];
  3094  03D2  082B               	movf	_lock_id+2,w
  3095  03D3  00CD               	movwf	??_app_test_100ms
  3096  03D4  084D               	movf	??_app_test_100ms,w
  3097  03D5  00C7               	movwf	_cmd_res_data+14
  3098                           
  3099                           ;app.c: 156: }
  3100  03D6  2C1B               	goto	l2250
  3101  03D7                     l2218:	
  3102                           
  3103                           ;app.c: 158: else if( cmd_res_data[12] == 7 )
  3104  03D7  3007               	movlw	7
  3105  03D8  0645               	xorwf	_cmd_res_data+12,w
  3106  03D9  1D03               	btfss	3,2
  3107  03DA  2BE3               	goto	l2222
  3108                           
  3109                           ;app.c: 159: {
  3110                           ;app.c: 160: eep_write_char(0xF0,0xFF);
  3111  03DB  30FF               	movlw	255
  3112  03DC  00CD               	movwf	??_app_test_100ms
  3113  03DD  084D               	movf	??_app_test_100ms,w
  3114  03DE  00F4               	movwf	eep_write_char@data
  3115  03DF  30F0               	movlw	240
  3116  03E0  273D               	fcall	_eep_write_char
  3117  03E1  0001               	reset	;# 
  3118                           
  3119                           ;app.c: 162: }
  3120  03E2  2C1B               	goto	l2250
  3121  03E3                     l2222:	
  3122                           
  3123                           ;app.c: 175: else if( (cmd_res_data[12] == (3 +1)) )
  3124  03E3  3004               	movlw	4
  3125  03E4  0020               	movlb	0	; select bank0
  3126  03E5  0645               	xorwf	_cmd_res_data+12,w
  3127  03E6  1D03               	btfss	3,2
  3128  03E7  2BF4               	goto	l2228
  3129                           
  3130                           ;app.c: 176: {
  3131                           ;app.c: 177: cmd_res_data[13] = read_mem(*((uint16 *)&cmd_res_data[13]),1);
  3132  03E8  0847               	movf	_cmd_res_data+14,w
  3133  03E9  00F5               	movwf	read_mem@mem_addr+1
  3134  03EA  0846               	movf	_cmd_res_data+13,w
  3135  03EB  00F4               	movwf	read_mem@mem_addr
  3136  03EC  01F6               	clrf	read_mem@typ
  3137  03ED  0AF6               	incf	read_mem@typ,f
  3138  03EE  26E3               	fcall	_read_mem
  3139  03EF  0874               	movf	?_read_mem,w
  3140  03F0  0020               	movlb	0	; select bank0
  3141  03F1  00CD               	movwf	??_app_test_100ms
  3142  03F2  084D               	movf	??_app_test_100ms,w
  3143  03F3  2C16               	goto	L4
  3144  03F4                     l2228:	
  3145                           ;app.c: 179: }
  3146                           
  3147                           ;app.c: 178: cmd_res_data[14] = 0;
  3148                           
  3149                           
  3150                           ;app.c: 180: else if(cmd_res_data[12] == 0x11)
  3151  03F4  3011               	movlw	17
  3152  03F5  0645               	xorwf	_cmd_res_data+12,w
  3153  03F6  1D03               	btfss	3,2
  3154  03F7  2C0C               	goto	l2240
  3155                           
  3156                           ;app.c: 181: {
  3157                           ;app.c: 182: if(cmd_res_data[13])
  3158  03F8  0846               	movf	_cmd_res_data+13,w
  3159  03F9  1903               	btfsc	3,2
  3160  03FA  2C03               	goto	l2236
  3161                           
  3162                           ;app.c: 183: {
  3163                           ;app.c: 184: Led_st_cnt=Led_st_cnt + 10;;
  3164  03FB  0828               	movf	_Led_st_cnt,w
  3165  03FC  3E0A               	addlw	10
  3166  03FD  00CD               	movwf	??_app_test_100ms
  3167  03FE  084D               	movf	??_app_test_100ms,w
  3168  03FF  00A8               	movwf	_Led_st_cnt
  3169                           
  3170                           ;app.c: 185: LATAbits.LATA2=1;
  3171  0400  0022               	movlb	2	; select bank2
  3172  0401  150C               	bsf	12,2	;volatile
  3173                           
  3174                           ;app.c: 186: }
  3175  0402  2C1B               	goto	l2250
  3176  0403                     l2236:	
  3177                           
  3178                           ;app.c: 187: else
  3179                           ;app.c: 188: {
  3180                           ;app.c: 189: Led_st_cnt=Led_st_cnt + 2;;
  3181  0403  0020               	movlb	0	; select bank0
  3182  0404  0828               	movf	_Led_st_cnt,w
  3183  0405  3E02               	addlw	2
  3184  0406  00CD               	movwf	??_app_test_100ms
  3185  0407  084D               	movf	??_app_test_100ms,w
  3186  0408  00A8               	movwf	_Led_st_cnt
  3187                           
  3188                           ;app.c: 190: LATAbits.LATA2=0;
  3189  0409  0022               	movlb	2	; select bank2
  3190  040A  110C               	bcf	12,2	;volatile
  3191                           
  3192                           ;app.c: 191: }
  3193                           ;app.c: 192: }
  3194  040B  2C1B               	goto	l2250
  3195  040C                     l2240:	
  3196                           
  3197                           ;app.c: 193: else if(cmd_res_data[12] == 0x12)
  3198  040C  3012               	movlw	18
  3199  040D  0020               	movlb	0	; select bank0
  3200  040E  0645               	xorwf	_cmd_res_data+12,w
  3201  040F  1D03               	btfss	3,2
  3202  0410  2C1A               	goto	L3
  3203                           
  3204                           ;app.c: 194: {
  3205                           ;app.c: 195: cmd_res_data[13] = LATAbits.LATA2;
  3206  0411  3000               	movlw	0
  3207  0412  0022               	movlb	2	; select bank2
  3208  0413  190C               	btfsc	12,2	;volatile
  3209  0414  3001               	movlw	1
  3210  0415  0020               	movlb	0	; select bank0
  3211  0416                     L4:	
  3212  0416  00C6               	movwf	_cmd_res_data+13
  3213                           
  3214                           ;app.c: 196: cmd_res_data[14] = 0;
  3215  0417  01C7               	clrf	_cmd_res_data+14
  3216                           
  3217                           ;app.c: 197: }
  3218  0418  2C1B               	goto	l2250
  3219  0419                     l2248:	
  3220                           ;app.c: 204: }
  3221                           ;app.c: 205: }
  3222                           
  3223                           ;app.c: 198: else
  3224                           ;app.c: 199: {
  3225                           ;app.c: 200: resp_len = 0;
  3226                           
  3227                           
  3228                           ;app.c: 206: else
  3229                           ;app.c: 207: {
  3230                           ;app.c: 208: resp_len = 0;
  3231  0419  0020               	movlb	0	; select bank0
  3232  041A                     L3:	
  3233  041A  01D3               	clrf	app_test_100ms@resp_len
  3234  041B                     l2250:	
  3235                           
  3236                           ;app.c: 213: }
  3237                           ;app.c: 215: }
  3238                           ;app.c: 217: CRC_Chk(&cmd_res_data[0],(16 -1),1,MacKeyTemp);
  3239  041B  300F               	movlw	15
  3240  041C  0020               	movlb	0	; select bank0
  3241  041D  00CD               	movwf	??_app_test_100ms
  3242  041E  084D               	movf	??_app_test_100ms,w
  3243  041F  00F4               	movwf	CRC_Chk@len
  3244  0420  01F5               	clrf	CRC_Chk@flg
  3245  0421  0AF5               	incf	CRC_Chk@flg,f
  3246  0422  0852               	movf	app_test_100ms@MacKeyTemp,w
  3247  0423  00CE               	movwf	??_app_test_100ms+1
  3248  0424  084E               	movf	??_app_test_100ms+1,w
  3249  0425  00F6               	movwf	CRC_Chk@MacKey
  3250  0426  3039               	movlw	(low (_cmd_res_data| 0))& (0+255)
  3251  0427  2597               	fcall	_CRC_Chk
  3252                           
  3253                           ;app.c: 222: enc_dec(&cmd_res_data[1], (16 -1) ,temp_key);
  3254  0428  300F               	movlw	15
  3255  0429  0020               	movlb	0	; select bank0
  3256  042A  00CD               	movwf	??_app_test_100ms
  3257  042B  084D               	movf	??_app_test_100ms,w
  3258  042C  00F4               	movwf	enc_dec@len
  3259  042D  085A               	movf	_temp_key,w
  3260  042E  00CE               	movwf	??_app_test_100ms+1
  3261  042F  084E               	movf	??_app_test_100ms+1,w
  3262  0430  00F5               	movwf	enc_dec@temp_key_0
  3263  0431  303A               	movlw	(low ((_cmd_res_data| 0+1)))& (0+255)
  3264  0432  26BA               	fcall	_enc_dec
  3265  0433                     l2254:	
  3266                           ;app.c: 232: else
  3267                           ;app.c: 233: {
  3268                           
  3269                           ;app.c: 229: }
  3270                           ;app.c: 231: }
  3271                           
  3272                           ;app.c: 225: else
  3273                           ;app.c: 226: {
  3274                           
  3275                           ;app.c: 224: }
  3276                           
  3277                           
  3278                           ;app.c: 239: }
  3279                           ;app.c: 241: if (resp_len != 0)
  3280  0433  0020               	movlb	0	; select bank0
  3281  0434  0853               	movf	app_test_100ms@resp_len,w
  3282  0435  1903               	btfsc	3,2
  3283  0436  2C3D               	goto	l2258
  3284                           
  3285                           ;app.c: 242: {
  3286                           ;app.c: 244: com_send_dat(cmd_res_data,resp_len);
  3287  0437  0853               	movf	app_test_100ms@resp_len,w
  3288  0438  00CD               	movwf	??_app_test_100ms
  3289  0439  084D               	movf	??_app_test_100ms,w
  3290  043A  00F4               	movwf	com_send_dat@len
  3291  043B  3039               	movlw	(low (_cmd_res_data| 0))& (0+255)
  3292  043C  2566               	fcall	_com_send_dat
  3293  043D                     l2258:	
  3294                           ;app.c: 246: else
  3295                           ;app.c: 247: {
  3296                           
  3297                           ;app.c: 245: }
  3298                           
  3299                           
  3300                           ;app.c: 250: }
  3301                           ;app.c: 251: }
  3302                           ;app.c: 255: sw0_st = PORTAbits.RA5;
  3303  043D  3000               	movlw	0
  3304  043E  0020               	movlb	0	; select bank0
  3305  043F  1A8C               	btfsc	12,5	;volatile
  3306  0440  3001               	movlw	1
  3307  0441  00D5               	movwf	app_test_100ms@sw0_st	;volatile
  3308                           
  3309                           ;app.c: 256: if(sw0_st_prev!=sw0_st)
  3310  0442  0827               	movf	_sw0_st_prev,w
  3311  0443  0655               	xorwf	app_test_100ms@sw0_st,w	;volatile
  3312  0444  1903               	skipnz
  3313  0445  2C52               	goto	l2270
  3314                           
  3315                           ;app.c: 257: {
  3316                           ;app.c: 259: if(sw0_st)
  3317  0446  0855               	movf	app_test_100ms@sw0_st,w	;volatile
  3318  0447  1903               	btfsc	3,2
  3319  0448  2C4B               	goto	l2266
  3320                           
  3321                           ;app.c: 260: {
  3322                           ;app.c: 261: event_push(SW0_RELEASE);
  3323  0449  3001               	movlw	1
  3324  044A  2C4C               	goto	L5
  3325  044B                     l2266:	
  3326                           ;app.c: 262: }
  3327                           
  3328                           
  3329                           ;app.c: 263: else
  3330                           ;app.c: 264: {
  3331                           ;app.c: 265: event_push(SW0_PRESS);
  3332  044B  3002               	movlw	2
  3333  044C                     L5:	
  3334  044C  2636               	fcall	_event_push
  3335                           
  3336                           ;app.c: 266: }
  3337                           ;app.c: 267: sw0_st_prev=sw0_st;
  3338  044D  0020               	movlb	0	; select bank0
  3339  044E  0855               	movf	app_test_100ms@sw0_st,w	;volatile
  3340  044F  00CD               	movwf	??_app_test_100ms
  3341  0450  084D               	movf	??_app_test_100ms,w
  3342  0451  00A7               	movwf	_sw0_st_prev
  3343  0452                     l2270:	
  3344                           
  3345                           ;app.c: 268: }
  3346                           ;app.c: 271: led0_task();
  3347  0452  271D               	fcall	_led0_task
  3348  0453  0008               	return
  3349  0454                     __end_of_app_test_100ms:	
  3350                           
  3351                           	psect	text13
  3352  0776                     __ptext13:	
  3353 ;; *************** function _app_test_10ms *****************
  3354 ;; Defined at:
  3355 ;;		line 43 in file "../Src/app.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		None
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    2
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_Run_Os
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _app_test_10ms
  3385  0776                     _app_test_10ms:	
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _app_test_10ms: []
  3389  0776  0008               	return
  3390  0777                     __end_of_app_test_10ms:	
  3391                           
  3392                           	psect	text14
  3393  0777                     __ptext14:	
  3394 ;; *************** function _app_test_1ms *****************
  3395 ;; Defined at:
  3396 ;;		line 39 in file "../Src/app.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		None
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3410 ;;      Params:         0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    2
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_Run_Os
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _app_test_1ms
  3426  0777                     _app_test_1ms:	
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _app_test_1ms: []
  3430  0777  0008               	return
  3431  0778                     __end_of_app_test_1ms:	
  3432                           
  3433                           	psect	text15
  3434  06E3                     __ptext15:	
  3435 ;; *************** function _read_mem *****************
  3436 ;; Defined at:
  3437 ;;		line 326 in file "../Src/system.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  mem_addr        2    4[COMMON] unsigned int 
  3440 ;;  typ             1    6[COMMON] unsigned char 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    4[COMMON] unsigned int 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3452 ;;      Params:         3       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0
  3455 ;;      Totals:         3       0       0       0       0
  3456 ;;Total ram usage:        3 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    3
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_app_ini
  3463 ;;		_app_test_100ms
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _read_mem
  3469  06E3                     _read_mem:	
  3470                           
  3471                           ;system.c: 328: Bt_Data.ReadMem.typ = typ;
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _read_mem: [allreg]
  3475  06E3  306C               	movlw	108
  3476  06E4  0086               	movwf	6
  3477  06E5  3000               	movlw	0
  3478  06E6  0087               	movwf	7
  3479  06E7  0876               	movf	read_mem@typ,w
  3480  06E8  0081               	movwf	1
  3481                           
  3482                           ;system.c: 329: Bt_Data.ReadMem.add = mem_addr;
  3483  06E9  0875               	movf	read_mem@mem_addr+1,w
  3484  06EA  0020               	movlb	0	; select bank0
  3485  06EB  00E9               	movwf	105	;volatile
  3486  06EC  0874               	movf	read_mem@mem_addr,w
  3487  06ED  00E8               	movwf	104	;volatile
  3488                           
  3489                           ;system.c: 330: Bt_ReadData();
  3490  06EE  3182 220A 3186     	fcall	522
  3491                           
  3492                           ;system.c: 331: return(Bt_Data.ReadMem.result);
  3493  06F1  0020               	movlb	0	; select bank0
  3494  06F2  086B               	movf	107,w	;volatile
  3495  06F3  00F5               	movwf	?_read_mem+1
  3496  06F4  086A               	movf	106,w	;volatile
  3497  06F5  00F4               	movwf	?_read_mem
  3498  06F6  0008               	return
  3499  06F7                     __end_of_read_mem:	
  3500  020A                     _Bt_ReadData	set	522
  3501                           
  3502                           	psect	text16
  3503  0616                     __ptext16:	
  3504 ;; *************** function _mem_compare *****************
  3505 ;; Defined at:
  3506 ;;		line 332 in file "../Src/app.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  dest            1    wreg     PTR unsigned char 
  3509 ;;		 -> cmd_res_data(16), 
  3510 ;;  sour            1    4[COMMON] PTR unsigned char 
  3511 ;;		 -> lock_id(16), 
  3512 ;;  len             1    5[COMMON] unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  dest            1    8[COMMON] PTR unsigned char 
  3515 ;;		 -> cmd_res_data(16), 
  3516 ;;  status          1    7[COMMON] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3526 ;;      Params:         2       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0
  3528 ;;      Temps:          1       0       0       0       0
  3529 ;;      Totals:         5       0       0       0       0
  3530 ;;Total ram usage:        5 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    2
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_app_test_100ms
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _mem_compare
  3542  0616                     _mem_compare:	
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _mem_compare: [wreg-fsr1h+status,2+status,0]
  3546                           ;mem_compare@dest stored from wreg
  3547  0616  00F8               	movwf	mem_compare@dest
  3548                           
  3549                           ;app.c: 334: uint8 status = 0;
  3550  0617  01F7               	clrf	mem_compare@status
  3551  0618                     l134:	
  3552                           ;app.c: 335: while(len)
  3553                           
  3554  0618  0875               	movf	mem_compare@len,w
  3555  0619  1903               	btfsc	3,2
  3556  061A  2E34               	goto	l1556
  3557                           
  3558                           ;app.c: 336: {
  3559                           ;app.c: 337: if(*dest != *sour)
  3560  061B  0874               	movf	mem_compare@sour,w
  3561  061C  0086               	movwf	6
  3562  061D  0187               	clrf	7
  3563  061E  0878               	movf	mem_compare@dest,w
  3564  061F  0084               	movwf	4
  3565  0620  0185               	clrf	5
  3566  0621  0800               	movf	0,w
  3567  0622  0601               	xorwf	1,w
  3568  0623  1903               	skipnz
  3569  0624  2E29               	goto	l1554
  3570                           
  3571                           ;app.c: 338: {
  3572                           ;app.c: 339: status=1;
  3573  0625  01F7               	clrf	mem_compare@status
  3574  0626  0AF7               	incf	mem_compare@status,f
  3575                           
  3576                           ;app.c: 340: len = 1;
  3577  0627  01F5               	clrf	mem_compare@len
  3578  0628  0AF5               	incf	mem_compare@len,f
  3579  0629                     l1554:	
  3580                           
  3581                           ;app.c: 341: }
  3582                           ;app.c: 343: len--;
  3583  0629  3001               	movlw	1
  3584  062A  02F5               	subwf	mem_compare@len,f
  3585                           
  3586                           ;app.c: 344: sour++;
  3587  062B  3001               	movlw	1
  3588  062C  00F6               	movwf	??_mem_compare
  3589  062D  0876               	movf	??_mem_compare,w
  3590  062E  07F4               	addwf	mem_compare@sour,f
  3591                           
  3592                           ;app.c: 345: dest++;
  3593  062F  3001               	movlw	1
  3594  0630  00F6               	movwf	??_mem_compare
  3595  0631  0876               	movf	??_mem_compare,w
  3596  0632  07F8               	addwf	mem_compare@dest,f
  3597  0633  2E18               	goto	l134
  3598  0634                     l1556:	
  3599                           
  3600                           ;app.c: 346: }
  3601                           ;app.c: 347: return status;
  3602  0634  0877               	movf	mem_compare@status,w
  3603  0635  0008               	return
  3604  0636                     __end_of_mem_compare:	
  3605                           
  3606                           	psect	text17
  3607  071D                     __ptext17:	
  3608 ;; *************** function _led0_task *****************
  3609 ;; Defined at:
  3610 ;;		line 342 in file "../Src/system.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          1       0       0       0       0
  3627 ;;      Totals:         1       0       0       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_app_test_100ms
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function _led0_task
  3640  071D                     _led0_task:	
  3641                           
  3642                           ;system.c: 345: if(Led_st_cnt)
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _led0_task: [wreg+status,2+status,0]
  3646  071D  0020               	movlb	0	; select bank0
  3647  071E  0828               	movf	_Led_st_cnt,w
  3648  071F  1903               	btfsc	3,2
  3649  0720  0008               	return
  3650                           
  3651                           ;system.c: 346: {
  3652                           ;system.c: 347: Led_st_cnt--;
  3653  0721  3001               	movlw	1
  3654  0722  02A8               	subwf	_Led_st_cnt,f
  3655                           
  3656                           ;system.c: 348: LATAbits.LATA0^=1;
  3657  0723  0022               	movlb	2	; select bank2
  3658  0724  080C               	movf	12,w	;volatile
  3659  0725  3901               	andlw	1
  3660  0726  00F4               	movwf	??_led0_task
  3661  0727  3001               	movlw	1
  3662  0728  06F4               	xorwf	??_led0_task,f
  3663  0729  080C               	movf	12,w	;volatile
  3664  072A  0674               	xorwf	??_led0_task,w
  3665  072B  39FE               	andlw	-2
  3666  072C  0674               	xorwf	??_led0_task,w
  3667  072D  008C               	movwf	12	;volatile
  3668  072E  0008               	return
  3669  072F                     __end_of_led0_task:	
  3670                           
  3671                           	psect	text18
  3672  072F                     __ptext18:	
  3673 ;; *************** function _get_temp_key *****************
  3674 ;; Defined at:
  3675 ;;		line 139 in file "../Src/os.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  temp_key        1    9[COMMON] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      unsigned char 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0
  3691 ;;      Temps:          1       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    3
  3696 ;; This function calls:
  3697 ;;		_os_get_sys_tim
  3698 ;; This function is called by:
  3699 ;;		_app_test_100ms
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _get_temp_key
  3705  072F                     _get_temp_key:	
  3706                           
  3707                           ;os.c: 141: uint8 temp_key;
  3708                           ;os.c: 142: temp_key = os_get_sys_tim();
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _get_temp_key: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3712  072F  268A               	fcall	_os_get_sys_tim
  3713  0730  0874               	movf	?_os_get_sys_tim,w
  3714  0731  00F8               	movwf	??_get_temp_key
  3715  0732  0878               	movf	??_get_temp_key,w
  3716  0733  00F9               	movwf	get_temp_key@temp_key
  3717                           
  3718                           ;os.c: 143: if(temp_key == 0xFF)
  3719  0734  0A79               	incf	get_temp_key@temp_key,w
  3720  0735  1D03               	btfss	3,2
  3721  0736  2F3B               	goto	l222
  3722                           
  3723                           ;os.c: 144: {
  3724                           ;os.c: 145: temp_key = 0xAA;
  3725  0737  30AA               	movlw	170
  3726  0738  00F8               	movwf	??_get_temp_key
  3727  0739  0878               	movf	??_get_temp_key,w
  3728  073A  00F9               	movwf	get_temp_key@temp_key
  3729  073B                     l222:	
  3730                           
  3731                           ;os.c: 146: }
  3732                           ;os.c: 147: return temp_key;
  3733  073B  0879               	movf	get_temp_key@temp_key,w
  3734  073C  0008               	return
  3735  073D                     __end_of_get_temp_key:	
  3736                           
  3737                           	psect	text19
  3738  068A                     __ptext19:	
  3739 ;; *************** function _os_get_sys_tim *****************
  3740 ;; Defined at:
  3741 ;;		line 53 in file "../Src/os.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  temp_tim        4    0[BANK0l] unsigned long 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  4    4[COMMON] unsigned long 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3755 ;;      Params:         4       0       0       0       0
  3756 ;;      Locals:         0       0       4       0       0
  3757 ;;      Temps:          0       0       0       0       0
  3758 ;;      Totals:         4       0       4       0       0
  3759 ;;Total ram usage:        8 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    2
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_get_temp_key
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function _os_get_sys_tim
  3771  068A                     _os_get_sys_tim:	
  3772                           
  3773                           ;os.c: 55: uint32 temp_tim;
  3774                           ;os.c: 57: INTCONbits.GIE=0;
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _os_get_sys_tim: [wreg+fsr1l+fsr1h+status,2+status,0]
  3778  068A  138B               	bcf	11,7	;volatile
  3779                           
  3780                           ;os.c: 58: temp_tim = os.os_time_ms;
  3781  068B  3008               	movlw	8
  3782  068C  3ED6               	addlw	(low (_os| 0))& (0+255)
  3783  068D  0086               	movwf	6
  3784  068E  0187               	clrf	7
  3785  068F  3F40               	moviw [0]fsr1
  3786  0690  0020               	movlb	0	; select bank0
  3787  0691  00C9               	movwf	os_get_sys_tim@temp_tim
  3788  0692  3F41               	moviw [1]fsr1
  3789  0693  00CA               	movwf	os_get_sys_tim@temp_tim+1
  3790  0694  3F42               	moviw [2]fsr1
  3791  0695  00CB               	movwf	os_get_sys_tim@temp_tim+2
  3792  0696  3F43               	moviw [3]fsr1
  3793  0697  00CC               	movwf	os_get_sys_tim@temp_tim+3
  3794                           
  3795                           ;os.c: 59: INTCONbits.GIE=1;
  3796  0698  178B               	bsf	11,7	;volatile
  3797                           
  3798                           ;os.c: 61: return (temp_tim);
  3799  0699  084C               	movf	os_get_sys_tim@temp_tim+3,w
  3800  069A  00F7               	movwf	?_os_get_sys_tim+3
  3801  069B  084B               	movf	os_get_sys_tim@temp_tim+2,w
  3802  069C  00F6               	movwf	?_os_get_sys_tim+2
  3803  069D  084A               	movf	os_get_sys_tim@temp_tim+1,w
  3804  069E  00F5               	movwf	?_os_get_sys_tim+1
  3805  069F  0849               	movf	os_get_sys_tim@temp_tim,w
  3806  06A0  00F4               	movwf	?_os_get_sys_tim
  3807  06A1  0008               	return
  3808  06A2                     __end_of_os_get_sys_tim:	
  3809                           
  3810                           	psect	text20
  3811  0636                     __ptext20:	
  3812 ;; *************** function _event_push *****************
  3813 ;; Defined at:
  3814 ;;		line 109 in file "../Src/os.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  Event_ID        1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  Event_ID        1    5[COMMON] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3828 ;;      Params:         0       0       0       0       0
  3829 ;;      Locals:         1       0       0       0       0
  3830 ;;      Temps:          1       0       0       0       0
  3831 ;;      Totals:         2       0       0       0       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    2
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_app_test_100ms
  3839 ;;		_app_test_BG
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function _event_push
  3845  0636                     _event_push:	
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _event_push: [wreg+fsr1l+fsr1h+status,2+status,0]
  3849                           ;event_push@Event_ID stored from wreg
  3850  0636  00F5               	movwf	event_push@Event_ID
  3851                           
  3852                           ;os.c: 111: if(!str_event.overflow)
  3853  0637  0020               	movlb	0	; select bank0
  3854  0638  0826               	movf	_str_event+6,w
  3855  0639  1D03               	btfss	3,2
  3856  063A  0008               	return
  3857                           
  3858                           ;os.c: 112: {
  3859                           ;os.c: 113: str_event.queue[str_event.head] = Event_ID;
  3860  063B  0875               	movf	event_push@Event_ID,w
  3861  063C  00F4               	movwf	??_event_push
  3862  063D  0820               	movf	_str_event,w
  3863  063E  3E22               	addlw	(low ((_str_event| 0+2)))& (0+255)
  3864  063F  0086               	movwf	6
  3865  0640  0187               	clrf	7
  3866  0641  0874               	movf	??_event_push,w
  3867  0642  0081               	movwf	1
  3868                           
  3869                           ;os.c: 114: if(str_event.head<(4 - 1)){str_event.head++;}else {str_event.head = 0;}
  3870  0643  3003               	movlw	3
  3871  0644  0220               	subwf	_str_event,w
  3872  0645  1803               	skipnc
  3873  0646  2E4C               	goto	l2088
  3874  0647  3001               	movlw	1
  3875  0648  00F4               	movwf	??_event_push
  3876  0649  0874               	movf	??_event_push,w
  3877  064A  07A0               	addwf	_str_event,f
  3878  064B  2E4D               	goto	l2090
  3879  064C                     l2088:	
  3880  064C  01A0               	clrf	_str_event
  3881  064D                     l2090:	
  3882                           
  3883                           ;os.c: 116: if(str_event.head == str_event.tale)
  3884  064D  0821               	movf	_str_event+1,w
  3885  064E  0620               	xorwf	_str_event,w
  3886  064F  1D03               	skipz
  3887  0650  0008               	return
  3888                           
  3889                           ;os.c: 117: {
  3890                           ;os.c: 118: str_event.overflow=1;
  3891  0651  01A6               	clrf	_str_event+6
  3892  0652  0AA6               	incf	_str_event+6,f
  3893                           
  3894                           ;os.c: 119: }
  3895                           ;os.c: 120: }
  3896  0653  0008               	return
  3897  0654                     __end_of_event_push:	
  3898                           ;os.c: 121: else
  3899                           ;os.c: 122: {
  3900                           
  3901                           
  3902                           	psect	text21
  3903  06BA                     __ptext21:	
  3904 ;; *************** function _enc_dec *****************
  3905 ;; Defined at:
  3906 ;;		line 370 in file "../Src/app.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  data            1    wreg     PTR unsigned char 
  3909 ;;		 -> cmd_res_data(16), 
  3910 ;;  len             1    4[COMMON] unsigned char 
  3911 ;;  temp_key_0      1    5[COMMON] unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  data            1    8[COMMON] PTR unsigned char 
  3914 ;;		 -> cmd_res_data(16), 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3924 ;;      Params:         2       0       0       0       0
  3925 ;;      Locals:         1       0       0       0       0
  3926 ;;      Temps:          2       0       0       0       0
  3927 ;;      Totals:         5       0       0       0       0
  3928 ;;Total ram usage:        5 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_app_test_100ms
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _enc_dec
  3940  06BA                     _enc_dec:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _enc_dec: [wreg+fsr1l+fsr1h+status,2+status,0]
  3944                           ;enc_dec@data stored from wreg
  3945  06BA  00F8               	movwf	enc_dec@data
  3946  06BB                     l1516:	
  3947                           ;app.c: 372: while(len)
  3948                           
  3949  06BB  0874               	movf	enc_dec@len,w
  3950  06BC  1903               	btfsc	3,2
  3951  06BD  0008               	return
  3952                           
  3953                           ;app.c: 373: {
  3954                           ;app.c: 374: len--;
  3955  06BE  3001               	movlw	1
  3956  06BF  02F4               	subwf	enc_dec@len,f
  3957                           
  3958                           ;app.c: 375: data[len] ^= temp_key_0;
  3959  06C0  0875               	movf	enc_dec@temp_key_0,w
  3960  06C1  00F6               	movwf	??_enc_dec
  3961  06C2  0874               	movf	enc_dec@len,w
  3962  06C3  0778               	addwf	enc_dec@data,w
  3963  06C4  00F7               	movwf	??_enc_dec+1
  3964  06C5  0877               	movf	??_enc_dec+1,w
  3965  06C6  0086               	movwf	6
  3966  06C7  0187               	clrf	7
  3967  06C8  0876               	movf	??_enc_dec,w
  3968  06C9  0681               	xorwf	1,f
  3969                           
  3970                           ;app.c: 376: temp_key_0 ^= len;
  3971  06CA  0874               	movf	enc_dec@len,w
  3972  06CB  00F6               	movwf	??_enc_dec
  3973  06CC  0876               	movf	??_enc_dec,w
  3974  06CD  06F5               	xorwf	enc_dec@temp_key_0,f
  3975  06CE  2EBB               	goto	l1516
  3976  06CF                     __end_of_enc_dec:	
  3977                           
  3978                           	psect	text22
  3979  073D                     __ptext22:	
  3980 ;; *************** function _eep_write_char *****************
  3981 ;; Defined at:
  3982 ;;		line 333 in file "../Src/system.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  add             1    wreg     unsigned char 
  3985 ;;  data            1    4[COMMON] unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  add             1    6[COMMON] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  3997 ;;      Params:         1       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0
  3999 ;;      Temps:          1       0       0       0       0
  4000 ;;      Totals:         3       0       0       0       0
  4001 ;;Total ram usage:        3 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    3
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_app_test_100ms
  4008 ;;		_app_test_BG
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _eep_write_char
  4014  073D                     _eep_write_char:	
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _eep_write_char: [allreg]
  4018                           ;eep_write_char@add stored from wreg
  4019  073D  00F6               	movwf	eep_write_char@add
  4020                           
  4021                           ;system.c: 335: Bt_Data.EepWr.add=add;
  4022  073E  0876               	movf	eep_write_char@add,w
  4023  073F  00F5               	movwf	??_eep_write_char
  4024  0740  0875               	movf	??_eep_write_char,w
  4025  0741  0020               	movlb	0	; select bank0
  4026  0742  00E8               	movwf	104	;volatile
  4027                           
  4028                           ;system.c: 336: Bt_Data.EepWr.eep_data=data;
  4029  0743  0874               	movf	eep_write_char@data,w
  4030  0744  00E9               	movwf	105	;volatile
  4031                           
  4032                           ;system.c: 337: INTCONbits.GIE=0;
  4033  0745  138B               	bcf	11,7	;volatile
  4034                           
  4035                           ;system.c: 338: Bt_WriteEep();
  4036  0746  3182 223C 3187     	fcall	572
  4037                           
  4038                           ;system.c: 339: INTCONbits.GIE=1;
  4039  0749  178B               	bsf	11,7	;volatile
  4040  074A  0008               	return
  4041  074B                     __end_of_eep_write_char:	
  4042  023C                     _Bt_WriteEep	set	572
  4043                           
  4044                           	psect	text23
  4045  0566                     __ptext23:	
  4046 ;; *************** function _com_send_dat *****************
  4047 ;; Defined at:
  4048 ;;		line 5 in file "../Src/uart.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  ptr             1    wreg     PTR unsigned char 
  4051 ;;		 -> cmd_res_data(16), 
  4052 ;;  len             1    4[COMMON] unsigned char 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  ptr             1    6[COMMON] PTR unsigned char 
  4055 ;;		 -> cmd_res_data(16), 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4065 ;;      Params:         1       0       0       0       0
  4066 ;;      Locals:         1       0       0       0       0
  4067 ;;      Temps:          1       0       0       0       0
  4068 ;;      Totals:         3       0       0       0       0
  4069 ;;Total ram usage:        3 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    2
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_app_test_100ms
  4076 ;;		_com_send_string
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _com_send_dat
  4082  0566                     _com_send_dat:	
  4083                           
  4084                           ;incstack = 0
  4085                           ; Regs used in _com_send_dat: [wreg+fsr1l+fsr1h+status,2+status,0]
  4086                           ;com_send_dat@ptr stored from wreg
  4087  0566  00F6               	movwf	com_send_dat@ptr
  4088  0567                     l350:	
  4089                           
  4090                           ;uart.c: 21: INTCONbits.GIE=0;
  4091  0567  138B               	bcf	11,7	;volatile
  4092  0568                     l1580:	
  4093  0568  0874               	movf	com_send_dat@len,w
  4094  0569  1903               	btfsc	3,2
  4095  056A  2D93               	goto	l351
  4096                           
  4097                           ;uart.c: 9: {
  4098                           ;uart.c: 10: com.tx_buf[com.tx_head]=*ptr;
  4099                           
  4100                           ;uart.c: 8: while(len)
  4101                           
  4102                           ;uart.c: 7: INTCONbits.GIE=0;
  4103  056B  0876               	movf	com_send_dat@ptr,w
  4104  056C  0086               	movwf	6
  4105  056D  0187               	clrf	7
  4106  056E  0801               	movf	1,w
  4107  056F  00F5               	movwf	??_com_send_dat
  4108  0570  0021               	movlb	1	; select bank1
  4109  0571  0838               	movf	(_com^(0+128)+24),w
  4110  0572  3EA0               	addlw	(low (_com| 0))& (0+255)
  4111  0573  0086               	movwf	6
  4112  0574  0187               	clrf	7
  4113  0575  0875               	movf	??_com_send_dat,w
  4114  0576  0081               	movwf	1
  4115                           
  4116                           ;uart.c: 11: ptr++;
  4117  0577  3001               	movlw	1
  4118  0578  00F5               	movwf	??_com_send_dat
  4119  0579  0875               	movf	??_com_send_dat,w
  4120  057A  07F6               	addwf	com_send_dat@ptr,f
  4121                           
  4122                           ;uart.c: 12: len--;
  4123  057B  3001               	movlw	1
  4124  057C  02F4               	subwf	com_send_dat@len,f
  4125                           
  4126                           ;uart.c: 13: if(com.tx_head>=(24u - 1u)){com.tx_head = 0;}else{com.tx_head++;};
  4127  057D  3017               	movlw	23
  4128  057E  0238               	subwf	(_com^(0+128)+24),w
  4129  057F  1C03               	skipc
  4130  0580  2D83               	goto	l1572
  4131  0581  01B8               	clrf	(_com^(0+128)+24)
  4132  0582  2D87               	goto	l1574
  4133  0583                     l1572:	
  4134  0583  3001               	movlw	1
  4135  0584  00F5               	movwf	??_com_send_dat
  4136  0585  0875               	movf	??_com_send_dat,w
  4137  0586  07B8               	addwf	(_com^(0+128)+24),f
  4138  0587                     l1574:	
  4139                           
  4140                           ;uart.c: 14: if((com.tx_tale == com.tx_head))
  4141  0587  0839               	movf	(_com^(0+128)+25),w
  4142  0588  0638               	xorwf	(_com^(0+128)+24),w
  4143  0589  1D03               	skipz
  4144  058A  2D68               	goto	l1580
  4145                           
  4146                           ;uart.c: 15: {
  4147                           ;uart.c: 16: com.tx_ovrfl = 1;
  4148  058B  01BA               	clrf	(_com^(0+128)+26)
  4149  058C  0ABA               	incf	(_com^(0+128)+26),f
  4150                           
  4151                           ;uart.c: 18: (TXIE = 1);
  4152  058D  1611               	bsf	17,4	;volatile
  4153                           
  4154                           ;uart.c: 19: INTCONbits.GIE=1;
  4155  058E  178B               	bsf	11,7	;volatile
  4156  058F                     l1578:	
  4157                           ;uart.c: 20: while(com.tx_ovrfl);
  4158                           
  4159  058F  083A               	movf	(_com^(0+128)+26),w
  4160  0590  1903               	btfsc	3,2
  4161  0591  2D67               	goto	l350
  4162  0592  2D8F               	goto	l1578
  4163  0593                     l351:	
  4164                           
  4165                           ;uart.c: 22: }
  4166                           ;uart.c: 24: }
  4167                           ;uart.c: 26: (TXIE = 1);
  4168  0593  0021               	movlb	1	; select bank1
  4169  0594  1611               	bsf	17,4	;volatile
  4170                           
  4171                           ;uart.c: 27: INTCONbits.GIE=1;
  4172  0595  178B               	bsf	11,7	;volatile
  4173  0596  0008               	return
  4174  0597                     __end_of_com_send_dat:	
  4175                           
  4176                           	psect	text24
  4177  06A2                     __ptext24:	
  4178 ;; *************** function _com_rx_read_char *****************
  4179 ;; Defined at:
  4180 ;;		line 135 in file "../Src/uart.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  temp_val        1    5[COMMON] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4194 ;;      Params:         0       0       0       0       0
  4195 ;;      Locals:         1       0       0       0       0
  4196 ;;      Temps:          1       0       0       0       0
  4197 ;;      Totals:         2       0       0       0       0
  4198 ;;Total ram usage:        2 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_app_test_100ms
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _com_rx_read_char
  4210  06A2                     _com_rx_read_char:	
  4211                           
  4212                           ;uart.c: 137: uint8 temp_val=0;
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _com_rx_read_char: [wreg+fsr1l+fsr1h+status,2+status,0]
  4216  06A2  01F5               	clrf	com_rx_read_char@temp_val
  4217                           
  4218                           ;uart.c: 139: INTCONbits.GIE=0;
  4219  06A3  138B               	bcf	11,7	;volatile
  4220                           
  4221                           ;uart.c: 140: temp_val=com.rx_buf[com.rx_tale];
  4222  06A4  0021               	movlb	1	; select bank1
  4223  06A5  0854               	movf	(_com^(0+128)+52),w
  4224  06A6  3EBB               	addlw	(low ((_com| 0+27)))& (0+255)
  4225  06A7  0086               	movwf	6
  4226  06A8  0187               	clrf	7
  4227  06A9  0801               	movf	1,w
  4228  06AA  00F4               	movwf	??_com_rx_read_char
  4229  06AB  0874               	movf	??_com_rx_read_char,w
  4230  06AC  00F5               	movwf	com_rx_read_char@temp_val
  4231                           
  4232                           ;uart.c: 141: if(com.rx_tale>=(24u - 1u)){com.rx_tale = 0u;}else{com.rx_tale++;};
  4233  06AD  3017               	movlw	23
  4234  06AE  0254               	subwf	(_com^(0+128)+52),w
  4235  06AF  1C03               	skipc
  4236  06B0  2EB3               	goto	l1492
  4237  06B1  01D4               	clrf	(_com^(0+128)+52)
  4238  06B2  2EB7               	goto	l1494
  4239  06B3                     l1492:	
  4240  06B3  3001               	movlw	1
  4241  06B4  00F4               	movwf	??_com_rx_read_char
  4242  06B5  0874               	movf	??_com_rx_read_char,w
  4243  06B6  07D4               	addwf	(_com^(0+128)+52),f
  4244  06B7                     l1494:	
  4245                           
  4246                           ;uart.c: 142: INTCONbits.GIE=1;
  4247  06B7  178B               	bsf	11,7	;volatile
  4248                           
  4249                           ;uart.c: 144: return temp_val;
  4250  06B8  0875               	movf	com_rx_read_char@temp_val,w
  4251  06B9  0008               	return
  4252  06BA                     __end_of_com_rx_read_char:	
  4253                           
  4254                           	psect	text25
  4255  06F7                     __ptext25:	
  4256 ;; *************** function _com_get_rx_buf_lnt *****************
  4257 ;; Defined at:
  4258 ;;		line 58 in file "../Src/uart.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  temp_dif        1    5[COMMON] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      unsigned char 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4272 ;;      Params:         0       0       0       0       0
  4273 ;;      Locals:         1       0       0       0       0
  4274 ;;      Temps:          1       0       0       0       0
  4275 ;;      Totals:         2       0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    2
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_app_test_100ms
  4283 ;;		_com_if_received
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _com_get_rx_buf_lnt
  4289  06F7                     _com_get_rx_buf_lnt:	
  4290                           
  4291                           ;uart.c: 60: uint8 temp_dif;
  4292                           ;uart.c: 61: INTCONbits.GIE=0;
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _com_get_rx_buf_lnt: [wreg+status,2+status,0]
  4296  06F7  138B               	bcf	11,7	;volatile
  4297                           
  4298                           ;uart.c: 62: if(com.rx_head >= com.rx_tale)
  4299  06F8  0021               	movlb	1	; select bank1
  4300  06F9  0854               	movf	(_com^(0+128)+52),w
  4301  06FA  0253               	subwf	(_com^(0+128)+51),w
  4302  06FB  1C03               	skipc
  4303  06FC  2F01               	goto	l1474
  4304                           
  4305                           ;uart.c: 63: {
  4306                           ;uart.c: 64: temp_dif = (com.rx_head - com.rx_tale);
  4307  06FD  0354               	decf	(_com^(0+128)+52),w
  4308  06FE  3AFF               	xorlw	255
  4309  06FF  0753               	addwf	(_com^(0+128)+51),w
  4310  0700  2F05               	goto	L6
  4311  0701                     l1474:	
  4312                           ;uart.c: 65: }
  4313                           
  4314                           
  4315                           ;uart.c: 66: else
  4316                           ;uart.c: 67: {
  4317                           ;uart.c: 68: temp_dif = ((24u-com.rx_tale) + com.rx_head);
  4318  0701  0354               	decf	(_com^(0+128)+52),w
  4319  0702  3AFF               	xorlw	255
  4320  0703  0753               	addwf	(_com^(0+128)+51),w
  4321  0704  3E18               	addlw	24
  4322  0705                     L6:	
  4323  0705  00F4               	movwf	??_com_get_rx_buf_lnt
  4324  0706  0874               	movf	??_com_get_rx_buf_lnt,w
  4325  0707  00F5               	movwf	com_get_rx_buf_lnt@temp_dif
  4326                           
  4327                           ;uart.c: 69: }
  4328                           ;uart.c: 70: INTCONbits.GIE=1;
  4329  0708  178B               	bsf	11,7	;volatile
  4330                           
  4331                           ;uart.c: 71: return(temp_dif);
  4332  0709  0875               	movf	com_get_rx_buf_lnt@temp_dif,w
  4333  070A  0008               	return
  4334  070B                     __end_of_com_get_rx_buf_lnt:	
  4335                           
  4336                           	psect	text26
  4337  0597                     __ptext26:	
  4338 ;; *************** function _CRC_Chk *****************
  4339 ;; Defined at:
  4340 ;;		line 350 in file "../Src/app.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  dbuf            1    wreg     PTR unsigned char 
  4343 ;;		 -> cmd_res_data(16), 
  4344 ;;  len             1    4[COMMON] unsigned char 
  4345 ;;  flg             1    5[COMMON] unsigned char 
  4346 ;;  MacKey          1    6[COMMON] unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  dbuf            1    2[BANK0h] PTR unsigned char 
  4349 ;;		 -> cmd_res_data(16), 
  4350 ;;  sum             1    1[BANK0h] unsigned char 
  4351 ;;  st              1    0[BANK0h] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      unsigned char 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4361 ;;      Params:         3       0       0       0       0
  4362 ;;      Locals:         0       3       0       0       0
  4363 ;;      Temps:          1       0       0       0       0
  4364 ;;      Totals:         4       3       0       0       0
  4365 ;;Total ram usage:        7 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    2
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_app_test_100ms
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _CRC_Chk
  4377  0597                     _CRC_Chk:	
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _CRC_Chk: [wreg+fsr1l+fsr1h+status,2+status,0]
  4381                           ;CRC_Chk@dbuf stored from wreg
  4382  0597  0020               	movlb	0	; select bank0
  4383  0598  00D9               	movwf	CRC_Chk@dbuf
  4384                           
  4385                           ;app.c: 352: uint8 sum = 0,st=0;
  4386  0599  01D8               	clrf	CRC_Chk@sum
  4387  059A  01D7               	clrf	CRC_Chk@st
  4388  059B                     l2058:	
  4389                           ;app.c: 353: while(len)
  4390                           
  4391  059B  0874               	movf	CRC_Chk@len,w
  4392  059C  1903               	btfsc	3,2
  4393  059D  2DAC               	goto	l2060
  4394                           
  4395                           ;app.c: 354: {
  4396                           ;app.c: 355: sum +=*dbuf;
  4397  059E  0859               	movf	CRC_Chk@dbuf,w
  4398  059F  0086               	movwf	6
  4399  05A0  0187               	clrf	7
  4400  05A1  0801               	movf	1,w
  4401  05A2  00F7               	movwf	??_CRC_Chk
  4402  05A3  0877               	movf	??_CRC_Chk,w
  4403  05A4  07D8               	addwf	CRC_Chk@sum,f
  4404                           
  4405                           ;app.c: 356: dbuf++;
  4406  05A5  3001               	movlw	1
  4407  05A6  00F7               	movwf	??_CRC_Chk
  4408  05A7  0877               	movf	??_CRC_Chk,w
  4409  05A8  07D9               	addwf	CRC_Chk@dbuf,f
  4410                           
  4411                           ;app.c: 357: len--;
  4412  05A9  3001               	movlw	1
  4413  05AA  02F4               	subwf	CRC_Chk@len,f
  4414  05AB  2D9B               	goto	l2058
  4415  05AC                     l2060:	
  4416                           
  4417                           ;app.c: 358: }
  4418                           ;app.c: 359: if(flg)
  4419  05AC  0875               	movf	CRC_Chk@flg,w
  4420  05AD  1903               	btfsc	3,2
  4421  05AE  2DB7               	goto	l144
  4422                           
  4423                           ;app.c: 360: {
  4424                           ;app.c: 361: *dbuf = sum^MacKey;
  4425  05AF  0858               	movf	CRC_Chk@sum,w
  4426  05B0  0676               	xorwf	CRC_Chk@MacKey,w
  4427  05B1  00F7               	movwf	??_CRC_Chk
  4428  05B2  0859               	movf	CRC_Chk@dbuf,w
  4429  05B3  0086               	movwf	6
  4430  05B4  0187               	clrf	7
  4431  05B5  0877               	movf	??_CRC_Chk,w
  4432  05B6  0081               	movwf	1
  4433  05B7                     l144:	
  4434                           
  4435                           ;app.c: 362: }
  4436                           ;app.c: 363: if((sum^MacKey) == *dbuf)
  4437  05B7  0859               	movf	CRC_Chk@dbuf,w
  4438  05B8  0086               	movwf	6
  4439  05B9  0187               	clrf	7
  4440  05BA  0876               	movf	CRC_Chk@MacKey,w
  4441  05BB  0658               	xorwf	CRC_Chk@sum,w
  4442  05BC  00F7               	movwf	??_CRC_Chk
  4443  05BD  0877               	movf	??_CRC_Chk,w
  4444  05BE  0601               	xorwf	1,w
  4445  05BF  1D03               	skipz
  4446  05C0  2DC3               	goto	l2066
  4447                           
  4448                           ;app.c: 364: {
  4449                           ;app.c: 365: st = 1;
  4450  05C1  01D7               	clrf	CRC_Chk@st
  4451  05C2  0AD7               	incf	CRC_Chk@st,f
  4452  05C3                     l2066:	
  4453                           
  4454                           ;app.c: 366: }
  4455                           ;app.c: 367: return st;
  4456  05C3  0857               	movf	CRC_Chk@st,w
  4457  05C4  0008               	return
  4458  05C5                     __end_of_CRC_Chk:	
  4459                           
  4460                           	psect	intentry
  4461  02A4                     __pintentry:	
  4462 ;; *************** function _isr *****************
  4463 ;; Defined at:
  4464 ;;		line 21 in file "../Src/system.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4478 ;;      Params:         0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0
  4480 ;;      Temps:          2       0       0       0       0
  4481 ;;      Totals:         2       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    1
  4485 ;; This function calls:
  4486 ;;		_byte_received
  4487 ;;		_byte_transmit
  4488 ;; This function is called by:
  4489 ;;		Interrupt level 1
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493  02A4                     _isr:	
  4494                           
  4495                           ;incstack = 0
  4496  02A4  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4497                           
  4498                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4499  02A5  3182               	pagesel	$
  4500  02A6  0020               	movlb	0	; select bank0
  4501  02A7  087F               	movf	127,w
  4502  02A8  00F3               	movwf	??_isr+1
  4503                           
  4504                           ;system.c: 25: if(PIR0bits.TMR0IF)
  4505  02A9  1E90               	btfss	16,5	;volatile
  4506  02AA  2AB2               	goto	i1l1962
  4507                           
  4508                           ;system.c: 26: {
  4509                           ;system.c: 27: (os.time_keeper[0] = 10);
  4510  02AB  300A               	movlw	10
  4511  02AC  00F2               	movwf	??_isr
  4512  02AD  0872               	movf	??_isr,w
  4513  02AE  0021               	movlb	1	; select bank1
  4514  02AF  00E4               	movwf	(_os^(0+128)+14)
  4515                           
  4516                           ;system.c: 29: PIR0bits.TMR0IF=0;
  4517  02B0  0020               	movlb	0	; select bank0
  4518  02B1  1290               	bcf	16,5	;volatile
  4519  02B2                     i1l1962:	
  4520                           
  4521                           ;system.c: 32: }
  4522                           ;system.c: 33: if(PIR1bits.RCIF)
  4523  02B2  1E91               	btfss	17,5	;volatile
  4524  02B3  2AB6               	goto	i1l291
  4525                           
  4526                           ;system.c: 34: {
  4527                           ;system.c: 36: byte_received();
  4528  02B4  25C5               	fcall	_byte_received
  4529                           
  4530                           ;system.c: 38: }
  4531  02B5  2ABC               	goto	i1l1970
  4532  02B6                     i1l291:	
  4533                           
  4534                           ;system.c: 39: else if(PIR1bits.TXIF)
  4535  02B6  1E11               	btfss	17,4	;volatile
  4536  02B7  2ABC               	goto	i1l1970
  4537                           
  4538                           ;system.c: 40: {
  4539                           ;system.c: 41: if(TXIE)
  4540  02B8  0021               	movlb	1	; select bank1
  4541  02B9  1E11               	btfss	17,4	;volatile
  4542  02BA  2ABC               	goto	i1l1970
  4543                           
  4544                           ;system.c: 42: {
  4545                           ;system.c: 43: byte_transmit();
  4546  02BB  25F2               	fcall	_byte_transmit
  4547  02BC                     i1l1970:	
  4548                           
  4549                           ;system.c: 44: }
  4550                           ;system.c: 49: }
  4551                           ;system.c: 50: if(TMR2IF)
  4552  02BC  0020               	movlb	0	; select bank0
  4553  02BD  1891               	btfsc	17,1	;volatile
  4554                           
  4555                           ;system.c: 51: {
  4556                           ;system.c: 52: TMR2IF=0;
  4557  02BE  1091               	bcf	17,1	;volatile
  4558                           
  4559                           ;system.c: 53: }
  4560                           ;system.c: 54: if(ADIF)
  4561  02BF  1B11               	btfsc	17,6	;volatile
  4562                           
  4563                           ;system.c: 55: {
  4564                           ;system.c: 59: ADIF=0;
  4565  02C0  1311               	bcf	17,6	;volatile
  4566  02C1  0873               	movf	??_isr+1,w
  4567  02C2  00FF               	movwf	127
  4568  02C3  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4569  02C4  0009               	retfie
  4570  02C5                     __end_of_isr:	
  4571                           
  4572                           	psect	text28
  4573  05F2                     __ptext28:	
  4574 ;; *************** function _byte_transmit *****************
  4575 ;; Defined at:
  4576 ;;		line 188 in file "../Src/uart.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4590 ;;      Params:         0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          1       0       0       0       0
  4593 ;;      Totals:         1       0       0       0       0
  4594 ;;Total ram usage:        1 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_isr
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _byte_transmit
  4605  05F2                     _byte_transmit:	
  4606                           
  4607                           ;uart.c: 190: if((com.tx_tale != com.tx_head) || com.tx_ovrfl )
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _byte_transmit: [wreg+fsr1l+fsr1h+status,2+status,0]
  4611  05F2  0021               	movlb	1	; select bank1
  4612  05F3  0839               	movf	(_com^(0+128)+25),w
  4613  05F4  0638               	xorwf	(_com^(0+128)+24),w
  4614  05F5  1903               	btfsc	3,2
  4615  05F6  083A               	movf	(_com^(0+128)+26),w
  4616  05F7  1903               	btfsc	3,2
  4617  05F8  2E14               	goto	i1l397
  4618                           
  4619                           ;uart.c: 191: {
  4620                           ;uart.c: 192: TX1REG = com.tx_buf[com.tx_tale];
  4621  05F9  0839               	movf	(_com^(0+128)+25),w
  4622  05FA  3EA0               	addlw	(low (_com| 0))& (0+255)
  4623  05FB  0086               	movwf	6
  4624  05FC  0187               	clrf	7
  4625  05FD  0801               	movf	1,w
  4626  05FE  0023               	movlb	3	; select bank3
  4627  05FF  009A               	movwf	26	;volatile
  4628                           
  4629                           ;uart.c: 193: if(com.tx_tale>=(24u - 1u)){ com.tx_tale = 0u;}else{com.tx_tale++;};
  4630  0600  3017               	movlw	23
  4631  0601  0021               	movlb	1	; select bank1
  4632  0602  0239               	subwf	(_com^(0+128)+25),w
  4633  0603  1C03               	skipc
  4634  0604  2E07               	goto	i1l1944
  4635  0605  01B9               	clrf	(_com^(0+128)+25)
  4636  0606  2E0B               	goto	i1l1946
  4637  0607                     i1l1944:	
  4638  0607  3001               	movlw	1
  4639  0608  00F0               	movwf	??_byte_transmit
  4640  0609  0870               	movf	??_byte_transmit,w
  4641  060A  07B9               	addwf	(_com^(0+128)+25),f
  4642  060B                     i1l1946:	
  4643                           
  4644                           ;uart.c: 194: if((com.tx_tale == com.tx_head))
  4645  060B  0839               	movf	(_com^(0+128)+25),w
  4646  060C  0638               	xorwf	(_com^(0+128)+24),w
  4647  060D  1903               	btfsc	3,2
  4648                           
  4649                           ;uart.c: 195: {
  4650                           ;uart.c: 196: (TXIE = 0);
  4651  060E  1211               	bcf	17,4	;volatile
  4652                           
  4653                           ;uart.c: 197: }
  4654                           ;uart.c: 198: if(com.tx_ovrfl)
  4655  060F  083A               	movf	(_com^(0+128)+26),w
  4656  0610  1903               	btfsc	3,2
  4657  0611  0008               	return
  4658                           
  4659                           ;uart.c: 199: {
  4660                           ;uart.c: 200: com.tx_ovrfl=0;
  4661  0612  01BA               	clrf	(_com^(0+128)+26)
  4662                           
  4663                           ;uart.c: 201: }
  4664                           ;uart.c: 202: }
  4665  0613  0008               	return
  4666  0614                     i1l397:	
  4667                           
  4668                           ;uart.c: 203: else
  4669                           ;uart.c: 204: {
  4670                           ;uart.c: 205: (TXIE = 0);
  4671  0614  1211               	bcf	17,4	;volatile
  4672  0615  0008               	return
  4673  0616                     __end_of_byte_transmit:	
  4674                           
  4675                           	psect	text29
  4676  05C5                     __ptext29:	
  4677 ;; *************** function _byte_received *****************
  4678 ;; Defined at:
  4679 ;;		line 170 in file "../Src/uart.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;		None
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  temp_data       1    1[COMMON] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK2
  4693 ;;      Params:         0       0       0       0       0
  4694 ;;      Locals:         1       0       0       0       0
  4695 ;;      Temps:          1       0       0       0       0
  4696 ;;      Totals:         2       0       0       0       0
  4697 ;;Total ram usage:        2 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_isr
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _byte_received
  4708  05C5                     _byte_received:	
  4709                           
  4710                           ;uart.c: 172: uint8 temp_data;
  4711                           ;uart.c: 173: temp_data = RC1REG;
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in _byte_received: [wreg+fsr1l+fsr1h+status,2+status,0]
  4715  05C5  0023               	movlb	3	; select bank3
  4716  05C6  0819               	movf	25,w	;volatile
  4717  05C7  00F0               	movwf	??_byte_received
  4718  05C8  0870               	movf	??_byte_received,w
  4719  05C9  00F1               	movwf	byte_received@temp_data
  4720                           
  4721                           ;uart.c: 174: Led_st_cnt=Led_st_cnt + 2;;
  4722  05CA  0020               	movlb	0	; select bank0
  4723  05CB  0828               	movf	_Led_st_cnt,w
  4724  05CC  3E02               	addlw	2
  4725  05CD  00F0               	movwf	??_byte_received
  4726  05CE  0870               	movf	??_byte_received,w
  4727  05CF  00A8               	movwf	_Led_st_cnt
  4728                           
  4729                           ;uart.c: 175: if(!((com.rx_ovrfl)&& ((com.rx_tale == com.rx_head))))
  4730  05D0  0021               	movlb	1	; select bank1
  4731  05D1  0855               	movf	(_com^(0+128)+53),w
  4732  05D2  1903               	btfsc	3,2
  4733  05D3  2DD8               	goto	i1l1920
  4734  05D4  0854               	movf	(_com^(0+128)+52),w
  4735  05D5  0653               	xorwf	(_com^(0+128)+51),w
  4736  05D6  1903               	skipnz
  4737  05D7  0008               	return
  4738  05D8                     i1l1920:	
  4739                           
  4740                           ;uart.c: 176: {
  4741                           ;uart.c: 177: com.rx_ovrfl = 0;
  4742  05D8  01D5               	clrf	(_com^(0+128)+53)
  4743                           
  4744                           ;uart.c: 178: com.rx_buf[com.rx_head] = temp_data;
  4745  05D9  0871               	movf	byte_received@temp_data,w
  4746  05DA  00F0               	movwf	??_byte_received
  4747  05DB  0853               	movf	(_com^(0+128)+51),w
  4748  05DC  3EBB               	addlw	(low ((_com| 0+27)))& (0+255)
  4749  05DD  0086               	movwf	6
  4750  05DE  0187               	clrf	7
  4751  05DF  0870               	movf	??_byte_received,w
  4752  05E0  0081               	movwf	1
  4753                           
  4754                           ;uart.c: 179: if(com.rx_head>=(24u - 1u)){com.rx_head = 0u;}else{com.rx_head++;};
  4755  05E1  3017               	movlw	23
  4756  05E2  0253               	subwf	(_com^(0+128)+51),w
  4757  05E3  1C03               	skipc
  4758  05E4  2DE7               	goto	i1l1928
  4759  05E5  01D3               	clrf	(_com^(0+128)+51)
  4760  05E6  2DEB               	goto	i1l1930
  4761  05E7                     i1l1928:	
  4762  05E7  3001               	movlw	1
  4763  05E8  00F0               	movwf	??_byte_received
  4764  05E9  0870               	movf	??_byte_received,w
  4765  05EA  07D3               	addwf	(_com^(0+128)+51),f
  4766  05EB                     i1l1930:	
  4767                           
  4768                           ;uart.c: 180: if((com.rx_tale == com.rx_head))
  4769  05EB  0854               	movf	(_com^(0+128)+52),w
  4770  05EC  0653               	xorwf	(_com^(0+128)+51),w
  4771  05ED  1D03               	skipz
  4772  05EE  0008               	return
  4773                           
  4774                           ;uart.c: 181: {
  4775                           ;uart.c: 182: com.rx_ovrfl = 1;
  4776  05EF  01D5               	clrf	(_com^(0+128)+53)
  4777  05F0  0AD5               	incf	(_com^(0+128)+53),f
  4778  05F1  0008               	return
  4779  05F2                     __end_of_byte_received:	
  4780  007E                     btemp	set	126	;btemp
  4781  007E                     int$flags	set	126
  4782  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0h            3      3       3
    BANK0l           72     14      56
    BANK1            80      0      72
    BANK2            80      0       0

Pointer List with Targets:

    com_send_dat@ptr	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    S435Str_Flh$flashWordArray	PTR unsigned int  size(1) Largest target is 0

    Bt_Data.Flh.flashWordArray	PTR unsigned int  size(1) Largest target is 0

    S429Str_Com$ptr	PTR unsigned char  size(1) Largest target is 0

    Bt_Data.Com.ptr	PTR unsigned char  size(1) Largest target is 0

    enc_dec@data	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    CRC_Chk@dbuf	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    mem_compare@sour	PTR unsigned char  size(1) Largest target is 16
		 -> lock_id(BANK0l[16]), 

    mem_compare@dest	PTR unsigned char  size(1) Largest target is 16
		 -> cmd_res_data(BANK0l[16]), 

    S122STR_OS$pro_ptr	PTR FTN()void [4] size(2) Largest target is 1
		 -> app_test_1000ms(), app_test_100ms(), app_test_10ms(), app_test_1ms(), 

    os.pro_ptr	PTR FTN()void [4] size(2) Largest target is 1
		 -> app_test_1000ms(), app_test_100ms(), app_test_10ms(), app_test_1ms(), 


Critical Paths under _main in COMMON

    _main->_Sys_Ini
    _Sys_Ini->_app_ini
    _app_ini->_read_mem
    _app_test_BG->_eep_write_char
    _app_test_100ms->_get_temp_key
    _get_temp_key->_os_get_sys_tim

Critical Paths under _isr in COMMON

    _isr->_byte_received

Critical Paths under _main in BANK0h

    _Run_Os->_app_test_BG
    _app_test_100ms->_CRC_Chk

Critical Paths under _isr in BANK0h

    None.

Critical Paths under _main in BANK0l

    _main->_Run_Os
    _Sys_Ini->_app_ini
    _Run_Os->_app_test_100ms
    _get_temp_key->_os_get_sys_tim

Critical Paths under _isr in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4453
                             _Run_Os
                            _Sys_Ini
 ---------------------------------------------------------------------------------
 (1) _Sys_Ini                                              2     2      0     509
                                              8 COMMON     2     2      0
                            _Ini_Dio
                     _Ini_Oscillator
                        _Ini_Timer_0
                            _app_ini
                            _com_ini
 ---------------------------------------------------------------------------------
 (2) _com_ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_ini                                              5     5      0     475
                                              7 COMMON     1     1      0
                                              0 BANK0l     4     4      0
                           _read_mem
 ---------------------------------------------------------------------------------
 (2) _Ini_Timer_0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ini_Oscillator                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ini_Dio                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run_Os                                               1     1      0    3944
                                             13 BANK0l     1     1      0
                    _app_test_1000ms *
                     _app_test_100ms *
                      _app_test_10ms *
                       _app_test_1ms *
                        _app_test_BG
                 _com_get_tx_buf_lnt
 ---------------------------------------------------------------------------------
 (2) _com_get_tx_buf_lnt                                   2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _app_test_BG                                          5     5      0     540
                                              7 COMMON     2     2      0
                                              0 BANK0h     3     3      0
                     _eep_write_char
                         _event_push
                         _event_read
 ---------------------------------------------------------------------------------
 (3) _event_read                                           2     2      0      37
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _app_test_1ms                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_test_10ms                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _app_test_100ms                                       9     9      0    3207
                                              4 BANK0l     9     9      0
                            _CRC_Chk
                 _com_get_rx_buf_lnt
                   _com_rx_read_char
                       _com_send_dat
                     _eep_write_char
                            _enc_dec
                         _event_push
                       _get_temp_key
                          _led0_task
                        _mem_compare
                           _read_mem
 ---------------------------------------------------------------------------------
 (3) _read_mem                                             3     0      3     370
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) _mem_compare                                          5     3      2     252
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _led0_task                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _get_temp_key                                         2     2      0     102
                                              8 COMMON     2     2      0
                     _os_get_sys_tim
 ---------------------------------------------------------------------------------
 (4) _os_get_sys_tim                                       8     4      4      34
                                              4 COMMON     4     0      4
                                              0 BANK0l     4     4      0
 ---------------------------------------------------------------------------------
 (3) _event_push                                           2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _enc_dec                                              5     3      2     428
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _eep_write_char                                       3     2      1     370
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _com_send_dat                                         3     2      1     234
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _com_rx_read_char                                     2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _com_get_rx_buf_lnt                                   2     2      0      24
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CRC_Chk                                              7     4      3     856
                                              4 COMMON     4     1      3
                                              0 BANK0h     3     3      0
 ---------------------------------------------------------------------------------
 (2) _app_test_1000ms                                      7     7      0     173
                                              4 COMMON     2     2      0
                                              0 BANK0l     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              2 COMMON     2     2      0
                      _byte_received
                      _byte_transmit
 ---------------------------------------------------------------------------------
 (6) _byte_transmit                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _byte_received                                        2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Run_Os
     _app_test_1000ms *
     _app_test_100ms *
       _CRC_Chk
       _com_get_rx_buf_lnt
       _com_rx_read_char
       _com_send_dat
       _eep_write_char
         _Bt_WriteEep
       _enc_dec
       _event_push
       _get_temp_key
         _os_get_sys_tim
       _led0_task
       _mem_compare
       _read_mem
         _Bt_ReadData
     _app_test_10ms *
     _app_test_1ms *
     _app_test_BG *
       _eep_write_char
         _Bt_WriteEep
       _event_push
       _event_read
     _com_get_tx_buf_lnt *
   _Sys_Ini
     _Ini_Dio
     _Ini_Oscillator
     _Ini_Timer_0
     _app_ini
       _read_mem
         _Bt_ReadData
     _com_ini

 _isr (ROOT)
   _byte_received
   _byte_transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      90       4        0.0%
BITBANK0h            3      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0l           48      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK0h               3      3       3       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK0l              48      E      38       8       77.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK1            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK1               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK2            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK2               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
DATA                 0      0      90      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 08 19:39:48 2020

      __size_of_app_test_1000ms 0050                     __CFG_CP$OFF 0000                   ?_get_temp_key 0070  
                            _os 00D6                             l110 0478                             l106 0469  
                           l115 0492                             l131 04EB                             l222 073B  
                           l134 0618                             l127 04BC                             l144 05B7  
                           l218 066E                             l350 0567                             l190 04EC  
                           l351 0593                    __CFG_CPD$OFF 0000                  ??_app_test_1ms 0074  
                           _j_1 007A                   ??_Ini_Timer_0 0074                             _com 00A0  
                           _isr 02A4                             wreg 0009                 __end_of_CRC_Chk 05C5  
                  _tmr_temp_key 007B                    __CFG_LVP$OFF 0000                            l2106 066D  
                          l2060 05AC                            l2212 03BC                            l2108 066F  
                          l2222 03E3                            l2150 0311                            l2142 02FB  
                          l2310 04B4                            l2302 04A5                            l2240 040C  
                          l2216 03CE                            l2136 02ED                            l2128 0546  
                          l2066 05C3                            l2058 059B                            l2090 064D  
                          l2218 03D7                            l2250 041B                            l2146 0308  
                          l2306 04AD                            l1516 06BB                            l2236 0403  
                          l2228 03F4                            l2316 04CF                            l2324 04E0  
                          l2270 0452                            l2190 0393                            l2254 0433  
                          l2166 0336                            l2088 064C                            l2248 0419  
                          l2352 0678                            l1474 0701                            l1554 0629  
                          l2266 044B                            l2258 043D                            l2290 0485  
                          l2282 0470                            l1492 06B3                            l1572 0583  
                          l1580 0568                            l1556 0634                            l2188 036B  
                          l2276 0461                            l1494 06B7                            l1574 0587  
                          l2294 048B                            l2390 0528                            l2382 0515  
                          l2374 04F5                            l1578 058F                            l2386 051E  
                ??_com_send_dat 0075                            l2388 0527                            l1838 06DA  
               ??_app_test_10ms 0074                            _ADIF 008E                            ?_isr 0070  
                          _LATA 010C                            _RCIE 048D               enc_dec@temp_key_0 0075  
                          _TXIE 048C                            _WPUA 020C                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000                            _main 076E                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                 __CFG_BORV$LOW 0000                            start 02C5                    ?_mem_compare 0074  
                 __CFG_CSWEN$ON 0000                 __end_of_Ini_Dio 0757                  ??_get_temp_key 0078  
                         ??_isr 0072                ??_app_test_100ms 004D                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                 __end_of_Sys_Ini 068A                  __CFG_DEBUG$OFF 0000  
                         i1l291 02B6                           i1l397 0614                           _TMR0H 0016  
                         _TMR0L 0015                           _TRISA 008C                     _Bt_ReadData 020A  
               __end_of_enc_dec 06CF                 __end_of_app_ini 0566                 __end_of_com_ini 0774  
       __size_of_os_get_sys_tim 0018                      _Led_st_cnt 0028             __end_of_Ini_Timer_0 0762  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __end_of_sys_ver F0F3                 __end_of_sys_typ F0FD                  __CFG_MCLRE$OFF 0000  
                   _Bt_WriteEep 023C                 __initialization 02C6      __end_of_com_get_rx_buf_lnt 070B  
                  __end_of_main 0771      __end_of_com_get_tx_buf_lnt 06E3                          ??_main 007A  
       event_read@temp_event_id 0075                       ??_CRC_Chk 0077               ??_app_test_1000ms 0074  
        __size_of_byte_received 002D                          _ANSELA 018C                          _RC1REG 0199  
                        i1l1920 05D8                          i1l1930 05EB                          i1l1928 05E7  
                        i1l1944 0607                          i1l1946 060B                          i1l1970 02BC  
                        i1l1962 02B2                          _TMR2IF 0089                          _TX1REG 019A  
                     ??_Ini_Dio 0074            __size_of_app_test_BG 0048            __end_of_app_test_1ms 0778  
              ??_Ini_Oscillator 0074                  __CFG_PWRTE$OFF 0000          __size_of_byte_transmit 0024  
                        _Run_Os 04EC       __size_of_com_rx_read_char 0018                  __CFG_STVREN$ON 0000  
                     ??_Sys_Ini 0078                    Sys_Ini@count 0078            __end_of_com_send_dat 0597  
              __end_of_read_mem 06F7                       ??_enc_dec 0076                       ??_app_ini 0077  
                     ??_com_ini 0074                    __pdataBANK0l 005A                     _Ini_Timer_0 0757  
                   read_mem@typ 0076            __end_of_get_temp_key 073D                       CRC_Chk@st 0057  
       __end_of__initialization 02E1                 com_send_dat@len 0074                 com_send_dat@ptr 0076  
                __pcstackBANK0h 0057                  __pcstackBANK0l 0049                  __pcstackCOMMON 0070  
                  __pidataBANK1 070B                   _byte_received 05C5            __size_of_mem_compare 0020  
            __size_of_led0_task 0012                   _byte_transmit 05F2                  _os_get_sys_tim 068A  
                    __pbssBANK1 00A0                  mem_compare@len 0075        app_test_1000ms@temp_time 004D  
                    __pmaintext 076E                         ?_Run_Os 0070                  ?_byte_received 0070  
                  _cmd_res_data 0039                 __CFG_PPS1WAY$ON 0000                      __pintentry 02A4  
                ?_byte_transmit 0070          __end_of_os_get_sys_tim 06A2                         _CPUDOZE 0918  
                       _CRC_Chk 0597           __size_of_app_test_1ms 0001                         _Bt_Data 0068  
            eep_write_char@data 0074               __end_of_led0_task 072F           __end_of_app_test_10ms 0777  
                     ?_read_mem 0074                         _Ini_Dio 074B         __size_of_eep_write_char 000E  
         __size_of_com_send_dat 0031                _com_rx_read_char 06A2                 __size_of_Run_Os 0044  
               _app_test_1000ms 0454                      _event_read 0654                         _Sys_Ini 0671  
                    _event_push 0636                 _app_test_BG$176 0057                         _enc_dec 06BA  
                       __ptext1 0671                         _app_ini 0530                         __ptext2 0771  
                       __ptext3 0530                         __ptext4 0757                         __ptext5 0775  
                       __ptext6 074B                         __ptext7 04EC                         __ptext8 06CF  
                       __ptext9 04A4                         _com_ini 0771                 ?_os_get_sys_tim 0074  
                  __size_of_isr 0021              _com_get_rx_buf_lnt 06F7                         _lock_id 0029  
                  _app_test_1ms 0777           __size_of_get_temp_key 000E                         clrloop0 0769  
           ?_com_get_rx_buf_lnt 0070            end_of_initialization 02E1              _com_get_tx_buf_lnt 06CF  
                       _sys_ver F0F2                         _sys_typ F0FC                    _com_send_dat 0566  
                       init_ram 0762                         initloop 0763                      ??_read_mem 0077  
           ?_com_get_tx_buf_lnt 0070             _app_test_1000ms$172 0049             _app_test_1000ms$173 004B  
               ??_byte_received 0070                      enc_dec@len 0074            ??_com_get_rx_buf_lnt 0074  
                  _get_temp_key 072F                 ??_byte_transmit 0070                       _PORTAbits 000C  
               app_ini@dest_add 0049                      CRC_Chk@flg 0075                      CRC_Chk@len 0074  
                    CRC_Chk@sum 0058        com_rx_read_char@temp_val 0075            ??_com_get_tx_buf_lnt 0074  
                  ?_Ini_Timer_0 0070                read_mem@mem_addr 0074         __size_of_app_test_100ms 0170  
              __CFG_FEXTOSC$OFF 0000                   ??_app_test_BG 0077                 app_ini@temp_add 004B  
       __end_of_app_test_1000ms 04A4                     ?_event_read 0070                     ?_event_push 0070  
                __end_of_Run_Os 0530                   __pidataBANK0l 0774             start_initialization 02C6  
                   __end_of_isr 02C5                 __p_sys_ver_text F0F2               mem_compare@status 0077  
                _eep_write_char 073D                 __p_sys_typ_text F0FC                   ??_mem_compare 0076  
           __end_of_app_test_BG 04EC                __CFG_LPBOREN$OFF 0000                        ??_Run_Os 0056  
                   __pdataBANK1 00D6         __size_of_Ini_Oscillator 0001          byte_received@temp_data 0071  
                      ?_CRC_Chk 0074                     __pbssBANK0l 0020                     __pbssCOMMON 007A  
                     ___latbits 0000        __end_of_com_rx_read_char 06BA                 mem_compare@dest 0078  
    com_get_tx_buf_lnt@temp_dif 0075          __end_of_eep_write_char 074B             __size_of_event_read 001D  
               mem_compare@sour 0074             __size_of_event_push 001E                        ?_Ini_Dio 0070  
              ?_app_test_1000ms 0070                       _led0_task 071D              event_push@Event_ID 0075  
             __size_of_read_mem 0014                        ?_Sys_Ini 0070                ??_os_get_sys_tim 0078  
           __end_of_mem_compare 0636                        ?_enc_dec 0074                        ?_app_ini 0070  
                      ?_com_ini 0070               eep_write_char@add 0076    app_test_100ms@dat_idx_offset 004F  
          app_test_100ms@sw0_st 0055            __size_of_Ini_Timer_0 000B                  _app_test_100ms 02E4  
               ?_eep_write_char 0074                     _app_test_BG 04A4                        _LATAbits 010C  
                     clear_ram0 0768                        _PIE0bits 0090                      ?_led0_task 0070  
                      _PIR0bits 0010                        _PIR1bits 0011                 _sys_ver_absaddr F0F2  
        __size_of_app_test_10ms 0001                __size_of_CRC_Chk 002E          __end_of_app_test_100ms 0454  
                     _str_event 0020        app_test_100ms@MacKeyTemp 0052          os_get_sys_tim@temp_tim 0049  
              __size_of_Ini_Dio 000C          app_test_100ms@resp_len 0053                     _mem_compare 0616  
         __end_of_byte_received 05F2                    ??_event_read 0074                    ??_event_push 0074  
   __size_of_com_get_rx_buf_lnt 0014                     _sw0_st_prev 0027                __size_of_Sys_Ini 0019  
                _Ini_Oscillator 0775           __end_of_byte_transmit 0616                __size_of_enc_dec 0015  
              __size_of_app_ini 0036                __size_of_com_ini 0003    app_test_100ms@cmd_idx_offset 0051  
   __size_of_com_get_tx_buf_lnt 0014                      _T0CON0bits 0017                      _T0CON1bits 0018  
               ?_app_test_100ms 0070                        __ptext10 0654                        __ptext11 0454  
                      __ptext20 0636                        __ptext12 02E4                        __ptext21 06BA  
                      __ptext13 0776                        __ptext22 073D                        __ptext14 0777  
                      __ptext23 0566                        __ptext15 06E3                        __ptext24 06A2  
                      __ptext16 0616                        __ptext25 06F7                        __ptext17 071D  
                      __ptext26 0597                        __ptext18 072F                        __ptext19 068A  
                      __ptext28 05F2                        __ptext29 05C5            app_test_BG@temp_time 0059  
            __end_of_event_read 0671              __end_of_event_push 0654                   __size_of_main 0003  
                 _app_test_10ms 0776                        _read_mem 06E3                     ??_led0_task 0074  
          get_temp_key@temp_key 0079                        _temp_key 005A                        _tmr_1ses 007C  
               _sys_typ_absaddr F0FC                        int$flags 007E          __end_of_Ini_Oscillator 0776  
                    _INTCONbits 000B                   CRC_Chk@MacKey 0076                 app_test_100ms@i 0054  
             __CFG_BOREN$SBOREN 0000               ?_com_rx_read_char 0070                        intlevel1 0000  
            ??_com_rx_read_char 0074                  ?_app_test_10ms 0070               __CFG_CLKOUTEN$OFF 0000  
app_test_100ms@temp_add_or_rand 0050                     enc_dec@data 0078                 ?_Ini_Oscillator 0070  
                 ?_app_test_1ms 0070                ??_eep_write_char 0075      com_get_rx_buf_lnt@temp_dif 0075  
                   CRC_Chk@dbuf 0059                   ?_com_send_dat 0074                    ?_app_test_BG 0070  
